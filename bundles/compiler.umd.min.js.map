{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","isComponent","ProviderAstType","directivesWithComponentFirst","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","entries","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","json","deserializeSummaries","symbolCache","libraryFileName","deserializer","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","files","_analyzeFilesIncludingNonProgramFiles","mergeAnalyzedFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","transitiveModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","calculateGenFileName","rootDir","fileNameParts","rootDirParts","pop","min","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","styles","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","anim","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","errorString","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBindings","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","isParentTemplate","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","requestorSourceSpan","foundLocal","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","suppliedParameters","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","elementProperties","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","expanded","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","DYNAMIC_VAR_NAME","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","astWithSource","inter","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","pipeExpr","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","summaries","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","emitBasicStubs","_emitStubs","emitTypeCheckStubs","generatedFiles","genFile","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","_createNgFactoryStub","_createExternalStyleSheetNgFactoryStubs","_createNgSummaryStub","_createOutputContext","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_codegenSourceModule","dirSymbol","normalizedUrl","enableSummariesForJit","outputCtx_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","sourceModules","_compileImplFile","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","ANGULAR_ROUTER","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","ROUTES","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","topLevelSymbolNames_1","origins_1","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,cAUJ,IAAI0sD,uBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ12D,yBAA4B,SAAU97B,QAEtC,QAAS87B,4BACL,GAAI7D,OAAQj4B,OAAO0iC,KAAKntC,OAASA,IAqCjC,OApCA0iC,OAAMw6D,WACNR,OAAO91F,QAAQ,SAAUu2F,aACrB,GAAqBh3F,SACjBkT,GAAK8jF,YAAY5zF,MAAM,KAAM6zF,QAAU/jF,GAAG,GAAIgkF,cAAgBhkF,GAAG,GAChDikF,WAAaD,cAAc9zF,MAAM,KAClDiQ,GAAK4jF,QAAQ7zF,MAAM,KAAMg0F,UAAY/jF,GAAG,GAAIgkF,UAAYhkF,GAAG,EAC/D+jF,WAAUh0F,MAAM,KAAK3C,QAAQ,SAAUkZ,KAAO,MAAO4iB,OAAMw6D,QAAQp9E,IAAIrS,eAAiBtH,MACxF,IAAqBs3F,WAAYD,WAAa96D,MAAMw6D,QAAQM,UAAU/vF,cAClEgwF,YACAj9F,OAAOw2B,KAAKymE,WAAW72F,QAAQ,SAAUwoB,MAAQjpB,KAAKipB,MAAQquE,UAAUruE,QAE5EkuE,WAAW12F,QAAQ,SAAU82F,UACzB,GAAIA,SAAS57F,OAAS,EAClB,OAAQ47F,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACDv3F,KAAKu3F,SAASz3F,UAAU,IAAMq2F,OAC9B,MACJ,KAAK,IACDn2F,KAAKu3F,SAASz3F,UAAU,IAAMs2F,MAC9B,MACJ,KAAK,IACDp2F,KAAKu3F,SAASz3F,UAAU,IAAMw2F,MAC9B,MACJ,SACIt2F,KAAKu3F,UAAYlB,YAK9B95D,MAmNX,MA1PAziC,WAAUsmC,yBAA0B97B,QA+CpC87B,yBAAyBhmC,UAAUo9F,YAMnC,SAAUnxF,QAAS2mB,SAAUyqE,aACzB,GAAIA,YAAYtsE,KAAK,SAAUusE,QAAU,MAAOA,QAAOp8F,OAAS0tC,iBAAiB1tC,OAC7E,OAAO,CAEX,IAAI+K,QAAQvJ,QAAQ,MAAO,EAAI,CAC3B,GAAIsJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIoxF,YAAYtsE,KAAK,SAAUusE,QAAU,MAAOA,QAAOp8F,OAASytC,uBAAuBztC,OAGnF,OAAO,EAGf,GAAqBq8F,mBAAoB99F,KAAKk9F,QAAQ1wF,QAAQiB,gBAAkBzN,KAAKk9F,QAAiB,OACtG,SAASY,kBAAkB3qE,WAO/BoT,yBAAyBhmC,UAAUw9F,WAKnC,SAAUvxF,QAASoxF,aACf,GAAIA,YAAYtsE,KAAK,SAAUusE,QAAU,MAAOA,QAAOp8F,OAAS0tC,iBAAiB1tC,OAC7E,OAAO,CAEX,IAAI+K,QAAQvJ,QAAQ,MAAO,EAAI,CAC3B,GAAIsJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIoxF,YAAYtsE,KAAK,SAAUusE,QAAU,MAAOA,QAAOp8F,OAASytC,uBAAuBztC,OAEnF,OAAO,EAGf,QAASzB,KAAKk9F,QAAQ1wF,QAAQiB,gBA0BlC84B,yBAAyBhmC,UAAUwzB,gBAcnC,SAAUvnB,QAAS2mB,SAAUC,aACrBA,cAEAD,SAAWnzB,KAAKg+F,kBAAkB7qE,WAItC3mB,QAAUA,QAAQiB,cAClB0lB,SAAWA,SAAS1lB,aACpB,IAAqB2c,KAAM8E,gBAAgB1iB,QAAU,IAAM2mB,SAC3D,OAAI/I,KACOA,KAEXA,IAAM8E,gBAAgB,KAAOiE,UACtB/I,IAAMA,IAAM4J,gBAAgBC,OAMvCsS,yBAAyBhmC,UAAUy9F,kBAInC,SAAU7qE,UAAY,MAAOwpE,eAAcxpE,WAAaA,UAIxDoT,yBAAyBhmC,UAAUokF,+BAGnC,WAAc,MAAO,gBAKrBp+C,yBAAyBhmC,UAAU09F,iBAInC,SAAUx8F,MACN,GAAIA,KAAKgM,cAAc+Q,WAAW,MAAO,CACrC,GAAqBpa,KAAM,8BAAgC3C,KAAO,0CAC7D,eAAiBA,KAAKyB,MAAM,GAAK,UACjC,SAAWzB,KAAO,sEACnB;AACJ,OAAS6C,OAAO,EAAMF,IAAKA,KAG3B,OAASE,OAAO,IAOxBiiC,yBAAyBhmC,UAAU29F,kBAInC,SAAUz8F,MACN,GAAIA,KAAKgM,cAAc+Q,WAAW,MAAO,CACrC,GAAqBpa,KAAM,+BAAiC3C,KAAO,0CAC9D,eAAiBA,KAAKyB,MAAM,GAAK,QACtC,QAASoB,OAAO,EAAMF,IAAKA,KAG3B,OAASE,OAAO,IAMxBiiC,yBAAyBhmC,UAAUkzB,qBAGnC,WAAc,MAAOjzB,QAAOw2B,KAAKh3B,KAAKk9F,UAKtC32D,yBAAyBhmC,UAAU49F,gCAInC,SAAUhrE,UACN,MAAO9wB,qBAAoB8wB,WAQ/BoT,yBAAyBhmC,UAAU69F,6BAMnC,SAAUC,cAAeC,iBAAkBt6F,KACvC,GAAqB42B,MAAO,GACP2jE,OAASv6F,IAAI+B,WAAW5C,OACxBq6D,SAA4B,IACjD,IAAIruC,uBAAuBkvE,gBAA0B,IAARr6F,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACP42B,KAAO,SAEN,CACD,GAAqB4jE,mBAAoBx6F,IAAIwH,MAAM,yBAC/CgzF,oBAAoD,GAA/BA,kBAAkB,GAAG18F,SAC1C07D,SAAW,uCAAyC8gC,iBAAmB,IAAMt6F,KAIzF,OAASM,MAAOk5D,SAAUn6D,MAAOk7F,OAAS3jE,OAEvC2L,0BACT81D,uBA6CEoC,UAAa,WACb,QAASA,aACLz+F,KAAK0+F,eAAgB,EAibzB,MAjaAD,WAAUl+F,UAAUo+F,YAMpB,SAAU9yF,QAASokB,SAAU2uE,cACJ,SAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmBtvE,wBAAwB1jB,QAGhE,OAFAA,SAAUwjB,cAAcxjB,SACxBA,QAAU7L,KAAK8+F,kBAAkBjzF,SAC1B7L,KAAK++F,cAAclzF,QAASokB,SAAU2uE,cAAgBC,kBAMjEJ,UAAUl+F,UAAUu+F,kBAIpB,SAAUjzF,SAEN,MADAA,SAAU7L,KAAKg/F,mCAAmCnzF,SAC3C7L,KAAKi/F,8BAA8BpzF,UAM9C4yF,UAAUl+F,UAAUy+F,mCAIpB,SAAUnzF,SAEN,MAAOA,SAAQtJ,QAAQ28F,0BAA2B,WAE9C,IAAK,GADDz8F,MACKb,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCa,EAAEb,IAAMC,UAAUD,GAEtB,OAAOa,GAAE,GAAK,OAOtBg8F,UAAUl+F,UAAU0+F,8BAIpB,SAAUpzF,SAEN,MAAOA,SAAQtJ,QAAQ48F,kBAAmB,WAEtC,IAAK,GADD18F,MACKb,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCa,EAAEb,IAAMC,UAAUD,GAEtB,IAAqB2uB,MAAO9tB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAK8tB,QAStBkuE,UAAUl+F,UAAUw+F,cAMpB,SAAUlzF,QAASuzF,cAAeR,cAC9B,GAAqBS,eAAgBr/F,KAAKs/F,iCAAiCzzF,QAU3E,OARAA,SAAU7L,KAAKu/F,6BAA6B1zF,SAC5CA,QAAU7L,KAAKw/F,kBAAkB3zF,SACjCA,QAAU7L,KAAKy/F,yBAAyB5zF,SACxCA,QAAU7L,KAAK0/F,2BAA2B7zF,SACtCuzF,gBACAvzF,QAAU7L,KAAK2/F,gBAAgB9zF,QAASuzF,cAAeR,eAE3D/yF,QAAUA,QAAU,KAAOwzF,cACpBxzF,QAAQ1I,QAMnBs7F,UAAUl+F,UAAU++F,iCAIpB,SAAUzzF,SAEN,GACqBpJ,GADAm9F,EAAI,EAGzB,KADAC,0BAA0BpoE,UAAY,EACmB,QAAjDh1B,EAAIo9F,0BAA0BhhB,KAAKhzE,WAAoB,CAC3D,GAAqB0kB,MAAO9tB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,GACnEm9F,IAAKrvE,KAAO,OAEhB,MAAOqvE,IAMXnB,UAAUl+F,UAAUi/F,kBAIpB,SAAU3zF,SACN,MAAO7L,MAAK8/F,kBAAkBj0F,QAASk0F,gBAAiB//F,KAAKggG,yBAMjEvB,UAAUl+F,UAAUk/F,yBAIpB,SAAU5zF,SACN,MAAO7L,MAAK8/F,kBAAkBj0F,QAASo0F,uBAAwBjgG,KAAKkgG,gCAQxEzB,UAAUl+F,UAAUu/F,kBAMpB,SAAUj0F,QAASs0F,OAAQC,cAEvB,MAAOv0F,SAAQtJ,QAAQ49F,OAAQ,WAE3B,IAAK,GADD19F,MACKb,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCa,EAAEb,IAAMC,UAAUD,GAEtB,IAAIa,EAAE,GAAI,CAGN,IAAK,GAFgBwV,OAAQxV,EAAE,GAAG8G,MAAM,KACnBq2F,KACK70F,EAAI,EAAGA,EAAIkN,MAAMnW,OAAQiJ,IAAK,CACpD,GAAqB4T,GAAI1G,MAAMlN,GAAG5H,MAClC,KAAKwb,EACD,KACJihF,GAAE94F,KAAKs5F,aAAaC,0BAA2B1hF,EAAGlc,EAAE,KAExD,MAAOm9F,GAAEh6F,KAAK,KAGd,MAAOy6F,2BAA4B59F,EAAE,MAUjDg8F,UAAUl+F,UAAU2/F,8BAMpB,SAAU3/D,KAAMvP,KAAMb,QAClB,MAAIa,MAAK/tB,QAAQq9F,gBAAiB,EACvBtgG,KAAKggG,uBAAuBz/D,KAAMvP,KAAMb,QAGxCoQ,KAAOvP,KAAOb,OAAS,KAAOa,KAAO,IAAMuP,KAAOpQ,QASjEsuE,UAAUl+F,UAAUy/F,uBAMpB,SAAUz/D,KAAMvP,KAAMb,QAClB,MAAOoQ,MAAOvP,KAAKzuB,QAAQ+9F,cAAe,IAAMnwE,QAMpDsuE,UAAUl+F,UAAUm/F,2BAIpB,SAAU7zF,SACN,MAAO00F,uBAAsBh4F,OAAO,SAAU9B,OAAQ2O,SAAW,MAAO3O,QAAOlE,QAAQ6S,QAAS,MAASvJ,UAQ7G4yF,UAAUl+F,UAAUo/F,gBAMpB,SAAU9zF,QAASuzF,cAAeR,cAC9B,GAAIl8D,OAAQ1iC,IACZ,OAAO0vB,cAAa7jB,QAAS,SAAU0kB,MACnC,GAAqBN,UAAWM,KAAKN,SAChBC,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAKN,SAAS,GACdA,SACIyS,MAAM89D,eAAejwE,KAAKN,SAAUmvE,cAAeR,aAAcl8D,MAAMg8D,gBAEtEnuE,KAAKN,SAASzR,WAAW,WAAa+R,KAAKN,SAASzR,WAAW,cACpE+R,KAAKN,SAASzR,WAAW,UAAY+R,KAAKN,SAASzR,WAAW,gBAC9D0R,QAAUwS,MAAMi9D,gBAAgBpvE,KAAKL,QAASkvE,cAAeR,eAE1D,GAAIpuE,SAAQP,SAAUC,YAUrCuuE,UAAUl+F,UAAUigG,eAOpB,SAAUvwE,SAAUmvE,cAAeR,aAAc6B,QAC7C,GAAI/9D,OAAQ1iC,IACZ,OAAOiwB,UAAS1mB,MAAM,KACjB5D,IAAI,SAAUqrB,MAAQ,MAAOA,MAAK7tB,OAAOoG,MAAMm3F,wBAC/C/6F,IAAI,SAAUg7F,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAUz9F,MAAM,GACxC49F,WAAa,SAAUF,aACxC,MAAIl+D,OAAMq+D,sBAAsBH,YAAaxB,eAClCqB,OACH/9D,MAAMs+D,0BAA0BJ,YAAaxB,cAAeR,cAC5Dl8D,MAAMu+D,oBAAoBL,YAAaxB,cAAeR,cAGnDgC,YAGf,QAAQE,WAAWF,cAAcj4F,OAAOk4F,YAAYj7F,KAAK,OAExDA,KAAK,OAOd64F,UAAUl+F,UAAUwgG,sBAKpB,SAAU9wE,SAAUmvE,eAChB,GAAqB8B,IAAKlhG,KAAKmhG,kBAAkB/B,cACjD,QAAQ8B,GAAG71F,KAAK4kB,WAMpBwuE,UAAUl+F,UAAU4gG,kBAIpB,SAAU/B,eACN,GAAqBgC,KAAM,MACNC,IAAM,KAE3B,OADAjC,eAAgBA,cAAc78F,QAAQ6+F,IAAK,OAAO7+F,QAAQ8+F,IAAK,OACxD,GAAIhsF,QAAO,KAAO+pF,cAAgB,IAAMkC,kBAAmB,MAQtE7C,UAAUl+F,UAAU0gG,oBAMpB,SAAUhxE,SAAUmvE,cAAeR,cAE/B,MAAO5+F,MAAKuhG,0BAA0BtxE,SAAUmvE,cAAeR,eAQnEH,UAAUl+F,UAAUghG,0BAMpB,SAAUtxE,SAAUmvE,cAAeR,cAG/B,GADA4C,gBAAgB/pE,UAAY,EACxB+pE,gBAAgBn2F,KAAK4kB,UAAW,CAChC,GAAqBwxE,aAAczhG,KAAK0+F,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAOnvE,UACF1tB,QAAQm/F,4BAA6B,SAAUC,IAAK1xE,UACrD,MAAOA,UAAS1tB,QAAQ,kBAAmB,SAAUoe,EAAGk7C,OAAQ+lC,MAAO9lC,OACnE,MAAOD,QAAS4lC,YAAcG,MAAQ9lC,UAGzCv5D,QAAQi/F,gBAAiBC,YAAc,KAEhD,MAAOrC,eAAgB,IAAMnvE,UAQjCwuE,UAAUl+F,UAAUygG,0BAMpB,SAAU/wE,SAAUmvE,cAAeR,cAC/B,GAAIl8D,OAAQ1iC,KACS6hG,KAAO,kBAC5BzC,eAAgBA,cAAc78F,QAAQs/F,KAAM,SAAUlhF,GAElD,IAAK,GADD1I,UACKrW,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCqW,MAAMrW,GAAK,GAAKC,UAAUD,GAE9B,OAAOqW,OAAM,IAEjB,IAAqB8c,UAAW,IAAMqqE,cAAgB,IACjC0C,mBAAqB,SAAUnjF,GAChD,GAAqBojF,SAAUpjF,EAAExb,MACjC,KAAK4+F,QACD,MAAO,EAEX,IAAIpjF,EAAE1b,QAAQo9F,4BAA6B,EACvC0B,QAAUr/D,MAAM6+D,0BAA0B5iF,EAAGygF,cAAeR,kBAE3D,CAED,GAAqB1xD,GAAIvuB,EAAEpc,QAAQi/F,gBAAiB,GACpD,IAAIt0D,EAAEprC,OAAS,EAAG,CACd,GAAqBw3C,SAAUpM,EAAE1hC,MAAM,kBACnC8tC,WACAyoD,QAAUzoD,QAAQ,GAAKvkB,SAAWukB,QAAQ,GAAKA,QAAQ,KAInE,MAAOyoD,UAEUC,YAAc,GAAIC,cAAahyE,SACpDA,UAAW+xE,YAAY9xE,SAMvB,KALA,GAEqBpqB,KAFAo8F,eAAiB,GACjBpwB,WAAa,EAEbqwB,IAAM,sBACNC,WAAanyE,SAAShtB,QAAQo9F,2BACb,QAA9Bv6F,IAAMq8F,IAAItjB,KAAK5uD,YAAqB,CACxC,GAAqBuqE,WAAY10F,IAAI,GAChBkrB,KAAOf,SAAS/sB,MAAM4uE,WAAYhsE,IAAIX,OAAOhC,OAG7Ck/F,WAAavwB,YAAcswB,WAAaN,mBAAmB9wE,MAAQA,IACxFkxE,iBAAkBG,WAAa,IAAM7H,UAAY,IACjD1oB,WAAaqwB,IAAI1qE,UAIrB,MAFAyqE,iBAAkBJ,mBAAmB7xE,SAAShqB,UAAU6rE,aAEjDkwB,YAAYM,QAAQJ,iBAM/BzD,UAAUl+F,UAAUg/F,6BAIpB,SAAUtvE,UACN,MAAOA,UAAS1tB,QAAQggG,oBAAqBC,sBACxCjgG,QAAQkgG,aAAcnC,gBAExB7B,aAEPwD,aAAgB,WAChB,QAASA,cAAahyE,UAClB,GAAIyS,OAAQ1iC,IACZA,MAAK4mE,gBACL5mE,KAAKmF,MAAQ,EAGb8qB,SAAWA,SAAS1tB,QAAQ,gBAAiB,SAAUoe,EAAG+hF,MACtD,GAAqBC,WAAY,QAAUjgE,MAAMv9B,MAAQ,IAGzD,OAFAu9B,OAAMkkC,aAAa9/D,KAAK47F,MACxBhgE,MAAMv9B,QACCw9F,YAIX3iG,KAAK4iG,SAAW3yE,SAAS1tB,QAAQ,4BAA6B,SAAUoe,EAAGkiF,OAAQpuF,KAC/E,GAAqBkuF,WAAY,QAAUjgE,MAAMv9B,MAAQ,IAGzD,OAFAu9B,OAAMkkC,aAAa9/D,KAAK2N,KACxBiuB,MAAMv9B,QACC09F,OAASF,YAuBxB,MAfAV,cAAa1hG,UAAU+hG,QAIvB,SAAUpyE,SACN,GAAIwS,OAAQ1iC,IACZ,OAAOkwB,SAAQ3tB,QAAQ,gBAAiB,SAAU+jE,GAAInhE,OAAS,MAAOu9B,OAAMkkC,cAAczhE,UAK9F88F,aAAa1hG,UAAU2vB,QAGvB,WAAc,MAAOlwB,MAAK4iG,UACnBX,gBAEP/C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhBkC,qBAAuB,oBACvBM,aAAe,kDAGf/C,gBAAkB,GAAI1qF,QAAO,IAAMirF,cAAgBwC,aAAc,OACjE7C,uBAAyB,GAAI5qF,QAAO,IAAMmtF,qBAAuBM,aAAc,OAC/EzC,0BAA4BC,cAAgB,iBAC5CoB,4BAA8B,uCAC9BnB,uBACA,YACA,aACA,mBACA,eAKAG,qBAAuB,sCACvBY,kBAAoB,6BACpBE,gBAAkB,oBAClBiB,aAAe,WACfF,oBAAsB,mBACtBjzE,WAAa,uBASbG,oBAAsB,2CAStBO,QAAU,wDACVU,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAW,WACX,QAASA,SAAQP,SAAUC,SACvBlwB,KAAKiwB,SAAWA,SAChBjwB,KAAKkwB,QAAUA,QAEnB,MAAOM,YA4BPW,wBAA2B,WAC3B,QAASA,yBAAwBpB,cAAeO,QAC5CtwB,KAAK+vB,cAAgBA,cACrB/vB,KAAKswB,OAASA,OAElB,MAAOa,4BAkDP4xE,mBAAqB,SACrBC,UAAY,WAAaD,mBACzBE,aAAe,cAAgBF,mBAC/BG,wBAA2B,WAC3B,QAASA,yBAAwBzhG,KAAM+T,UAAWwqB,UAC9ChgC,KAAKyB,KAAOA,KACZzB,KAAKwV,UAAYA,UACjBxV,KAAKggC,SAAWA,SAEpB,MAAOkjE,4BAEPC,mBAAsB,WACtB,QAASA,oBAAmB/jE,UAAWgkE,UAAWrjE,aAAcsjE,UAAWj6F,MACvEpJ,KAAKo/B,UAAYA,UACjBp/B,KAAKojG,UAAYA,UACjBpjG,KAAK+/B,aAAeA,aACpB//B,KAAKqjG,UAAYA,UACjBrjG,KAAKoJ,KAAOA,KAEhB,MAAO+5F,uBAEPh8D,cAAiB,WACjB,QAASA,eAAc+kB,cACnBlsD,KAAKksD,aAAeA,aACpBlsD,KAAKsjG,WAAa,GAAI7E,WA+F1B,MAxFAt3D,eAAc5mC,UAAUgjG,iBAKxB,SAAUnkE,UAAWgxB,MACjB,GAAqB5X,UAA8B4X,KAAc,QACjE,OAAOpwD,MAAKwjG,eAAepkE,UAAWgxB,KAAM,GAAIhY,4BAC5Cd,OAAQkB,SAASlB,OACjBe,UAAWG,SAASH,UACpB7iC,UAAW9N,oBAAoB0oD,KAAKjqD,SACpC,IAQRghC,cAAc5mC,UAAUkjG,cAMxB,SAAUrkE,UAAWgxB,KAAM1D,YACvB,MAAO1sD,MAAKwjG,eAAepkE,UAAWgxB,KAAM1D,YAAY,IAM5DvlB,cAAc5mC,UAAUmjG,eAIxB,SAAUtzC,MACN,MAA0BA,MAAc,SAAE7X,gBAAkB3S,kBAAkBC,UASlFsB,cAAc5mC,UAAUijG,eAOxB,SAAUpkE,UAAWgxB,KAAM1D,WAAYi3C,uBACnC,GAAIjhE,OAAQ1iC,KACSogC,KAAOpgC,KAAK0jG,eAAetzC,MAC3BwzC,iBAAmBl3C,WAAWpV,OAAO3xC,IAAI,SAAUk+F,YAAc,MAAO58E,SAAQyb,MAAMohE,cAAcD,WAAYzjE,SAChHL,eACrB2sB,YAAWrU,UAAUzxC,QAAQ,SAAUmnD,UACnC,GAAqBg2C,WAAYH,iBAAiB9hG,MAElD8hG,kBAAiB98F,KAAsB,MACvCi5B,aAAaj5B,KAAK,GAAIo8F,yBAAwB9xE,iBAAiB,MAAO28B,SAAU,SAAU1qD,OAAS,MAAOugG,kBAAiBG,WAAa3kE,UAAUxZ,WAAWviB,WAIjK,IAAqB+/F,WAAYhyE,iBAAiBuyE,sBAAwBvzC,KAAO,MAC5DjrC,KAAOO,SAAS09E,WAChC1iF,IAAIyF,WAAWy9E,iBAAkB,GAAIrkE,WAAU/T,cAAe0+D,aAAaC,UAC3ElyD,WAAW,KAAM0rE,uBAAyBzrE,aAAaC,QACxDD,aAAaC,MAAOD,aAAasH,UAGrC,OADAJ,WAAUlG,WAAWpyB,KAAKqe,MACnB,GAAIg+E,oBAAmB/jE,UAAWgkE,UAAWrjE,aAAcK,KAAMssB,aAO5EvlB,cAAc5mC,UAAUujG,cAKxB,SAAU5nD,MAAO9b,MACb,MAAOA,MAAOpgC,KAAKsjG,WAAW3E,YAAYziD,MAAO+mD,aAAcD,WAAa9mD,OAEzE/U,iBAyBP5V,sBAAwB,wBACxByyE,kBAAoB,GAAIhgF,MAAK,MAAO,WAAY,WAAY,SAAU,UAkCtE6N,kBAAqB,WACrB,QAASA,sBAmFT,MA5EAA,mBAAkBtxB,UAAUi1C,aAK5B,SAAUp9B,QAAS7U,SACf,MAAIygG,mBAAkBlwE,IAAI1b,QAAQ3W,OAAS4vB,2BAA2BjZ,QAAQ9K,OAGnE,GAAInD,SAAQiO,QAAQ3W,KAAMmI,SAAS5J,KAAMoY,QAAQ9K,OAAQ8K,QAAQ/N,SAAU+N,QAAQpO,WAAYoO,QAAQyjC,gBAAiBzjC,QAAQhO,eAEpI,GAAID,SAAQiO,QAAQ3W,KAAM2W,QAAQ9K,MAAO1D,SAAS5J,KAAMoY,QAAQ/N,UAAW+N,QAAQpO,WAAYoO,QAAQyjC,gBAAiBzjC,QAAQhO,gBAO3IynB,kBAAkBtxB,UAAUq7C,eAK5B,SAAU8xB,UAAWnqE,SACjB,MAAOmqE,WAAUjsE,OAAS8vB,sBAAwBm8C,UAAY,MAOlE77C,kBAAkBtxB,UAAU+zC,UAK5B,SAAU/jC,KAAMhN,SACZ,GAAqBmqF,SAAuC,IAA7Bn9E,KAAKlN,MAAMF,OAAOrB,MACjD,OAAK4rF,SAGE,KAFI,GAAIl4D,MAAKhE,YAAYjhB,KAAKlN,OAAOd,QAAQ,SAAU,KAAMgO,KAAKvG,aAS7E6nB,kBAAkBtxB,UAAUu7C,aAK5B,SAAU8xB,QAASrqE,SAAW,MAAOqqE,UAMrC/7C,kBAAkBtxB,UAAUg7C,eAK5B,SAAU27B,UAAW3zE,SAAW,MAAO2zE,YAMvCrlD,kBAAkBtxB,UAAUm7C,mBAK5B,SAAUy7B,cAAe5zE,SAAW,MAAO4zE,gBACpCtlD,qBAsBPU,cAAgB,OAAQ,MAAO,MAAO,MAAO,OAAQ,SA8BrDJ,gBAAmB,WACnB,QAASA,iBAAgBtoB,MAAOo6F,SAAUlyE,QACtC/xB,KAAK6J,MAAQA,MACb7J,KAAKikG,SAAWA,SAChBjkG,KAAK+xB,OAASA,OAElB,MAAOI,oBAEPK,eAAkB,SAAU/nB,QAE5B,QAAS+nB,gBAAe7nB,KAAM6yD,UAC1B,MAAO/yD,QAAO0iC,KAAKntC,KAAM2K,KAAM6yD,WAAax9D,KAEhD,MAJAC,WAAUuyB,eAAgB/nB,QAInB+nB,gBACT2pC,YAMEjqC,UAAa,WACb,QAASA,aACLlyB,KAAKoyB,YAAa,EAClBpyB,KAAK+xB,UA4ET,MArEAG,WAAU3xB,UAAUi1C,aAKpB,SAAUp9B,QAAS7U,SACf,MAAO,IAAI4G,SAAQiO,QAAQ3W,KAAM2W,QAAQ9K,MAAO1D,SAAS5J,KAAMoY,QAAQ/N,UAAW+N,QAAQpO,WAAYoO,QAAQyjC,gBAAiBzjC,QAAQhO,gBAO3I8nB,UAAU3xB,UAAUq7C,eAKpB,SAAU8xB,UAAWnqE,SAAW,MAAOmqE,YAMvCx7C,UAAU3xB,UAAU+zC,UAKpB,SAAU/jC,KAAMhN,SAAW,MAAOgN,OAMlC2hB,UAAU3xB,UAAUu7C,aAKpB,SAAU8xB,QAASrqE,SAAW,MAAOqqE,UAMrC17C,UAAU3xB,UAAUg7C,eAKpB,SAAU4qB,IAAK5iE,SAEX,MADAvD,MAAKoyB,YAAa,EACC,UAAZ+zC,IAAIhgE,KAAmBksB,kBAAkB8zC,IAAKnmE,KAAK+xB,QACtDgB,mBAAmBozC,IAAKnmE,KAAK+xB,SAOrCG,UAAU3xB,UAAUm7C,mBAKpB,SAAUwyB,QAAS3qE,SACf,KAAM,IAAIgB,OAAM,0BAEb2tB,aA0CPgyE,yBAA2B,IAC3BC,iBAAmB,OACnBC,aAAe,QACfC,aAAe,QACfC,oBAAsB,WAEtBC,mBACAC,QAAS,EACTC,aAAc,EACdC,UAAW,EAEfH,mBAAkBA,kBAAkBC,SAAW,UAC/CD,kBAAkBA,kBAAkBE,cAAgB,eACpDF,kBAAkBA,kBAAkBG,WAAa,WAIjD,IAAIC,eAAiB,WACjB,QAASA,eAAcljG,KAAMkT,WAAYxO,KAAM6D,YAC3ChK,KAAKyB,KAAOA,KACZzB,KAAK2U,WAAaA,WAClB3U,KAAKmG,KAAOA,KACZnG,KAAKgK,WAAaA,WAClBhK,KAAK4kG,UAAY5kG,KAAKmG,OAASo+F,kBAAkBE,aACjDzkG,KAAK28B,YAAc38B,KAAKmG,OAASo+F,kBAAkBG,UAEvD,MAAOC,kBAKPE,cAAiB,WACjB,QAASA,eAAcC,YAAa9mC,qBAAsB4jB,gBAAiBjgD,MAAOojE,eAC9E,GAAIriE,OAAQ1iC,IACZA,MAAK8kG,YAAcA,YACnB9kG,KAAKg+D,qBAAuBA,qBAC5Bh+D,KAAK4hF,gBAAkBA,gBACvB5hF,KAAK+kG,cAAgBA,cACrB/kG,KAAKglG,YAAc,GAAI18E,KACvBtoB,KAAKilG,WAAa,GAAI38E,KACtBqZ,MAAM/6B,QAAQ,SAAUs+F,MAAQ,MAAOxiE,OAAMsiE,YAAYtkF,IAAIwkF,KAAKzjG,KAAMyjG,QA8iB5E,MAziBAL,eAActkG,UAAU4kG,aAGxB,WAAc,MAAO3hG,OAAMugB,KAAK/jB,KAAKilG,WAAWljG,WAOhD8iG,cAActkG,UAAU6kG,gCAMxB,SAAU7iB,QAAS8iB,gBAAiBr7F,YAChC,GAAI04B,OAAQ1iC,IACZ,IAAIuiF,QAAQvsC,eAAgB,CACxB,GAAqBsvD,gBAUrB,OATA9kG,QAAOw2B,KAAKurD,QAAQvsC,gBAAgBpvC,QAAQ,SAAUusB,UAClD,GAAqBxe,YAAa4tE,QAAQvsC,eAAe7iB,SAC/B,iBAAfxe,YACP+tB,MAAM6iE,qBAAqBpyE,SAAUxe,YAAY,EAAM3K,cAAgBs7F,cAGvE5iE,MAAM00B,aAAa,uCAA0CjkC,SAAW,8DAAkExe,WAAa,YAAgBA,YAAa,IAAK3K,cAG1Ls7F,aAAa3/F,IAAI,SAAUypB,MAAQ,MAAOsT,OAAM8iE,yBAAyBH,gBAAiBj2E,QAErG,MAAO,OAOXy1E,cAActkG,UAAUklG,6BAKxB,SAAUljB,QAASv4E,YACf,GAAI04B,OAAQ1iC,IACZ,IAAIuiF,QAAQppC,cAAe,CACvB,GAAqBusD,qBAUrB,OATAllG,QAAOw2B,KAAKurD,QAAQppC,eAAevyC,QAAQ,SAAUusB,UACjD,GAAqBxe,YAAa4tE,QAAQppC,cAAchmB,SAC9B,iBAAfxe,YACP+tB,MAAMijE,WAAWxyE,SAAUxe,WAAY3K,cAAgB07F,mBAGvDhjE,MAAM00B,aAAa,+BAAkCjkC,SAAW,8DAAkExe,WAAa,YAAgBA,YAAa,IAAK3K,cAGlL07F,kBAEX,MAAO,OAOXb,cAActkG,UAAUm3D,mBAKxB,SAAUr0D,MAAO2G,YACb,GAAqB47F,YAAa57F,WAAWD,MAAMhE,UACnD,KACI,GAAqBY,KAAyB3G,KAAK8kG,YAAYptC,mBAAmBr0D,MAAOuiG,WAAY5lG,KAAKg+D,qBAI1G,OAHIr3D,MACA3G,KAAK6lG,8BAA8Bl/F,IAAIorB,OAAQ/nB,YACnDhK,KAAK8lG,YAAYn/F,IAAKqD,YACfrD,IAEX,MAAwB4S,GAEpB,MADAvZ,MAAKo3D,aAAa,GAAK79C,EAAGvP,YACnBhK,KAAK8kG,YAAYhtC,qBAAqB,QAAS8tC,cAY9Df,cAActkG,UAAUwlG,2BASxB,SAAUvuC,YAAan0D,MAAO2G,WAAYg8F,qBAAsBC,YAAaC,YAEzE,IAAK,GADgBv2C,UAAW3vD,KAAKmmG,uBAAuB3uC,YAAan0D,MAAO2G,YACtDe,EAAI,EAAGA,EAAI4kD,SAAS7tD,OAAQiJ,IAAK,CACvD,GAAqB+kD,SAAUH,SAAS5kD,EACpC+kD,SAAQkG,SACRkwC,WAAWp/F,KAAK,GAAIquC,aAAY2a,QAAQ77C,IAAK67C,QAAQruD,KAAMuI,aAEtD8lD,QAAQn7C,WACb3U,KAAKomG,kBAAkBt2C,QAAQ77C,IAAK67C,QAAQn7C,WAAY3K,WAAYg8F,qBAAsBC,cAG1FD,qBAAqBl/F,MAAMgpD,QAAQ77C,IAAK,KACxCjU,KAAKqmG,iBAAiBv2C,QAAQ77C,IAAK,KAAMjK,WAAYg8F,qBAAsBC,gBAUvFpB,cAActkG,UAAU4lG,uBAMxB,SAAU3uC,YAAan0D,MAAO2G,YAC1B,GAAI04B,OAAQ1iC,KACS4lG,WAAa57F,WAAWD,MAAMhE,UACnD,KACI,GAAqBugG,gBAAiBtmG,KAAK8kG,YAAYvtC,sBAAsBC,YAAan0D,MAAOuiG,WAQjG,OAPA5lG,MAAK6lG,8BAA8BS,eAAev0E,OAAQ/nB,YAC1Ds8F,eAAe/vC,iBAAiB3vD,QAAQ,SAAUkpD,SAC1CA,QAAQn7C,YACR+tB,MAAMojE,YAAYh2C,QAAQn7C,WAAY3K,cAG9Cs8F,eAAelyE,SAASxtB,QAAQ,SAAU2/F,SAAW7jE,MAAM00B,aAAamvC,QAASv8F,WAAYgyD,gBAAgBC,WACtGqqC,eAAe/vC,iBAE1B,MAAwBh9C,GAEpB,MADAvZ,MAAKo3D,aAAa,GAAK79C,EAAGvP,iBAYlC66F,cAActkG,UAAU8lG,iBAQxB,SAAU5kG,KAAM4B,MAAO2G,WAAYg8F,qBAAsBC,aACjDjzE,kBAAkBvxB,OAClBA,KAAOA,KAAKwE,UAAU,GAClB5C,OACArD,KAAKo3D,aAAa,8LAC6FptD,WAAYgyD,gBAAgBE,OAE/Il8D,KAAKwmG,gBAAgB/kG,KAAM4B,MAAO2G,WAAYg8F,qBAAsBC,cAGpEA,YAAYn/F,KAAK,GAAI69F,eAAcljG,KAAMzB,KAAK8kG,YAAYhtC,qBAAqBz0D,MAAO,IAAKkhG,kBAAkBE,aAAcz6F,cAYnI66F,cAActkG,UAAUglG,qBASxB,SAAU9jG,KAAMkT,WAAYukC,OAAQlvC,WAAYg8F,qBAAsBC,aAClE,GAAqBQ,kBAAkB,CACnChlG,MAAK+c,WAAW8lF,sBAChBmC,iBAAkB,EAClBhlG,KAAOA,KAAKwE,UAAUq+F,oBAAoBxiG,SAErCkxB,kBAAkBvxB,QACvBglG,iBAAkB,EAClBhlG,KAAOA,KAAKwE,UAAU,IAEtBwgG,gBACAzmG,KAAKwmG,gBAAgB/kG,KAAMkT,WAAY3K,WAAYg8F,qBAAsBC,aAGzEjmG,KAAKomG,kBAAkB3kG,KAAMzB,KAAK0mG,cAAc/xF,WAAYukC,OAAQlvC,YAAaA,WAAYg8F,qBAAsBC,cAW3HpB,cAActkG,UAAUomG,2BAQxB,SAAUllG,KAAM4B,MAAO2G,WAAYg8F,qBAAsBC,aACrD,GAAqBzgF,MAAOxlB,KAAK03D,mBAAmBr0D,MAAO2G,WAC3D,SAAIwb,OACAxlB,KAAKomG,kBAAkB3kG,KAAM+jB,KAAMxb,WAAYg8F,qBAAsBC,cAC9D,IAYfpB,cAActkG,UAAU6lG,kBAQxB,SAAU3kG,KAAMkF,IAAKqD,WAAYg8F,qBAAsBC,aACnDD,qBAAqBl/F,MAAMrF,KAAyBkF,IAAW,SAC/Ds/F,YAAYn/F,KAAK,GAAI69F,eAAcljG,KAAMkF,IAAK49F,kBAAkBC,QAASx6F,cAU7E66F,cAActkG,UAAUimG,gBAQxB,SAAU/kG,KAAMkT,WAAY3K,WAAYg8F,qBAAsBC,aAI1D,GAAqBt/F,KAAM3G,KAAK0mG,cAAc/xF,YAAc,aAAa,EAAO3K,WAChFg8F,sBAAqBl/F,MAAMrF,KAAyBkF,IAAW,SAC/Ds/F,YAAYn/F,KAAK,GAAI69F,eAAcljG,KAAMkF,IAAK49F,kBAAkBG,UAAW16F,cAQ/E66F,cAActkG,UAAUmmG,cAMxB,SAAUrjG,MAAOujG,cAAe58F,YAC5B,GAAqB47F,YAAa57F,WAAWD,MAAMhE,UACnD,KACI,GAAqBY,KAAMigG,cACvB5mG,KAAK8kG,YAAY7tC,mBAAmB5zD,MAAOuiG,WAAY5lG,KAAKg+D,sBAC5Dh+D,KAAK8kG,YAAY/tC,aAAa1zD,MAAOuiG,WAAY5lG,KAAKg+D,qBAI1D,OAHIr3D,MACA3G,KAAK6lG,8BAA8Bl/F,IAAIorB,OAAQ/nB,YACnDhK,KAAK8lG,YAAYn/F,IAAKqD,YACfrD,IAEX,MAAwB4S,GAEpB,MADAvZ,MAAKo3D,aAAa,GAAK79C,EAAGvP,YACnBhK,KAAK8kG,YAAYhtC,qBAAqB,QAAS8tC,cAQ9Df,cAActkG,UAAUilG,yBAKxB,SAAUH,gBAAiBwB,WACvB,GAAIA,UAAUlqE,YACV,MAAO,IAAIgY,yBAAwBkyD,UAAUplG,KAAM64B,oBAAoBE,UAAWxG,gBAAgBC,KAAM4yE,UAAUlyF,WAAY,KAAMkyF,UAAU78F,WAElJ,IAAqB4wB,MAAO,KACPH,YAA+B,OAC/BqsE,kBAAoB,KACpB7uF,MAAQ4uF,UAAUplG,KAAK8H,MAAM26F,0BAC7B6C,iBAAoC,MAEzD,IAAI9uF,MAAMnW,OAAS,EACf,GAAImW,MAAM,IAAMksF,iBAAkB,CAC9B2C,kBAAoB7uF,MAAM,GAC1BjY,KAAKgnG,iCAAiCF,kBAAmBD,UAAU78F,YAAY,GAC/E+8F,iBAAmB9zE,6BAA6BjzB,KAAK4hF,gBAAiByjB,gBAAiByB,mBAAmB,EAC1G,IAAqBG,gBAAiBH,kBAAkB7jG,QAAQ,IAChE,IAAIgkG,gBAAiB,EAAI,CACrB,GAAqBC,IAAKJ,kBAAkB7gG,UAAU,EAAGghG,gBACpCl3C,OAAS+2C,kBAAkB7gG,UAAUghG,eAAiB,EAC3EH,mBAAoBj6F,eAAeq6F,GAAIn3C,QAE3Ct1B,YAAcH,oBAAoB35B,cAE7BsX,OAAM,IAAMmsF,cACjB0C,kBAAoB7uF,MAAM,GAC1BwiB,YAAcH,oBAAoBI,MAClCqsE,kBAAoB/yE,gBAAgBC,OAE/Bhc,MAAM,IAAMosF,eACjBzpE,KAAO3iB,MAAMnW,OAAS,EAAImW,MAAM,GAAK,KACrC6uF,kBAAoB7uF,MAAM,GAC1BwiB,YAAcH,oBAAoBK,MAClCosE,kBAAoB/yE,gBAAgB3lB,OAU5C,OAN0B,QAAtBy4F,oBACAA,kBAAoB9mG,KAAK4hF,gBAAgBoc,kBAAkB6I,UAAUplG,MACrEslG,iBAAmB9zE,6BAA6BjzB,KAAK4hF,gBAAiByjB,gBAAiByB,mBAAmB,GAC1GrsE,YAAcH,oBAAoBC,SAClCv6B,KAAKgnG,iCAAiCF,kBAAmBD,UAAU78F,YAAY,IAE5E,GAAI2qC,yBAAwBmyD,kBAAmBrsE,YAAassE,iBAAiB,GAAIF,UAAUlyF,WAAYimB,KAAMisE,UAAU78F,aAUlI66F,cAActkG,UAAUolG,WAQxB,SAAUlkG,KAAMkT,WAAY3K,WAAYg8F,qBAAsBmB,cACtDn0E,kBAAkBvxB,OAClBA,KAAOA,KAAK8iC,OAAO,GACnBvkC,KAAKonG,qBAAqB3lG,KAAMkT,WAAY3K,WAAYm9F,eAGxDnnG,KAAKqnG,YAAY5lG,KAAMkT,WAAY3K,WAAYg8F,qBAAsBmB,eAU7EtC,cAActkG,UAAU6mG,qBAOxB,SAAU3lG,KAAMkT,WAAY3K,WAAYm9F,cACpC,GAAqB7tD,SAAUx2C,cAAcrB,MAAOA,KAAM,KACrCutC,UAAYsK,QAAQ,GACpB1c,MAAQ0c,QAAQ,GAAG7rC,aACxC,IAAImvB,MACA,OAAQA,OACJ,IAAK,QACL,IAAK,OACD,GAAqBj2B,KAAM3G,KAAKsnG,aAAa3yF,WAAY3K,WACzDm9F,cAAargG,KAAK,GAAI+tC,eAAc7F,UAAW,KAAMpS,MAAOj2B,IAAKqD,YACjE,MACJ,SACIhK,KAAKo3D,aAAa,8CAAiDx6B,MAAQ,WAAeoS,UAAY,yCAA2ChlC,gBAKzJhK,MAAKo3D,aAAa,wCAA0CpoB,UAAY,4EAA6EhlC,aAW7J66F,cAActkG,UAAU8mG,YAQxB,SAAU5lG,KAAMkT,WAAY3K,WAAYg8F,qBAAsBmB,cAE1D,GAAI9tF,IAAK1W,aAAalB,MAAwB,KAAUA,OAAQoS,OAASwF,GAAG,GAAI21B,UAAY31B,GAAG,GAC1E1S,IAAM3G,KAAKsnG,aAAa3yF,WAAY3K,WACzDg8F,sBAAqBl/F,MAAuB,KAA6BH,IAAW,SACpFwgG,aAAargG,KAAK,GAAI+tC,eAAc7F,UAAWn7B,OAAQ,KAAMlN,IAAKqD,cAStE66F,cAActkG,UAAU+mG,aAKxB,SAAUjkG,MAAO2G,YACb,GAAqB47F,YAAa57F,WAAWD,MAAMhE,UACnD,KACI,GAAqBY,KAAM3G,KAAK8kG,YAAYruC,YAAYpzD,MAAOuiG,WAAY5lG,KAAKg+D,qBAIhF,OAHIr3D,MACA3G,KAAK6lG,8BAA8Bl/F,IAAIorB,OAAQ/nB,aAE9CrD,KAAOA,IAAIA,cAAekvB,YAC3B71B,KAAKo3D,aAAa,oCAAqCptD,YAChDhK,KAAK8kG,YAAYhtC,qBAAqB,QAAS8tC,cAE1D5lG,KAAK8lG,YAAYn/F,IAAKqD,YACfrD,KAEX,MAAwB4S,GAEpB,MADAvZ,MAAKo3D,aAAa,GAAK79C,EAAGvP,YACnBhK,KAAK8kG,YAAYhtC,qBAAqB,QAAS8tC,cAS9Df,cAActkG,UAAU62D,aAMxB,SAAUlmD,QAASlH,WAAYoyD,OACb,SAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDl8D,KAAK+kG,cAAcj+F,KAAK,GAAIq1D,YAAWnyD,WAAYkH,QAASkrD,SAOhEyoC,cAActkG,UAAUslG,8BAKxB,SAAU9zE,OAAQ/nB,YACd,IAAK,GAAIpI,IAAK,EAAG2lG,SAAWx1E,OAAQnwB,GAAK2lG,SAASzlG,OAAQF,KAAM,CAC5D,GAAI0C,OAAQijG,SAAS3lG,GACrB5B,MAAKo3D,aAAa9yD,MAAM4M,QAASlH,cAQzC66F,cAActkG,UAAUulG,YAKxB,SAAUn/F,IAAKqD,YACX,GAAI04B,OAAQ1iC,IACZ,IAAI2G,IAAK,CACL,GAAqB6gG,WAAY,GAAIC,cACrC9gG,KAAID,MAAM8gG,WACVA,UAAU7lE,MAAM/6B,QAAQ,SAAUD,IAAK+gG,UACnC,GAAqB7f,UAAWnlD,MAAMsiE,YAAYvkF,IAAIinF,SACjD7f,UAIDnlD,MAAMuiE,WAAWvkF,IAAIgnF,SAAU7f,UAH/BnlD,MAAM00B,aAAa,aAAeswC,SAAW,uBAAwB,GAAI9xF,iBAAgB5L,WAAWD,MAAMoxD,OAAOx0D,IAAIgE,KAAKZ,OAAQC,WAAWD,MAAMoxD,OAAOx0D,IAAIgE,KAAKT,WAcnL26F,cAActkG,UAAUymG,iCAMxB,SAAU7zE,SAAUnpB,WAAY29F,QAC5B,GAAqBC,QAASD,OAAS3nG,KAAK4hF,gBAAgBsc,kBAAkB/qE,UAC1EnzB,KAAK4hF,gBAAgBqc,iBAAiB9qE,SACtCy0E,QAAOtjG,OACPtE,KAAKo3D,aAAgCwwC,OAAW,IAAG59F,WAAYgyD,gBAAgBE,QAGhF2oC,iBAEP4C,cAAiB,SAAUh9F,QAE3B,QAASg9F,iBACL,GAAI/kE,OAAmB,OAAXj4B,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,IAEhE,OADA0iC,OAAMf,MAAQ,GAAIrZ,KACXoa,MAkBX,MAtBAziC,WAAUwnG,cAAeh9F,QAWzBg9F,cAAclnG,UAAUiU,UAKxB,SAAU7N,IAAKpD,SAIX,MAHAvD,MAAK2hC,MAAMjhB,IAAI/Z,IAAIlF,KAAMkF,KACzBA,IAAI8N,IAAI/N,MAAM1G,MACdA,KAAK4J,SAASjD,IAAIhF,KAAM4B,SACjB,MAEJkkG,eACTvxC,qBAsCE2xC,iBAAmB,2GAEnBC,YAAc,EAEdC,WAAa,EAEbC,WAAa,EAEbC,UAAY,EAEZC,cAAgB,EAEhBC,UAAY,EAEZC,aAAe,EAEfC,qBAAuB,EAEvBC,mBAAqB,EAErBC,gBAAkB,GAElBpyE,iBAAmB,WAEnBqyE,cAAgB,WAChBC,qBAAuB,IACvBtzE,WAAa,QACbuzE,kBAAoBp1E,YAAYC,MAAM,KAAK,GAC3C6C,qCAAuC,kEACvCuyE,kCAAoC,4EACpCt0E,iBAcAu0E,mBAAsB,SAAUn+F,QAEhC,QAASm+F,oBAAmB13F,QAASvG,KAAMyxD,OACvC,MAAO3xD,QAAO0iC,KAAKntC,KAAM2K,KAAMuG,QAASkrD,QAAUp8D,KAEtD,MAJAC,WAAU2oG,mBAAoBn+F,QAIvBm+F,oBACTzsC,YACE0sC,oBAAuB,WACvB,QAASA,qBAAoBC,YAAaC,UAAWh3E,QACjD/xB,KAAK8oG,YAAcA,YACnB9oG,KAAK+oG,UAAYA,UACjB/oG,KAAK+xB,OAASA,OAElB,MAAO82E,wBAEPpiE,eAAkB,WAClB,QAASA,gBAAe2lB,QAASsC,WAAYo2C,YAAaljB,gBAAiBz1B,YAAayvB,SAAUotB,YAC9FhpG,KAAKosD,QAAUA,QACfpsD,KAAK0uD,WAAaA,WAClB1uD,KAAK8kG,YAAcA,YACnB9kG,KAAK4hF,gBAAkBA,gBACvB5hF,KAAKmsD,YAAcA,YACnBnsD,KAAK47E,SAAWA,SAChB57E,KAAKgpG,WAAaA,WAgLtB,MApKAviE,gBAAelmC,UAAUgzB,MAUzB,SAAUjK,UAAWkvB,SAAUrwB,WAAYwZ,MAAOuY,QAASzB,YAAa1S,qBACpE,GAAqBt/B,QAASzG,KAAKipG,SAAS3/E,UAAWkvB,SAAUrwB,WAAYwZ,MAAOuY,QAASzB,YAAa1S,qBACrF3R,SAA8B3tB,OAAc,OAAEuc,OAAO,SAAU1e,OAAS,MAAOA,OAAM83D,QAAUJ,gBAAgBC,UAAYj5C,OAAOmR,cAAcw0E,kCAAmCvyE,wCACnLrE,OAA4BtrB,OAAc,OAAEuc,OAAO,SAAU1e,OAAS,MAAOA,OAAM83D,QAAUJ,gBAAgBE,OAIlI,IAHI9nC,SAAStyB,OAAS,GAClB9B,KAAK47E,SAASvL,KAAK,6BAA+Bj8C,SAASxuB,KAAK,OAEhEmsB,OAAOjwB,OAAS,EAAG,CACnB,GAAqBurD,aAAct7B,OAAOnsB,KAAK,KAC/C,MAAMzB,aAAY,2BAA6BkpD,YAAat7B,QAEhE,OAASymB,SAA6B/xC,OAAmB,YAAGk7B,MAA0Bl7B,OAAiB,YAY3GggC,eAAelmC,UAAU0oG,SAUzB,SAAU3/E,UAAWkvB,SAAUrwB,WAAYwZ,MAAOuY,QAASzB,YAAa1S,qBACpE,GAAqBmjE,iBAAsC,gBAAb1wD,UAA2Cx4C,KAAiB,YAAEuzB,MAAMilB,SAAUC,aAAa,EAAMz4C,KAAKmpG,uBAAuB7/E,YACvKkvB,QAIJ,OAHKzS,uBACDmjE,gBAAkBx3E,kBAAkBw3E,kBAEjClpG,KAAKopG,aAAappG,KAAKqpG,WAAWH,iBAAkB5/E,UAAWnB,WAAYwZ,MAAOuY,UAU7FzT,eAAelmC,UAAU6oG,aAQzB,SAAUz3E,kBAAmBrI,UAAWnB,WAAYwZ,MAAOuY,SACvD,GAAqBzzC,QACAsrB,OAASJ,kBAAkBI,OAC3Bg3E,YACrB,IAAIp3E,kBAAkBG,UAAUhwB,OAAS,EAAG,CACxC,GAAqBwnG,gBAAiB7zE,wBAAwBtN,YACzCohF,UAAY9zE,wBAAwBkM,OACpC6nE,oBAAsB,GAAIvX,qBAAoBjyF,KAAK0uD,WAAYplC,WAC/DpT,oBAAuC,MACxDoT,WAAUkvB,UAAYlvB,UAAUkvB,SAASM,gBACzC5iC,qBACInM,MAAOuf,UAAUkvB,SAASM,cAAc,GACxC5uC,IAAKof,UAAUkvB,SAASM,cAAc,IAG9C,IAAqB2wD,eAAgB,GAAI5E,eAAc7kG,KAAK8kG,YAA8B,oBAAyB9kG,KAAK4hF,gBAAiB2nB,UAAWx3E,QAC/H23E,aAAe,GAAIC,sBAAqB3pG,KAAK0uD,WAAY1uD,KAAKosD,QAASo9C,oBAAqBF,eAAgBG,cAAezpG,KAAK4hF,gBAAiB1nC,QAASnoB,OAC/KtrB,QAASmD,SAAS8/F,aAAc/3E,kBAAkBG,UAAW83E,uBAC7D73E,OAAOjrB,KAAK9E,MAAM+vB,OAAQy3E,oBAAoBz3E,QAC9Cg3E,UAAUjiG,KAAK9E,MAAM+mG,UAAWU,cAActE,oBAG9C1+F,UAGJ,OADAzG,MAAK6pG,wCAAwCpjG,OAAQsrB,QACjDA,OAAOjwB,OAAS,EACT,GAAI+mG,qBAAoBpiG,OAAQsiG,UAAWh3E,SAElD/xB,KAAKgpG,YACLhpG,KAAKgpG,WAAWpiG,QAAQ,SAAUm9B,WAAat9B,OAASF,iBAAiBw9B,UAAWt9B,UAEjF,GAAIoiG,qBAAoBpiG,OAAQsiG,UAAWh3E,UAOtD0U,eAAelmC,UAAU8oG,WAKzB,SAAU13E,kBAAmBm4E,QACV,SAAXA,SAAqBA,QAAS,EAClC,IAAqB/3E,QAASJ,kBAAkBI,MAChD,IAAqB,GAAjBA,OAAOjwB,QAAegoG,OAAQ,CAE9B,GAAqBC,iBAAkB/3E,YAAYL,kBAAkBG,UACrEC,QAAOjrB,KAAK9E,MAAM+vB,OAAQg4E,gBAAgBh4E,QAC1CJ,kBAAoB,GAAIC,iBAAgBm4E,gBAAgBlgG,MAAOkoB,QAEnE,MAAOJ,oBAMX8U,eAAelmC,UAAU4oG,uBAIzB,SAAU7/E,WACN,GAAIA,UAAUkvB,SACV,MAAOuD,qBAAoBC,UAAU1yB,UAAUkvB,SAASM,gBAWhErS,eAAelmC,UAAUspG,wCAMzB,SAAUpjG,OAAQsrB,QACd,GAAqBi4E,sBACrBvjG,QAAOuc,OAAO,SAAU5K,SAAW,QAAS,QAA6Bm9B,aACpE3uC,QAAQ,SAAUwR,SACnB,MAAO,SAA6Bm9B,WAAW3uC,QAAQ,SAAUS,WAC7D,GAAqB5F,MAAO4F,UAAU5F,IACtC,IAAIuoG,mBAAmB/mG,QAAQxB,MAAQ,EACnCuoG,mBAAmBljG,KAAKrF,UAEvB,CACD,GAAqB6C,OAAQ,GAAIskG,oBAAmB,eAAkBnnG,KAAO,6BAA+B4F,UAAU2C,WAAYgyD,gBAAgBE,MAClJnqC,QAAOjrB,KAAKxC,aAKrBmiC,kBAEPkjE,qBAAwB,WACxB,QAASA,sBAAqBlnF,UAAWtN,OAAQq0F,oBAAqBrhF,WAAY8hF,eAAgBroB,gBAAiBsoB,SAAUnF,eACzH,GAAIriE,OAAQ1iC,IACZA,MAAKyiB,UAAYA,UACjBziB,KAAKmV,OAASA,OACdnV,KAAKwpG,oBAAsBA,oBAC3BxpG,KAAKiqG,eAAiBA,eACtBjqG,KAAK4hF,gBAAkBA,gBACvB5hF,KAAKkqG,SAAWA,SAChBlqG,KAAK+kG,cAAgBA,cACrB/kG,KAAKmqG,gBAAkB,GAAIhrB,iBAC3Bn/E,KAAKoqG,gBAAkB,GAAI9hF,KAC3BtoB,KAAKqqG,eAAiB,EAEtBrqG,KAAK6pB,oBAAsB2/E,oBAAoBlgF,UAAUE,YAAY1nB,OAAS,EAC9EqmB,WAAWvhB,QAAQ,SAAU2hB,UAAWpjB,OACpC,GAAqB8qB,UAAWqD,YAAYC,MAAyBhL,UAAmB,SACxFma,OAAMynE,gBAAgBtqB,eAAe5vD,SAAU1H,WAC/Cma,MAAM0nE,gBAAgB1pF,IAAI6H,UAAWpjB,SAyoB7C,MAjoBAwkG,sBAAqBppG,UAAUg7C,eAK/B,SAAU27B,UAAW3zE,SAAW,MAAO,OAMvComG,qBAAqBppG,UAAUm7C,mBAK/B,SAAUy7B,cAAe5zE;AAAW,MAAO,OAM3ComG,qBAAqBppG,UAAU+zC,UAK/B,SAAU/jC,KAAMy4B,QACZ,GAAqBqL,gBAAoCrL,OAAOshE,mBAAmB5B,mBAC9D6B,YAAc/4E,YAAYjhB,KAAKlN,OAC/BmiB,KAAOxlB,KAAKiqG,eAAevyC,mBAAmB6yC,YAAgCh6F,KAAgB,WACnH,OAAOiV,MAAO,GAAI+uB,cAAa/uB,KAAM6uB,eAAmC9jC,KAAgB,YACpF,GAAI6jC,SAAQm2D,YAAal2D,eAAmC9jC,KAAgB,aAOpFo5F,qBAAqBppG,UAAUq7C,eAK/B,SAAU8xB,UAAWnqE,SACjB,MAAO,IAAIkxC,SAAQi5B,UAAUjsE,KAAMisE,UAAUrqE,MAAOqqE,UAAU1jE,aAOlE2/F,qBAAqBppG,UAAUu7C,aAK/B,SAAU8xB,QAASrqE,SAAW,MAAO,OAMrComG,qBAAqBppG,UAAUi1C,aAK/B,SAAUp9B,QAAS4wB,QACf,GAAItG,OAAQ1iC,KACSwqG,gBAAkBxqG,KAAK6pB,oBACvB7b,SAAWoK,QAAQ3W,KACnB8sD,iBAAmBvhD,gBAAgBoL,QACxD,IAAIm2C,iBAAiBpoD,OAAS8H,qBAAqBM,QAC/CggD,iBAAiBpoD,OAAS8H,qBAAqBI,MAI/C,MAAO,KAEX,IAAIkgD,iBAAiBpoD,OAAS8H,qBAAqBS,YAC/CpD,qBAAqBijD,iBAAiBrhD,UAGtC,MAAO,KAEX,IAAqBu9F,mBACAC,2BACAC,0BACAC,eACAC,UACAC,mCACAC,0BACAC,uBACAC,oBAAqB,EACrB39F,SACA49F,kBAAoBp1E,WAAW1d,QAASpY,KAAKmV,OAAO6gB,qBAAsB,SAAUvzB,EAAGkI,MAAQ,MAAO+3B,OAAM00B,aAAa30D,EAAGkI,KAAMqxD,gBAAgBC,UACvK7jD,SAAQ9K,MAAM1G,QAAQ,SAAU2G,MAC5B,GACqB49F,wBACA3zC,YAFA4zC,WAAa1oE,MAAM2oE,WAAWH,kBAAmB39F,KAAMk9F,eAAgBC,wBAAyBG,OAAQF,uBAAwBC,aAGhIU,eAAiB5oE,MAAM6oE,wBAAwBh+F,KAAK9L,KACrEihC,OAAMvtB,OAAO6gB,sBAAwBs1E,gBAAkB9C,eACvD9lE,MAAM00B,aAAauxC,kCAAmCp7F,KAAKvD,WAAYgyD,gBAAgBC,SACvFkvC,uBAAyB59F,KAAKlK,OAEzBioG,eAAe9sF,WAAWiqF,wBAC/B0C,uBAAyB59F,KAAKlK,MAC9Bm0D,YAAc8zC,eAAerlG,UAAUwiG,qBAAqB3mG,QAAU,IAE1E,IAAqB0pG,oBAA+C,MAA1BL,sBACtCK,sBACIP,oBACAvoE,MAAM00B,aAAa,mHAAoH7pD,KAAKvD,YAEhJihG,oBAAqB,EACrBvoE,MAAMunE,eAAelE,2BAA4C,YAAkC,uBAA4Bx4F,KAAKvD,WAAY+gG,uBAAwBD,gCAAiCE,sBAExMI,YAAeI,qBAEhBl+F,MAAMxG,KAAK47B,MAAMkZ,eAAeruC,KAAM,OACtCk9F,eAAe3jG,MAAMyG,KAAK9L,KAAM8L,KAAKlK,UAG7C,IAAqBooG,oBAAqB/2E,yBAAyB1mB,SAAUy8F,gBACzEpxF,GAAKrZ,KAAK0rG,iBAAiB1rG,KAAKmqG,gBAAiBsB,oBAAqBE,eAAiBtyF,GAAG8O,WAAYyjF,aAAevyF,GAAGuyF,aACvGr2D,cACAs2D,wBAA0B,GAAI7nF,KAC9B8nF,cAAgB9rG,KAAK+rG,qBAAqBb,kBAAmB9yF,QAAQ3W,KAAMkqG,eAAgBjB,wBAAyBC,uBAA2CvyF,QAAmB,WAAGm9B,WAAYs2D,yBACjMG,aAAehsG,KAAKisG,2BAA2B7zF,QAAQ3W,KAAMipG,wBAAyBmB,yBACtFK,WAAaljE,OAAOkiE,mBAAqBD,mBACzCkB,gBAAkB,GAAIja,wBAAuBlyF,KAAKwpG,oBAAwCxgE,OAAuB,gBAAGkjE,WAAYJ,cAAex+F,MAAOioC,WAAY21D,kBAAmBV,gBAAoCpyF,QAAmB,YAC5O/N,SAAWT,SAAS2kD,iBAAiBnhD,YAAcg/F,qBAAuBpsG,KAAMoY,QAAQ/N,SAAUgiG,eAAe5rG,OAAOyqG,kBAAmBY,cAAeZ,kBAAuCliE,OAAuB,gBAAImjE,iBACjPA,iBAAgB5Y,cAEhB,IAIqB+Y,eAJAC,mBAAmD,MAA9Bh+C,iBAAiBlhD,UACvDimB,YAAYC,MAAMg7B,iBAAiBlhD,WAAW,GAC9Co+F,mBACiBp3D,eAAoCrL,OAAOshE,mBAAmBiC,mBAEnF,IAAIh+C,iBAAiBpoD,OAAS8H,qBAAqBE,WAC3CiK,QAAQ/N,WAAa+N,QAAQ/N,SAASmiG,MAAMj3E,mBAC5Cv1B,KAAKo3D,aAAa,4CAAgEh/C,QAAmB,YAEzGk0F,cAAgB,GAAIpyE,eAAal6B,KAAKqqG,kBAAkBY,mBAAsC,KAAW52D,eAAmCj8B,QAAmB,gBAE9J,IAAI8yF,kBACLlrG,KAAKysG,sCAAsCX,cAAejB,QAC1D7qG,KAAK0sG,gDAAgDZ,cAAeE,aAAiC5zF,QAAmB,YACxHk0F,cAAgB,GAAIvyE,qBAAoBzsB,MAAOu9F,OAAQt1D,WAAYq1D,YAAauB,gBAAgBQ,yBAA0BR,gBAAgBxY,mBAAoBwY,gBAAgBvZ,4BAA6BuZ,gBAAgBjwE,aAAc7xB,SAAU4gG,mBAAsC,KAAW52D,eAAmCj8B,QAAmB,gBAEzV,CACDpY,KAAK4sG,qBAAqBhB,aAAcxzF,SACxCpY,KAAK6sG,wBAAwBf,cAAkC1zF,QAAmB,WAClF,IAAqB00F,kBAAmB7B,mBAAqB,KAAOjiE,OAAOshE,mBAAmBiC,mBAC9FD,eAAgB,GAAIryE,YAAWjsB,SAAUV,MAAO0+F,aAAcnB,OAAQt1D,WAAY42D,gBAAgBQ,yBAA0BR,gBAAgBxY,mBAAoBwY,gBAAgBvZ,4BAA6BuZ,gBAAgBjwE,aAAc7xB,SAAU4gG,mBAAqB,KAAO6B,iBAAkB10F,QAAQpO,WAAYoO,QAAQhO,eAAiB,MAEpV,GAAI6gG,mBAAoB,CACpB,GAAqB8B,yBAA0B/sG,KAAK6pB,oBAC/BmjF,iBAAmBt4E,yBAAyByB,iBAAkB40E,wBAC/EkC,uBAAyBjtG,KAAK0rG,iBAAiB1rG,KAAKmqG,gBAAiB6C,kBAAkB7kF,WACtE+kF,gCAAkC,GAAIlpF,KACtCmpF,sBAAwBntG,KAAK+rG,sBAAqB,EAAM3zF,QAAQ3W,KAAMwrG,uBAAwBnC,mCAAwD1yF,QAAmB,cAAO80F,iCAChLE,qBAAuBptG,KAAKisG,2BAA2B7zF,QAAQ3W,KAAMqpG,gCAAiCoC,gCAC3HltG,MAAK0sG,gDAAgDS,sBAAuBC,qBAAyCh1F,QAAmB,WACxI,IAAqBi1F,yBAA0B,GAAInb,wBAAuBlyF,KAAKwpG,oBAAwCxgE,OAAuB,gBAAGA,OAAOkiE,kBAAmBiC,8BAA+B,GAAMJ,wBAA4C30F,QAAmB,WAC/Qi1F,yBAAwB9Z,eACxB+Y,cAAgB,GAAIvyE,8BAAgCixE,oBAAqBqC,wBAAwBV,yBAA0BU,wBAAwB1Z,mBAAoB0Z,wBAAwBza,4BAA6Bya,wBAAwBnxE,cAAeowE,eAAgBj4D,eAAmCj8B,QAAmB,YAE7U,MAAOk0F,gBAYX3C,qBAAqBppG,UAAU8qG,WAU/B,SAAUH,kBAAmB39F,KAAMy4F,qBAAsBC,YAAakB,aAAcmG,WAAYpH,YAC5F,GAAqBzkG,MAAOzB,KAAKurG,wBAAwBh+F,KAAK9L,MACzC4B,MAAQkK,KAAKlK,MACbkqG,QAAUhgG,KAAKvD,WACfwjG,UAAY/rG,KAAK+J,MAAMq8F,kBACvBuD,YAAa,CAClC,IAAkB,OAAdoC,UAEA,GADApC,YAAa,EACiB,MAA1BoC,UAAU1F,aACV9nG,KAAKiqG,eAAe1E,qBAAqBiI,UAAUpF,cAAe/kG,OAAO,EAAOkqG,QAASvH,qBAAsBC,iBAE9G,IAAIuH,UAAUzF,YACf,GAAImD,kBAAmB,CACnB,GAAqB1jG,YAAagmG,UAAUpF,aAC5CpoG,MAAKytG,eAAejmG,WAAYnE,MAAOkqG,QAASrH,gBAGhDlmG,MAAKo3D,aAAa,oDAAuDm2C,aAG5E,IAAIC,UAAUxF,YAAa,CAC5B,GAAqBxgG,YAAagmG,UAAUpF,aAC5CpoG,MAAK0tG,gBAAgBlmG,WAAYnE,MAAOkqG,QAASD,gBAE5CE,WAAUvF,WACfjoG,KAAKiqG,eAAetE,WAAW6H,UAAUpF,cAAe/kG,MAAOkqG,QAASvH,qBAAsBmB,cAEzFqG,UAAUtF,gBACfloG,KAAKiqG,eAAe1E,qBAAqBiI,UAAUpF,cAAe/kG,OAAO,EAAOkqG,QAASvH,qBAAsBC,aAC/GjmG,KAAK2tG,sBAAsBH,UAAUpF,cAAe/kG,MAAOkqG,QAASvH,qBAAsBmB,eAErFqG,UAAUrF,WACfnoG,KAAKiqG,eAAe5D,iBAAiB5kG,KAAM4B,MAAOkqG,QAASvH,qBAAsBC,aAE5EuH,UAAUnF,uBACfroG,KAAKiqG,eAAe1E,qBAAqBiI,UAAUnF,sBAAuBhlG,OAAO,EAAOkqG,QAASvH,qBAAsBC,aACvHjmG,KAAK2tG,sBAAsBH,UAAUnF,sBAAuBhlG,MAAOkqG,QAASvH,qBAAsBmB,eAE7FqG,UAAUlF,oBACftoG,KAAKiqG,eAAe1E,qBAAqBiI,UAAUlF,oBAAqBjlG,OAAO,EAAOkqG,QAASvH,qBAAsBC,aAEhHuH,UAAUjF,kBACfvoG,KAAKiqG,eAAetE,WAAW6H,UAAUjF,iBAAkBllG,MAAOkqG,QAASvH,qBAAsBmB,kBAIrGiE,YAAaprG,KAAKiqG,eAAetD,2BAA2BllG,KAAM4B,MAAOkqG,QAASvH,qBAAsBC,YAK5G,OAHKmF,aACDprG,KAAKiqG,eAAe5D,iBAAiB5kG,KAAM4B,MAAOkqG,QAASvH,qBAAsBC,aAE9EmF,YAMXzB,qBAAqBppG,UAAUgrG,wBAI/B,SAAUx2E,UACN,MAAO,UAAU1pB,KAAK0pB,UAAYA,SAAS9uB,UAAU,GAAK8uB,UAS9D40E,qBAAqBppG,UAAUktG,eAO/B,SAAUjmG,WAAYnE,MAAO2G,WAAYk8F,YACjC1+F,WAAWvE,QAAQ,MAAO,GAC1BjD,KAAKo3D,aAAa,uCAA0CptD,YAEhEk8F,WAAWp/F,KAAK,GAAIquC,aAAY3tC,WAAYnE,MAAO2G,cASvD2/F,qBAAqBppG,UAAUmtG,gBAO/B,SAAUlmG,WAAYnE,MAAO2G,WAAYsjG,YACjC9lG,WAAWvE,QAAQ,MAAO,GAC1BjD,KAAKo3D,aAAa,wCAA2CptD,YAEjEsjG,WAAWxmG,KAAK,GAAI8mG,uBAAsBpmG,WAAYnE,MAAO2G,cAUjE2/F,qBAAqBppG,UAAUotG,sBAQ/B,SAAUlsG,KAAMkT,WAAY3K,WAAYg8F,qBAAsBmB,cAC1DnnG,KAAKiqG,eAAetE,WAAWlkG,KAAO,SAAUkT,WAAa,UAAW3K,WAAYg8F,qBAAsBmB,eAO9GwC,qBAAqBppG,UAAUmrG,iBAK/B,SAAUvB,gBAAiBsB,oBACvB,GAAI/oE,OAAQ1iC,KAISmoB,WAAa,GAAI3kB,OAAMxD,KAAKoqG,gBAAgBlO,MAE5C0P,cAAe,CAKpC,OAJAzB,iBAAgB3+F,MAAMigG,mBAAoB,SAAUx7E,SAAU1H,WAC1DJ,WAA8Bua,MAAM0nE,gBAAgB3pF,IAAI8H,YAAgBA,UACxEqjF,aAAeA,cAAgB37E,SAAS6uD,wBAGxC32D,WAAYA,WAAWnF,OAAO,SAAU6F,KAAO,QAASA,MACxD+iF,aAAcA,eActBjC,qBAAqBppG,UAAUwrG,qBAW/B,SAAUb,kBAAmB7+F,YAAa8b,WAAYzmB,MAAOipG,uBAAwBkD,kBAAmBC,iBAAkBC,+BACtH,GAAIrrE,OAAQ1iC,KACSguG,kBAAoB,GAAIhqF,KACxBsF,UAA6B,KAC7BwiF,cAAgB3jF,WAAWxiB,IAAI,SAAU4iB,WAC1D,GAAqBve,YAAa,GAAI4L,iBAAgBi4F,kBAAkB9jG,MAAO8jG,kBAAkB3jG,IAAK,aAAe/C,eAAeohB,UAAUpiB,MAC1IoiB,WAAUG,cACVY,UAAYf,UAEhB,IAAqB0lF,wBACAj4D,eAAoCtT,MAAMunE,eAAe7E,gCAAgC78E,UAAWlc,YAAarC,WAGtIgsC,gBAAiBtT,MAAMwrE,yBAAyB7hG,YAAa2pC,eAC7D,IAAqBC,YAAgCvT,MAAMunE,eAAexE,6BAA6Bl9E,UAAWve,WAClH04B,OAAMyrE,6BAA6B5lF,UAAU8sB,OAAQ3zC,MAAOusG,oBAAqBF,+BACjFpD,uBAAuB/jG,QAAQ,SAAUwnG,aACJ,IAA5BA,WAAW/qG,MAAMvB,QAAgBymB,UAAUG,aAC3C0lF,WAAWC,uBAAuB9lF,cACnCulF,iBAAiBhnG,KAAK,GAAImuC,cAAam5D,WAAW3sG,KAAM8gB,wBAAwBgG,UAAUpiB,KAAKkB,WAAY+mG,WAAWpkG,aACtHgkG,kBAAkB3xE,IAAI+xE,WAAW3sG,QAGzC,IAAqBooB,qBAAsB6Y,MAAM7Y,mBAEjD,OADA6Y,OAAM7Y,qBAAuBtB,UAAU0B,QAAQnoB,OACxC,GAAIi0C,cAAaxtB,UAAW0lF,oBAAqBj4D,eAAgBC,WAAYpsB,oBAAqB7f,aAgB7G,OAdA2gG,wBAAuB/jG,QAAQ,SAAUwnG,YACrC,GAAIA,WAAW/qG,MAAMvB,OAAS,EACrBksG,kBAAkBl6E,IAAIs6E,WAAW3sG,OAClCihC,MAAM00B,aAAa,iDAAsDg3C,WAAW/qG,MAAQ,IAAM+qG,WAAWpkG,gBAGhH,KAAKsf,UAAW,CACjB,GAAqBglF,UAA4B,IAC7CpD,qBACAoD,SAAW9rF,gCAAgCkgB,MAAMjgB,UAAWqK,YAAY+lB,cAE5Ei7D,iBAAiBhnG,KAAK,GAAImuC,cAAam5D,WAAW3sG,KAAM6sG,SAAUF,WAAWpkG,gBAG9E8hG,eASXnC,qBAAqBppG,UAAU4tG,6BAO/B,SAAUF,oBAAqBM,WAAYC,0BAA2BT,+BAClE,GAAIE,oBAAqB,CACrB,GAAqBQ,oBAAqB,GAAInmF,IAC9CimF,YAAW3nG,QAAQ,SAAUigG,WACzB,GAAqB3rE,WAAYuzE,mBAAmBhuF,IAAIomF,UAAUplG,KAC7Dy5B,aAAaA,UAAU0pE,WAGxB6J,mBAAmB/tF,IAAImmF,UAAUplG,KAAMolG,aAG/CrmG,OAAOw2B,KAAKi3E,qBAAqBrnG,QAAQ,SAAU8nG,SAC/C,GAAqBC,QAASV,oBAAoBS,SAC7B7H,UAAY4H,mBAAmBhuF,IAAIkuF,OAEpD9H,aACAkH,8BAA8B1xE,IAAIwqE,UAAUplG,MACvCk0B,kBAAkBkxE,UAAUlyF,aAC7B65F,0BAA0B1nG,KAAK,GAAI6uC,2BAA0B+4D,QAAS7H,UAAUplG,KAAMolG,UAAUlyF,WAAYkyF,UAAU78F,kBAY1I2/F,qBAAqBppG,UAAU0rG,2BAM/B,SAAU5/F,YAAa3K,MAAOmqG,yBAC1B,GAAInpE,OAAQ1iC,KACS4uG,oBAMrB,OALAltG,OAAMkF,QAAQ,SAAUwoB,MACfA,KAAKw1E,WAAciH,wBAAwB/3E,IAAI1E,KAAK3tB,OACrDmtG,kBAAkB9nG,KAAK47B,MAAMunE,eAAezE,yBAAyBn5F,YAAa+iB,SAGnFpvB,KAAKkuG,yBAAyB7hG,YAAauiG,oBAMtDjF,qBAAqBppG,UAAUsuG,yBAI/B,SAAU1mF,YACN,MAAOA,YAAWnF,OAAO,SAAUuF,WAAa,MAAOA,WAAUA,UAAUG,eAM/EihF,qBAAqBppG,UAAUuuG,6BAI/B,SAAU3mF,YACN,MAAOnoB,MAAK6uG,yBAAyB1mF,YAChCxiB,IAAI,SAAU4iB,WAAa,MAA0BphB,gBAAeohB,UAAUA,UAAUpiB,SAOjGwjG,qBAAqBppG,UAAUssG,wBAK/B,SAAU1kF,WAAYne,YAClB,GAAqB+kG,oBAAqB/uG,KAAK8uG,6BAA6B3mF,WACxE4mF,oBAAmBjtG,OAAS,GAC5B9B,KAAKo3D,aAAa,sJAEgB23C,mBAAmBnpG,KAAK,KAAOoE,aAazE2/F,qBAAqBppG,UAAUqsG,qBAU/B,SAAUhB,aAAcxzF,SACpB,GAAqB42F,QAAS52F,QAAQ3W,KAAKc,QAAQ,WAAY,GAC/D,KAAKqpG,eAAiB5rG,KAAK4hF,gBAAgBmc,WAAWiR,OAAQhvG,KAAKkqG,UAAW,CAC1E,GAAqB1sC,UAAW,IAAMwxC,OAAS,6BAC/CxxC,WACI,UAAYwxC,OAAS,2EAErBxxC,UADAwxC,OAAO/rG,QAAQ,MAAO,EAElB,UAAY+rG,OAAS,gIAIrB,+FAERhvG,KAAKo3D,aAAaoG,SAA6BplD,QAAmB,cAS1EuxF,qBAAqBppG,UAAUmsG,gDAM/B,SAAUvkF,WAAY6jF,aAAchiG,YAChC,GAAI04B,OAAQ1iC,KACS+uG,mBAAqB/uG,KAAK8uG,6BAA6B3mF,WACxE4mF,oBAAmBjtG,OAAS,GAC5B9B,KAAKo3D,aAAa,uCAAyC23C,mBAAmBnpG,KAAK,KAAMoE,YAE7FgiG,aAAaplG,QAAQ,SAAUwoB,MAC3BsT,MAAM00B,aAAa,oBAAsBhoC,KAAK3tB,KAAO,2KAA8KuI,eAQ3O2/F,qBAAqBppG,UAAUksG,sCAK/B,SAAUtkF,WAAY0iF,QAClB,GAAInoE,OAAQ1iC,KACSivG,mBAAqB,GAAIjrF,IAC9CmE,YAAWvhB,QAAQ,SAAU2hB,WACzB/nB,OAAOw2B,KAAKzO,UAAUA,UAAU+sB,SAAS1uC,QAAQ,SAAUuT,GACvD,GAAqB60B,WAAYzmB,UAAUA,UAAU+sB,QAAQn7B,EAC7D80F,oBAAmB5yE,IAAI2S,eAG/B67D,OAAOjkG,QAAQ,SAAUsoG,OACD,MAAhBA,MAAMr7F,QAAmBo7F,mBAAmBn7E,IAAIo7E,MAAMztG,OACtDihC,MAAM00B,aAAa,iBAAmB83C,MAAMtiG,SAAW,2KAA8KsiG,MAAMllG,eASvP2/F,qBAAqBppG,UAAU2tG,yBAK/B,SAAU7hG,YAAakiG,YACnB,GAAI7rE,OAAQ1iC,IAGZ,OAAOuuG,YAAWvrF,OAAO,SAAU6jF,WAC/B,GAAIA,UAAU1gG,OAASm0B,oBAAoBC,WACtCmI,MAAMk/C,gBAAgB+b,YAAYtxF,YAAaw6F,UAAUplG,KAAMihC,MAAMwnE,UAAW,CACjF,GAAqB1sC,UAAW,kBAAoBqpC,UAAUplG,KAAO,yCAA2C4K,YAAc,IAC1HA,aAAYmS,WAAW,OACvBg/C,UACI,YAAcqpC,UAAUplG,KAAO,kMAG9B4K,YAAYpJ,QAAQ,MAAO,IAChCu6D,UACI,YAAcnxD,YAAc,yCAA2Cw6F,UAAUplG,KAAO,wDACnF,YAAc4K,YAAc,iIAC7B,mGAEZq2B,MAAM00B,aAAaoG,SAAUqpC,UAAU78F,YAE3C,OAAQ2rB,kBAAkBkxE,UAAUxjG,UAS5CsmG,qBAAqBppG,UAAU62D,aAM/B,SAAUlmD,QAASlH,WAAYoyD,OACb,SAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDl8D,KAAK+kG,cAAcj+F,KAAK,GAAIq1D,YAAWnyD,WAAYkH,QAASkrD,SAEzDutC,wBAEPwF,mBAAsB,WACtB,QAASA,uBAwFT,MAjFAA,oBAAmB5uG,UAAUi1C,aAK7B,SAAU7uC,IAAKqiC,QACX,GAAqBulB,kBAAmBvhD,gBAAgBrG,IACxD,IAAI4nD,iBAAiBpoD,OAAS8H,qBAAqBM,QAC/CggD,iBAAiBpoD,OAAS8H,qBAAqBI,OAC/CkgD,iBAAiBpoD,OAAS8H,qBAAqBS,WAI/C,MAAO,KAEX,IAAqB0gG,mBAAoBzoG,IAAI2G,MAAM3H,IAAI,SAAU4H,MAAQ,OAAQA,KAAK9L,KAAM8L,KAAKlK,SAC5E4sB,SAAWyE,yBAAyB/tB,IAAIlF,KAAM2tG,mBAC9C/6D,eAAiBrL,OAAOshE,mBAAmBr6E,UAC3C5lB,SAAWT,SAAS5J,KAAM2G,IAAI0D,SAAUu/F,sBAC7D,OAAO,IAAI3vE,YAAWtzB,IAAIlF,KAAMmI,SAAS5J,KAAM2G,IAAI2G,wBAA4B,MAAWjD,SAAUgqC,eAAgB1tC,IAAIqD,WAAYrD,IAAIyD,gBAO5I+kG,mBAAmB5uG,UAAUu7C,aAK7B,SAAU8xB,QAASrqE,SAAW,MAAO,OAMrC4rG,mBAAmB5uG,UAAUq7C,eAK7B,SAAU8xB,UAAWnqE,SACjB,MAAO,IAAIkxC,SAAQi5B,UAAUjsE,KAAMisE,UAAUrqE,MAAOqqE,UAAU1jE,aAOlEmlG,mBAAmB5uG,UAAU+zC,UAK7B,SAAU/jC,KAAMy4B,QACZ,GAAqBqL,gBAAoCrL,OAAOshE,mBAAmB5B,kBACnF,OAAO,IAAIt0D,SAAQ7jC,KAAKlN,MAAOgxC,eAAmC9jC,KAAgB,aAOtF4+F,mBAAmB5uG,UAAUg7C,eAK7B,SAAU27B,UAAW3zE,SAAW,MAAO2zE,YAMvCi4B,mBAAmB5uG,UAAUm7C,mBAK7B,SAAUy7B,cAAe5zE,SAAW,MAAO4zE,gBACpCg4B,sBASPvB,sBAAyB,WACzB,QAASA,uBAAsBnsG,KAAM4B,MAAO2G,YACxChK,KAAKyB,KAAOA,KACZzB,KAAKqD,MAAQA,MACbrD,KAAKgK,WAAaA,WAgBtB,MARA4jG,uBAAsBrtG,UAAU8tG,uBAKhC,SAAU9lF,WACN,MAAO+L,eAAc/L,UAAUgM,UAAUtxB,QAAQjD,KAAKqD,UAAW,GAE9DuqG,yBAiBPvB,eAAkB,WAClB,QAASA,gBAAenB,kBAAmBmE,uBAAwBC,wBAAyBnD,iBACxFnsG,KAAKkrG,kBAAoBA,kBACzBlrG,KAAKqvG,uBAAyBA,uBAC9BrvG,KAAKsvG,wBAA0BA,wBAC/BtvG,KAAKmsG,gBAAkBA,gBAiD3B,MAzCAE,gBAAe5rG,OAMf,SAAUyqG,kBAAmB/iF,WAAYgkF,iBACrC,GAAqB38E,SAAU,GAAI2vD,iBACdowB,uBAA0C,KAC1CjmF,UAAYnB,WAAWvJ,KAAK,SAAU2J,WAAa,MAAOA,WAAUA,UAAUG,aACnG,IAAIY,UAEA,IAAK,GADgBuvB,oBAAwCvvB,UAAUf,UAAmB,SAAEswB,mBAClE9tC,EAAI,EAAGA,EAAI8tC,mBAAmB/2C,OAAQiJ,IAAK,CACjE,GAAqBklB,UAAW4oB,mBAAmB9tC,EAClC,OAAbklB,SACAs/E,uBAAyBxkG,EAGzBykB,QAAQqwD,eAAevsD,YAAYC,MAAMslB,mBAAmB9tC,IAAKA,GAI7E,MAAO,IAAIshG,gBAAenB,kBAAmB17E,QAAS+/E,uBAAwBpD,kBAMlFE,eAAe9rG,UAAU+pG,mBAIzB,SAAUr6E,UACN,GAAqBu/E,oBAMrB,OALAxvG,MAAKqvG,uBAAuB7jG,MAAMykB,SAAU,SAAUA,SAAUokB,gBAAkBm7D,iBAAiB1oG,KAAKutC,kBACxGm7D,iBAAiBt7E,OACmB,MAAhCl0B,KAAKsvG,yBACLE,iBAAiB1oG,KAAK9G,KAAKsvG,yBAExBE,iBAAiB1tG,OAAS,EAAI0tG,iBAAiB,GAAK,MAExDnD,kBAuBPzC,sBAAwB,GAAIyC,kBAAe,GAAM,GAAIltB,iBAAmB,KAAM,MAC9EitB,qBAAuB,GAAI+C,oBA+D3BM,iBAAoB,WACpB,QAASA,qBAGT,MADAA,kBAAiBP,MAAQxpF,SAAS,UAC3B+pF,oBAMPr3E,2BAA8B,WAC9B,QAASA,4BAA2BzT,MAAO+qF,cACvC1vG,KAAK2kB,MAAQA,MACb3kB,KAAK0vG,aAAeA,aAExB,MAAOt3E,+BAyEPS,6BAAgC,WAChC,QAASA,8BAA6BlU,MAAO8T,aACzCz4B,KAAK2kB,MAAQA,MACb3kB,KAAKy4B,YAAcA,YAEvB,MAAOI,iCAiEPvB,OACA7I,UAAW,EACXC,WAAY,EAEhB4I,OAAMA,MAAM7I,WAAa,YACzB6I,MAAMA,MAAM5I,YAAc,YAkC1B,IAAIoK,sBAAwB,SAAUruB,QAElC,QAASquB,sBAAqB62E,mBAC1B,GAAIjtE,OAAQj4B,OAAO0iC,KAAKntC,OAASA,IAEjC,OADA0iC,OAAMitE,kBAAoBA,kBACnBjtE,MA+CX,MAnDAziC,WAAU64B,qBAAsBruB,QAWhCquB,qBAAqBv4B,UAAUiU,UAK/B,SAAU7N,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACS2B,MAAQgF,IAAI8N,KAAK9L,OAAOhC,IAAIhF,MAAMgE,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAMg8B,MAAOn/B,UACpG,OAAO,IAAIqsG,qBAAoBjpG,IAAIgE,KAAMhJ,KAAM3B,KAAK2vG,kBAAkBz4E,oBAAoBvwB,IAAIlF,KAAME,KAAKG,UAO7Gg3B,qBAAqBv4B,UAAU4T,kBAK/B,SAAUxN,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACS2B,KAAOgF,IAAI6M,YAAY7N,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAMg8B,MAAOn/B,UACzF,OAAO,IAAIqsG,qBAAoBjpG,IAAIgE,KAAMhJ,KAAM3B,KAAK2vG,kBAAkB94E,4BAA4BlwB,IAAI6M,YAAY1R,UAOtHg3B,qBAAqBv4B,UAAU6T,gBAK/B,SAAUzN,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACS2B,KAAOgF,IAAI5E,OAAO4D,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAMg8B,MAAOn/B,UACpF,OAAO,IAAIqsG,qBAAoBjpG,IAAIgE,KAAMhJ,KAAM3B,KAAK2vG,kBAAkB54E,0BAA0BpwB,IAAIqwB,QAEjG8B,sBACTq9B,gBACEh/B,gBAAmB,WACnB,QAASA,iBAAgB04E,eAAgBC,kBAAmBr5E,WACxDz2B,KAAK6vG,eAAiBA,eACtB7vG,KAAK8vG,kBAAoBA,kBACzB9vG,KAAKy2B,UAAYA,UACjBz2B,KAAK+vG,SAAW,GAAIznF,KACpBtoB,KAAKgwG,WAAa,GAAI1nF,KACtBtoB,KAAKiwG,kBAAoB,EACzBjwG,KAAKw3B,eAAiB,EA4vB1B,MArvBAL,iBAAgB52B,UAAU6S,YAK1B,SAAUzM,IAAK0yB,MACX,GAAqBy/B,GACrB,QAAQnyD,IAAI8uD,WACR,IAAK,IACDqD,GAAKsyB,eAAeM,IACpB,MACJ,KAAK,IACD5yB,GAAKsyB,eAAeK,KACpB,MACJ,KAAK,IACD3yB,GAAKsyB,eAAeQ,QACpB,MACJ,KAAK,IACD9yB,GAAKsyB,eAAeO,MACpB,MACJ,KAAK,IACD7yB,GAAKsyB,eAAeS,MACpB,MACJ,KAAK,KACD/yB,GAAKsyB,eAAeU,GACpB,MACJ,KAAK,KACDhzB,GAAKsyB,eAAeW,EACpB,MACJ,KAAK,KACDjzB,GAAKsyB,eAAeC,MACpB,MACJ,KAAK,KACDvyB,GAAKsyB,eAAeE,SACpB,MACJ,KAAK,MACDxyB,GAAKsyB,eAAeG,SACpB,MACJ,KAAK,MACDzyB,GAAKsyB,eAAeI,YACpB,MACJ,KAAK,IACD1yB,GAAKsyB,eAAeY,KACpB,MACJ,KAAK,IACDlzB,GAAKsyB,eAAec,MACpB,MACJ,KAAK,KACDpzB,GAAKsyB,eAAea,WACpB,MACJ,KAAK,KACDnzB,GAAKsyB,eAAee,YACpB,MACJ,SACI,KAAM,IAAI5nF,OAAM,yBAA2BoC,IAAI8uD,WAEvD,MAAOl8B,4BAA2BF,KAAM,GAAI2zD,oBAAmBl0B,GAAI94D,KAAKkwG,OAAOvpG,IAAI0M,KAAMikB,MAAM5I,YAAa1uB,KAAKkwG,OAAOvpG,IAAI2M,MAAOgkB,MAAM5I,eAO7IyI,gBAAgB52B,UAAUgT,WAK1B,SAAU5M,IAAK0yB,MAEX,MADAD,qBAAoBC,KAAM1yB,KACnB3G,KAAK4J,SAASjD,IAAI6M,YAAa6lB,OAO1ClC,gBAAgB52B,UAAUkT,iBAK1B,SAAU9M,IAAK0yB,MACX,GAAqBh2B,OAAQrD,KAAKkwG,OAAOvpG,IAAIsI,UAAWqoB,MAAM5I,WAC9D,OAAO6K,4BAA2BF,KAAMh2B,MAAMqpF,YAAY1sF,KAAKkwG,OAAOvpG,IAAI+M,QAAS4jB,MAAM5I,YAAa1uB,KAAKkwG,OAAOvpG,IAAIgN,SAAU2jB,MAAM5I,eAO1IyI,gBAAgB52B,UAAUiU,UAK1B,SAAU7N,IAAK0yB,MACX,KAAM,IAAI90B,OAAM,yEAA2EoC,IAAIlF,OAOnG01B,gBAAgB52B,UAAUqT,kBAK1B,SAAUjN,IAAK0yB,MACX,GACqB82E,UADAC,cAAgBpwG,KAAK4J,SAASjD,IAAIhF,KAAM21B,MAAM5I,WAQnE,OALIyhF,UADAxpG,cAAeipG,qBACJjpG,IAAI0nB,UAAU+hF,eAGdpwG,KAAKkwG,OAA0BvpG,IAAW,OAAG2wB,MAAM5I,YAAY3C,OAAOqkF,eAE9E72E,2BAA2BF,KAAM82E,WAO5Ch5E,gBAAgB52B,UAAUuT,sBAK1B,SAAUnN,IAAK0yB,MAEX,MADAC,sBAAqBD,KAAM1yB,KACpB3G,KAAK8vG,mBAOhB34E,gBAAgB52B,UAAUwT,mBAK1B,SAAUpN,IAAK0yB,MACXC,qBAAqBD,KAAM1yB,IAE3B,KAAK,GADgBhF,OAAQslB,QAAQtgB,IAAI6M,YAAY1R,SAC3BiJ,EAAI,EAAGA,EAAIpE,IAAI4uD,QAAQzzD,OAAS,EAAGiJ,IACzDpJ,KAAKmF,KAAKmgB,QAAQtgB,IAAI4uD,QAAQxqD,KAC9BpJ,KAAKmF,KAAK9G,KAAKkwG,OAAOvpG,IAAI6M,YAAYzI,GAAIusB,MAAM5I,YAGpD,OADA/sB,MAAKmF,KAAKmgB,QAAQtgB,IAAI4uD,QAAQ5uD,IAAI4uD,QAAQzzD,OAAS,KAC5C6E,IAAI6M,YAAY1R,QAAU,EAC7B8jB,WAAWkH,YAAYowD,mBAAmBnxD,OAAOpqB,MACjDikB,WAAWkH,YAAYqwD,aAAapxD,QAAQpqB,KAAK,GAAIwkB,WAAWxkB,KAAKuB,MAAM,OAOnFi0B,gBAAgB52B,UAAUyT,eAK1B,SAAUrN,IAAK0yB,MACX,GAAqBg3E,cAAerwG,KAAKswG,iBAAiB3pG,IAC1D,OAAI0pG,cACOrwG,KAAKuwG,kBAAkB5pG,IAAK0pG,aAAch3E,MAG1CE,2BAA2BF,KAAMr5B,KAAKkwG,OAAOvpG,IAAIvE,IAAKk1B,MAAM5I,YAAYza,IAAIjU,KAAKkwG,OAAOvpG,IAAIsN,IAAKqjB,MAAM5I,eAQtHyI,gBAAgB52B,UAAU2T,gBAK1B,SAAUvN,IAAK0yB,MACX,GAAqBj3B,KAAMpC,KAAKkwG,OAAOvpG,IAAIvE,IAAKk1B,MAAM5I,YACjCza,IAAMjU,KAAKkwG,OAAOvpG,IAAIsN,IAAKqjB,MAAM5I,YACjCrrB,MAAQrD,KAAKkwG,OAAOvpG,IAAItD,MAAOi0B,MAAM5I,WAC1D,OAAO6K,4BAA2BF,KAAMj3B,IAAI6R,IAAIA,KAAKyM,IAAIrd,SAO7D8zB,gBAAgB52B,UAAU4T,kBAK1B,SAAUxN,IAAK0yB,MACX,KAAM,IAAI90B,OAAM,4EAOpB4yB,gBAAgB52B,UAAU6T,gBAK1B,SAAUzN,IAAK0yB,MACX,KAAM,IAAI90B,OAAM,0EAOpB4yB,gBAAgB52B,UAAU8T,sBAK1B,SAAU1N,IAAK0yB,MACX,MAAOE,4BAA2BF,KAAMpS,QAAQtgB,IAAItD,SAMxD8zB,gBAAgB52B,UAAUiwG,UAI1B,SAAU/uG,MAAQ,MAAOzB,MAAK6vG,eAAeY,SAAShvG,OAMtD01B,gBAAgB52B,UAAU+T,gBAK1B,SAAU3N,IAAK0yB,MACX,GAAqBg3E,cAAerwG,KAAKswG,iBAAiB3pG,IAC1D,IAAI0pG,aACA,MAAOrwG,MAAKuwG,kBAAkB5pG,IAAK0pG,aAAch3E,KAGjD,IAAqB13B,MAAO3B,KAAK4J,SAASjD,IAAIhF,KAAM21B,MAAM5I,YACrCjoB,OAAS,KACT8N,SAAWvU,KAAKkwG,OAAOvpG,IAAI4N,SAAU+iB,MAAM5I,WAChE,IAAIna,WAAavU,KAAK8vG,kBAAmB,CACrC,GAAqBY,SAAU1wG,KAAKwwG,UAAU7pG,IAAIlF,KAC9CivG,WACAjqG,OAASiqG,QAAQ3kF,OAAOpqB,OAMhC,MAHc,OAAV8E,SACAA,OAAS8N,SAAS+3E,WAAW3lF,IAAIlF,KAAME,OAEpC43B,2BAA2BF,KAAM5yB,SAQhD0wB,gBAAgB52B,UAAUmU,eAK1B,SAAU/N,IAAK0yB,MACX,MAAOE,4BAA2BF,KAAM5S,IAAIzmB,KAAKkwG,OAAOvpG,IAAIgO,WAAY2iB,MAAM5I,eAOlFyI,gBAAgB52B,UAAUqU,mBAK1B,SAAUjO,IAAK0yB,MACX,MAAOE,4BAA2BF,KAAM1S,cAAc3mB,KAAKkwG,OAAOvpG,IAAIgO,WAAY2iB,MAAM5I,eAO5FyI,gBAAgB52B,UAAUsU,kBAK1B,SAAUlO,IAAK0yB,MACX,GAAqBg3E,cAAerwG,KAAKswG,iBAAiB3pG,IAC1D,IAAI0pG,aACA,MAAOrwG,MAAKuwG,kBAAkB5pG,IAAK0pG,aAAch3E,KAGjD,IAAqB5yB,QAAS,KACT8N,SAAWvU,KAAKkwG,OAAOvpG,IAAI4N,SAAU+iB,MAAM5I,WAOhE,OANIna,YAAavU,KAAK8vG,oBAClBrpG,OAASzG,KAAKwwG,UAAU7pG,IAAIlF,OAElB,MAAVgF,SACAA,OAAS8N,SAAS6a,KAAKzoB,IAAIlF,OAExB83B,2BAA2BF,KAAM5yB,SAQhD0wB,gBAAgB52B,UAAUuU,mBAK1B,SAAUnO,IAAK0yB,MACX,GAAqB9kB,UAAWvU,KAAKkwG,OAAOvpG,IAAI4N,SAAU+iB,MAAM5I,WAChE,IAAIna,WAAavU,KAAK8vG,kBAAmB,CACrC,GAAqBY,SAAU1wG,KAAKwwG,UAAU7pG,IAAIlF,KAClD,IAAIivG,QACA,KAAM,IAAInsG,OAAM,6CAGxB,MAAOg1B,4BAA2BF,KAAM9kB,SAAS6a,KAAKzoB,IAAIlF,MAAMif,IAAI1gB,KAAKkwG,OAAOvpG,IAAItD,MAAOi0B,MAAM5I,eAOrGyI,gBAAgB52B,UAAU0U,sBAK1B,SAAUtO,IAAK0yB,MACX,MAAOr5B,MAAKuwG,kBAAkB5pG,IAAK3G,KAAKswG,iBAAiB3pG,KAAM0yB,OAOnElC,gBAAgB52B,UAAUyU,oBAK1B,SAAUrO,IAAK0yB,MACX,MAAOr5B,MAAKuwG,kBAAkB5pG,IAAK3G,KAAKswG,iBAAiB3pG,KAAM0yB,OAOnElC,gBAAgB52B,UAAUqJ,SAK1B,SAAUpD,KAAM6yB,MACZ,GAAIqJ,OAAQ1iC,IACZ,OAAOwG,MAAKb,IAAI,SAAUgB,KAAO,MAAO+7B,OAAMwtE,OAAOvpG,IAAK0yB,SAO9DlC,gBAAgB52B,UAAUwU,WAK1B,SAAUpO,IAAK0yB,MACX,KAAM,IAAI90B,OAAM,gEAAkEoC,IAAI6tD,wBAA0B,eAAiB7tD,IAAI8tD,WAOzIt9B,gBAAgB52B,UAAU2vG,OAK1B,SAAUvpG,IAAK0yB,MACX,GAAqB5yB,QAASzG,KAAKgwG,WAAWvvF,IAAI9Z,IAClD,OAAIF,QACOA,QACHzG,KAAK+vG,SAAStvF,IAAI9Z,MAAQA,KAAKD,MAAM1G,KAAMq5B,OAQvDlC,gBAAgB52B,UAAUgwG,kBAM1B,SAAU5pG,IAAK0pG,aAAch3E,MAoCzB,GAAqBs3E,mBAAoB3wG,KAAKkwG,OAAOG,aAAa97F,SAAU+iB,MAAM5I,YAC7DkiF,UAA6B,MAC9C5wG,MAAK6wG,eAAeR,aAAa97F,YAGjCq8F,UAAY5wG,KAAK8wG,oBAEjBH,kBAAoBC,UAAUlwF,IAAIiwF,mBAElC3wG,KAAKgwG,WAAWtvF,IAAI2vF,aAAa97F,SAAUq8F,WAE/C,IAAqB3hG,WAAY0hG,kBAAkBjjB,SAG/C2iB,wBAAwBx6C,gBACxB71D,KAAK+vG,SAASrvF,IAAI2vF,aAAc,GAAIz6C,YAAWy6C,aAAa1lG,KAAM0lG,aAAa97F,SAAU87F,aAAa5uG,KAAM4uG,aAAa1uG,OAGzH3B,KAAK+vG,SAASrvF,IAAI2vF,aAAc,GAAIx7C,cAAaw7C,aAAa1lG,KAAM0lG,aAAa97F,SAAU87F,aAAa5uG,MAG5G,IAAqBsvG,QAAS/wG,KAAKkwG,OAAOvpG,IAAK2wB,MAAM5I,WASrD,OANA1uB,MAAK+vG,SAASzzE,OAAO+zE,cAEjBO,WACA5wG,KAAKgxG,iBAAiBJ,WAGnBr3E,2BAA2BF,KAAMpqB,UAAUy9E,YAAYzlE,QAAQ,MAAO8pF,UAMjF55E,gBAAgB52B,UAAU+vG,iBAI1B,SAAU3pG,KACN,GAAI+7B,OAAQ1iC,KACS0G,MAAQ,SAAUpD,QAASqD,KAC5C,OAAQ+7B,MAAMqtE,SAAStvF,IAAI9Z,MAAQA,KAAKD,MAAMpD,SAElD,OAAOqD,KAAID,OACP0M,YAIA,SAAUzM,KAAO,MAAO,OACxB4M,WAIA,SAAU5M,KAAO,MAAO,OACxB8M,iBAIA,SAAU9M,KAAO,MAAO,OACxBiN,kBAIA,SAAUjN,KAAO,MAAO,OACxBmN,sBAIA,SAAUnN,KAAO,MAAO,OACxBoN,mBAIA,SAAUpN,KAAO,MAAO,OACxBqN,eAIA,SAAUrN,KAAO,MAAOD,OAAM1G,KAAM2G,IAAIvE,MACxC8R,gBAIA,SAAUvN,KAAO,MAAO,OACxBwN,kBAIA,SAAUxN,KAAO,MAAO,OACxByN,gBAIA,SAAUzN,KAAO,MAAO,OACxB0N,sBAIA,SAAU1N,KAAO,MAAO,OACxB2N,gBAIA,SAAU3N,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI4N,WACxCC,UAIA,SAAU7N,KAAO,MAAO,OACxB+N,eAIA,SAAU/N,KAAO,MAAO,OACxBiO,mBAIA,SAAUjO,KAAO,MAAO,OACxBkO,kBAIA,SAAUlO,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI4N,WACxCO,mBAIA,SAAUnO,KAAO,MAAO,OACxBoO,WAIA,SAAUpO,KAAO,MAAO,OACxBqO,oBAIA,SAAUrO,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI4N,WAAa5N,KACrDsO,sBAIA,SAAUtO,KACN,MAAOD,OAAM1G,KAAM2G,IAAI4N,WAAa5N,QAQhDwwB,gBAAgB52B,UAAUswG,eAI1B,SAAUlqG,KACN,GAAI+7B,OAAQ1iC,KACS0G,MAAQ,SAAUpD,QAASqD,KAC5C,MAAOA,OAAQ+7B,MAAMqtE,SAAStvF,IAAI9Z,MAAQA,KAAKD,MAAMpD,UAEpC2tG,UAAY,SAAU3tG,QAASqD,KAChD,MAAOA,KAAI2qB,KAAK,SAAU3qB,KAAO,MAAOD,OAAMpD,QAASqD,OAE3D,OAAOA,KAAID,OACP0M,YAIA,SAAUzM,KAAO,MAAOD,OAAM1G,KAAM2G,IAAI0M,OAAS3M,MAAM1G,KAAM2G,IAAI2M,QACjEC,WAIA,SAAU5M,KAAO,OAAO,GACxB8M,iBAIA,SAAU9M,KACN,MAAOD,OAAM1G,KAAM2G,IAAIsI,YAAcvI,MAAM1G,KAAM2G,IAAI+M,UACjDhN,MAAM1G,KAAM2G,IAAIgN,WAExBC,kBAIA,SAAUjN,KAAO,OAAO,GACxBmN,sBAIA,SAAUnN,KAAO,OAAO,GACxBoN,mBAIA,SAAUpN,KAAO,MAAOsqG,WAAUjxG,KAAM2G,IAAI6M,cAC5CQ,eAIA,SAAUrN,KAAO,OAAO,GACxBuN,gBAIA,SAAUvN,KAAO,OAAO,GACxBwN,kBAIA,SAAUxN,KAAO,OAAO,GACxByN,gBAIA,SAAUzN,KAAO,OAAO,GACxB0N,sBAIA,SAAU1N,KAAO,OAAO,GACxB2N,gBAIA,SAAU3N,KAAO,OAAO,GACxB6N,UAIA,SAAU7N,KAAO,OAAO,GACxB+N,eAIA,SAAU/N,KAAO,MAAOD,OAAM1G,KAAM2G,IAAIgO,aACxCC,mBAIA,SAAUjO,KAAO,MAAOD,OAAM1G,KAAM2G,IAAIgO,aACxCE,kBAIA,SAAUlO,KAAO,OAAO,GACxBmO,mBAIA,SAAUnO,KAAO,OAAO,GACxBoO,WAIA,SAAUpO,KAAO,OAAO,GACxBqO,oBAIA,SAAUrO,KAAO,OAAO,GACxBsO,sBAIA,SAAUtO,KAAO,OAAO,MAMhCwwB,gBAAgB52B,UAAUuwG,kBAG1B,WACI,GAAqBI,YAAalxG,KAAKiwG,mBAEvC,OADAjwG,MAAKw3B,eAAiB1a,KAAKC,IAAI/c,KAAKiwG,kBAAmBjwG,KAAKw3B,gBACrD,GAAI7R,aAAYoT,cAAc/4B,KAAKy2B,UAAWy6E,cAMzD/5E,gBAAgB52B,UAAUywG,iBAI1B,SAAUJ,WAEN,GADA5wG,KAAKiwG,oBACDW,UAAUnvG,MAAQs3B,cAAc/4B,KAAKy2B,UAAWz2B,KAAKiwG,mBACrD,KAAM,IAAI1rG,OAAM,aAAeqsG,UAAUnvG,KAAO,2BAGjD01B,mBAePT,qBAAwB,WACxB,QAASA,yBAgBT,MAVAA,sBAAqBn2B,UAAUkwG,SAI/B,SAAUhvG,MACN,MAAIA,QAASguG,iBAAiBP,MAAMztG,KACzBguG,iBAAiBP,MAErB,MAEJx4E,wBA6BPk5E,oBAAuB,SAAUnlG,QAEjC,QAASmlG,qBAAoBjlG,KAAMhJ,KAAM0sB,WACrC,GAAIqU,OAAQj4B,OAAO0iC,KAAKntC,KAAM2K,KAAM,KAAMhJ,OAAS3B;AAGnD,MAFA0iC,OAAM/gC,KAAOA,KACb+gC,MAAMrU,UAAYA,UACXqU,MAEX,MAPAziC,WAAU2vG,oBAAqBnlG,QAOxBmlG,qBACT95C,cASE7uB,kBAAqB,WACrB,QAASA,mBAAkBpC,QAASpiB,WAChCziB,KAAK6kC,QAAUA,QACf7kC,KAAKyiB,UAAYA,UAiDrB,MA1BAwkB,mBAAkB1mC,UAAUgjG,iBAa5B,SAAUj6E,UAAWkvB,SAAUuwD,UAAWoI,uBACtC,GAAIzuE,OAAQ1iC,KACS2hC,MAAQ,GAAIrZ,IACjCygF,WAAUniG,QAAQ,SAAU+X,GAAK,MAAOgjB,OAAMjhB,IAAI/B,EAAEld,KAAMkd,EAAExY,KAAKkB,YACjE,IAAqB+pG,mBAAoB,EACpBC,mBAAqB,SAAUroE,QAChD,GAAqBsoE,mBAAoBF,mBACzC,OAAO,IAAIG,aAAY7uE,MAAMmC,QAASnC,MAAMjgB,UAAW0uF,sBAAuBnoE,OAAQ1f,UAAUnjB,KAAKkB,UAAWiiB,UAAU4vB,OAAQo4D,kBAAmB3vE,MAAO0vE,qBAE3I/tG,QAAU+tG,mBAAmB,KAElD,OADA/tG,SAAQsG,YAAa4uC,UACdl1C,QAAQ8/D,SAEZn8B,qBAEPuqE,iBAAmB,OACnBD,YAAe,WACf,QAASA,aAAY1sE,QAASpiB,UAAW0uF,sBAAuBnoE,OAAQ1f,UAAWmoF,gBAAiBH,kBAAmB3vE,MAAO0vE,oBAC1HrxG,KAAK6kC,QAAUA,QACf7kC,KAAKyiB,UAAYA,UACjBziB,KAAKmxG,sBAAwBA,sBAC7BnxG,KAAKgpC,OAASA,OACdhpC,KAAKspB,UAAYA,UACjBtpB,KAAKyxG,gBAAkBA,gBACvBzxG,KAAKsxG,kBAAoBA,kBACzBtxG,KAAK2hC,MAAQA,MACb3hC,KAAKqxG,mBAAqBA,mBAC1BrxG,KAAK0xG,cAAgB,GAAIppF,KACzBtoB,KAAKy1C,aACLz1C,KAAKqK,YACLrK,KAAK2xG,WACL3xG,KAAK4xG,WAsXT,MAhXAL,aAAYhxG,UAAUsxG,aAItB,SAAU1rG,MACN,GAAqB4jF,QAUrB,IARIA,QADA5jF,OAASnG,KAAKspB,WAAatpB,KAAKyxG,gBACtBD,iBAELrrG,eAAgBoB,cACXvH,KAAKmxG,sBAAsB1wF,IAAIta,MAG/BqrG,kBAETznB,QACD,KAAM,IAAIxlF,OAAM,yDAA2DqyC,KAAKnxC,UAAUU,MAE9F,OAAO4jF,UAOXwnB,YAAYhxG,UAAUqJ,SAKtB,SAAU6rC,UAAW5b,UACjB75B,KAAKy1C,UAAYA,UACjBlvC,iBAAiBvG,KAAM65B,WAM3B03E,YAAYhxG,UAAU6iE,MAItB,SAAU0uC,kBACN,GAAIpvE,OAAQ1iC,IACa,UAArB8xG,mBAA+BA,qBACnC9xG,KAAKqK,SAASzD,QAAQ,SAAUu1B,OAAS,MAAOA,OAAMinC,MAAM0uC,mBAC5D,IAAqBC,YAAarsF,SAAS8rF,kBAAkB9wF,IAAIyL,WAAW8L,WAAWzM,eAClEwmF,aAAe,CACpChyG,MAAK2xG,QAAQ/qG,QAAQ,SAAU+N,YAC3B,GAAI0E,IAAKqpB,MAAMuvE,2BAA2Bt9F,YAAa3K,WAAaqP,GAAGrP,WAAYzG,QAAU8V,GAAG9V,QAASF,MAAQgW,GAAGhW,MAC/FozB,UAAY,GAAKu7E,eACjBE,aAAe3uG,UAAYm/B,MAAMpZ,UAAYoZ,MAAQ,KACtElpB,GAAK+e,uBAAuB25E,aAAcxsF,SAASgd,MAAMmvE,aAAatuG,UAAWF,MAAOozB,WAAY9R,MAAQnL,GAAGmL,MAAO8T,YAAcjf,GAAGif,WAC3I9T,OAAM7d,KAAK,GAAI6yB,qBAAoBlB,cACnCs5E,UAAUjrG,KAAK9E,MAAM+vG,UAAWptF,MAAMhf,IAAI,SAAUwf,MAAQ,MAAOD,oCAAmCC,KAAMnb,iBAEhHhK,KAAK4xG,QAAQhrG,QAAQ,SAAUyS,IAC3B,GAAIrP,YAAaqP,GAAGrP,WAAYzG,QAAU8V,GAAG9V,QAASF,MAAQgW,GAAGhW,MAC5CozB,UAAY,GAAKu7E,eACjBE,aAAe3uG,UAAYm/B,MAAMpZ,UAAYoZ,MAAQ,KACtE/d,MAAQ0R,qBAAqB67E,aAAcxsF,SAASgd,MAAMmvE,aAAatuG,UAAWF,MAAOozB,WAAW9R,KACxGotF,WAAUjrG,KAAK9E,MAAM+vG,UAAWptF,MAAMhf,IAAI,SAAUwf,MAAQ,MAAOD,oCAAmCC,KAAMnb,gBAEhH,IAAqBmoG,UAAW,SAAWnyG,KAAKspB,UAAU7nB,KAAO,IAAMzB,KAAKsxG,kBACvDc,YAAc,GAAI1iB,qBAAoByiB,YAAcJ,UAEzE,OADAD,kBAAiBhrG,KAAKsrG,aACfN,kBAOXP,YAAYhxG,UAAUi0C,eAKtB,SAAU7tC,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACSqyG,cAAkC1rG,IAAS,MAC3C2rG,MAA0BD,cAAiB,GAChEC,OAAM9+F,YAAY5M,QAAQ,SAAU4e,MAChC,MAAOkd,OAAMivE,QAAQ7qG,MAAOvD,QAASm/B,MAAMpZ,UAAWjmB,MAAOmiB,KAAMxb,WAAYrD,IAAIqD,gBAQ3FunG,YAAYhxG,UAAUm1C,sBAKtB,SAAU/uC,IAAKpD,SAKX,GAJAvD,KAAKuyG,uBAAuB5rG,KAIxB3G,KAAK6kC,QAAQ2tE,sBAAuB,CACpC,GAAqBC,cAAezyG,KAAKqxG,mBAAmBrxG,KAC5DA,MAAKqK,SAASvD,KAAK2rG,cACnBA,aAAa7oG,SAASjD,IAAI8uC,UAAW9uC,IAAI0D,YAQjDknG,YAAYhxG,UAAUi1C,aAKtB,SAAU7uC,IAAKpD,SACX,GAAIm/B,OAAQ1iC,IACZA,MAAKuyG,uBAAuB5rG,IAI5BA,KAAI0uC,OAAOzuC,QAAQ,SAAUwzB,UACzBsI,MAAMivE,QAAQ7qG,MAAOvD,QAASm/B,MAAMpZ,UAAWjmB,MAAO+2B,SAAS/2B,MAAO2G,WAAYowB,SAASpwB,eAE/FzD,iBAAiBvG,KAAM2G,IAAI0D,WAM/BknG,YAAYhxG,UAAUgyG,uBAItB,SAAU5rG,KACN,GAAI+7B,OAAQ1iC,IACZ2G,KAAIwhB,WAAWvhB,QAAQ,SAAUyzB,QAAUqI,MAAMwT,eAAe7b,UAChE1zB,IAAI4uC,WAAW3uC,QAAQ,SAAUU,KAC7B,GAAqBorG,eAAiC,IAKlDA,eADAprG,IAAIjE,OAASiE,IAAIjE,MAAMmE,YAAck7B,MAAMmC,QAAQ2tE,sBACnClrG,IAAIjE,MAAMmE,WAAWH,UAGrBkjF,gBAAgBz4C,QAEpCpP,MAAMgvE,cAAchxF,IAAIpZ,IAAI7F,KAAMixG,iBAEtC/rG,IAAI2uC,QAAQ1uC,QAAQ,SAAU+rG,WAC1BjwE,MAAMkvE,QAAQ9qG,MAAOvD,QAASm/B,MAAMpZ,UAAWjmB,MAAOsvG,UAAU79D,QAAS9qC,WAAY2oG,UAAU3oG,gBAOvGunG,YAAYhxG,UAAU21C,eAItB,SAAU7b,QACN,GAAIqI,OAAQ1iC,KACS8iF,QAAUzoD,OAAO9R,UAAUpiB,KAAKkB,SACrDgzB,QAAOgb,OAAOzuC,QAAQ,SAAUtE,OAC5B,MAAOogC,OAAMivE,QAAQ7qG,MAAOvD,QAASm/B,MAAMpZ,UAAWjmB,MAAOf,MAAMe,MAAO2G,WAAY1H,MAAM0H,eAK5FhK,KAAK6kC,QAAQ2tE,wBACbn4E,OAAO2b,eAAepvC,QAAQ,SAAUwzB,UACpC,MAAOsI,OAAMivE,QAAQ7qG,MAAOvD,QAASu/E,QAASz/E,MAAO+2B,SAAS/2B,MAAO2G,WAAYowB,SAASpwB,eAE9FqwB,OAAO4b,WAAWrvC,QAAQ,SAAUgsG,cAChC,MAAOlwE,OAAMkvE,QAAQ9qG,MACjBvD,QAASu/E,QACTz/E,MAAOuvG,aAAa99D,QACpB9qC,WAAY4oG,aAAa5oG,iBASzCunG,YAAYhxG,UAAUkwG,SAItB,SAAUhvG,MACN,GAAIA,MAAQguG,iBAAiBP,MAAMztG,KAC/B,MAAOikB,UAAS1lB,KAAK6xG,aAAatnB,gBAAgBz4C,SAEtD,KAAK,GAAqB+gE,aAAc7yG,KAAM6yG,YAAaA,YAAcA,YAAY7pE,OAAQ,CACzF,GAAqB0pE,eAAgB,MAGrC,IADAA,cAAgBG,YAAYnB,cAAcjxF,IAAIhf,MACzB,MAAjBixG,cAAuB,CAEvB,GAAqBI,QAASD,YAAYp9D,UAAU72B,KAAK,SAAUk0F,QAAU,MAAOA,QAAOrxG,OAASA,MAChGqxG,UACAJ,cAAgBnoB,gBAAgBz4C,SAGxC,GAAqB,MAAjB4gE,cACA,MAAOhtF,UAAS1lB,KAAK6xG,aAAaa,gBAG1C,MAAO,OAMXnB,YAAYhxG,UAAUwyG,cAItB,SAAUtxG,MACN,GAAqByjG,MAAOllG,KAAK2hC,MAAMlhB,IAAIhf,KAC3C,KAAKyjG,KACD,KAAM,IAAI3gG,OAAM,sCAAwC9C,KAAO,mBAAqBzB,KAAKspB,UAE7F,OAAOtpB,MAAK6xG,aAAa3M,OAM7BqM,YAAYhxG,UAAU0xG,2BAItB,SAAUt9F,YACN,GAAI+tB,OAAQ1iC,IACZ,QACIgK,WAAY2K,WAAW3K,WACvBzG,QAASoR,WAAWpR,QACpBF,MAAOuzB,gCACHC,4BAA6B,SAAUC,UACnC,MAAO,UAAUn1B,MACb,GAAqBqN,KAAMmX,WAAWxkB,KAGtC,OAAO+gC,OAAMmC,QAAQ2tE,sBAAwBxjG,IAAMA,IAAI+oB,KAAKvM,gBAGpEuL,0BAA2B,SAAUC,MACjC,MAAO,UAAUj1B,QACb,GAAqBk1B,SAAUD,KAAKrxB,IAAI,SAAUwU,EAAGpP,GACjD,OACIkJ,IAAKkG,EAAElG,IACP5Q,MAAOtB,OAAOgJ,GACdyb,OAAQrM,EAAEqM,UAGG7gB,IAAM0gB,WAAW4Q,QAGtC,OAAOyL,OAAMmC,QAAQ2tE,sBAAwB7sG,IAAMA,IAAIoyB,KAAKvM,gBAGpE0L,oBAAqB,SAAUz1B,KAAMq1B,UACjC,MAAO,UAAUn1B,MAGb,GAAqBqxG,UACjBttF,SAD4Bgd,MAAMmC,QAAQ2tE,sBACjC9vE,MAAMqwE,cAActxG,MACpBihC,MAAMmvE,aAAatnB,gBAAgBz4C,SAChD,OAAOkhE,UAAS1mB,WAAW,YAAa3qF,SAGjDgT,WAAWtR,SAQtBkuG,YAAYhxG,UAAU61C,eAKtB,SAAUzvC,IAAKpD,WAMfguG,YAAYhxG,UAAU+zC,UAKtB,SAAU3tC,IAAKpD,WAMfguG,YAAYhxG,UAAUu1C,uBAKtB,SAAUnvC,IAAKpD,WAMfguG,YAAYhxG,UAAU20C,eAKtB,SAAUvuC,IAAKpD,WAMfguG,YAAYhxG,UAAU60C,cAKtB,SAAUzuC,IAAKpD,WAMfguG,YAAYhxG,UAAUy0C,WAKtB,SAAUruC,IAAKpD,WAMfguG,YAAYhxG,UAAUq0C,qBAKtB,SAAUjuC,IAAKpD,WAMfguG,YAAYhxG,UAAUm0C,UAKtB,SAAU/tC,IAAKpD,WACRguG,eAcPj2E,aAAe,QACfC,WAAa,QACb03E,sBAAwB,YACxBC,kBAAqB,WACrB,QAASA,mBAAkBC,aAAcC,iBACrCpzG,KAAKmzG,aAAeA,aACpBnzG,KAAKozG,gBAAkBA,gBAE3B,MAAOF,sBAEPnsE,aAAgB,WAChB,QAASA,cAAa2nB,YAClB1uD,KAAK0uD,WAAaA,WAiDtB,MAvCA3nB,cAAaxmC,UAAUgjG,iBAQvB,SAAUnkE,UAAW9V,UAAWkvB,SAAUlB,OAAQyxD,WAC9C,GAAIrmE,OAAQ1iC,KACSoxG,kBAAoB,EACpBp1E,eAAiBD,mBAAmByc,UACpC66D,uBAA0C,MAC/D,KAAK/pF,UAAU4vB,OAAQ,CACnB,GAAqBo6D,YAAgChqF,UAAmB,SACnDiqF,mBACjBD,YAAW16D,YAAc06D,WAAW16D,WAAW92C,QAC/CyxG,iBAAiBzsG,KAAK,GAAIyf,iBAAgB,YAAa4D,wBAAwBiV,UAAWk0E,WAAW16D,cAAa,IAEtH,IAAqB46D,oBAAqB9tF,SAAS3d,iBAAiBuhB,UAAUnjB,KAAKkB,WACnFgsG,wBAA4CG,mBAAwB,KACpEp0E,UAAUlG,WAAWpyB,KAAK0sG,mBACrB9yF,IAAIkF,WAAWkH,YAAYqxD,qBAAqBpyD,QAAQ,GAAIzF,iBACzD,GAAIC,iBAAgB,gBAAiBU,QAAQqsF,WAAW/6D,iBAAgB,IACxE,GAAIhyB,iBAAgB,SAAU+wB,SAAQ,IACtC,GAAI/wB,iBAAgB,OAAQ,GAAID,gBAAeitF,oBAAmB,SAErEt7E,WAAWlS,WAAW+G,YAAYsxD,gBAAiBlmD,aAAaC,MAAOD,aAAasH,YAE7F,GAAqB6xE,oBAAqB,SAAUroE,QAChD,GAAqBsoE,mBAAoBF,mBACzC,OAAO,IAAIqC,eAAc/wE,MAAMgsB,WAAYtvB,UAAW4J,OAAQ1f,UAAWgoF,kBAAmBvI,UAAW/sE,eAAgBq1E,qBAEtG/tG,QAAU+tG,mBAAmB,KAGlD,OAFA/tG,SAAQsG,YAAa4uC,WACpBn/B,GAAK+lB,UAAUlG,YAAYpyB,KAAK9E,MAAMqX,GAAI/V,QAAQ8/D,SAC5C,GAAI8vC,mBAAkB5vG,QAAQ6uG,SAAUkB,uBAC/C,IAAIh6F,KAED0tB,gBAEP2sE,UAAYhuF,SAAS,MACrBiW,SAAWjW,SAAS,MACpBgW,UAAYhW,SAAS,OACrBiuF,SAAWjuF,SAAS,OACpBkuF,eAAiBluF,SAAS,MAC1BmuF,kBAAoBnuF,SAAS,MAC7B+tF,cAAiB,WACjB,QAASlC,aAAY9uF,UAAW2c,UAAW4J,OAAQ1f,UAAWgoF,kBAAmBvI,UAAW/sE,eAAgBq1E,oBACxGrxG,KAAKyiB,UAAYA,UACjBziB,KAAKo/B,UAAYA,UACjBp/B,KAAKgpC,OAASA,OACdhpC,KAAKspB,UAAYA,UACjBtpB,KAAKsxG,kBAAoBA,kBACzBtxG,KAAK+oG,UAAYA,UACjB/oG,KAAKg8B,eAAiBA,eACtBh8B,KAAKqxG,mBAAqBA,mBAC1BrxG,KAAK6J,SACL7J,KAAK8zG,oBAAsBtzG,OAAOC,OAAO,MACzCT,KAAK+zG,eAAiBvzG,OAAOC,OAAO,MACpCT,KAAKy1C,aACLz1C,KAAKqK,YAILrK,KAAK6H,SAAW7H,KAAKsxG,kBAAoB,EACrC9lF,aACmBvF,eAAemZ,UAAUxZ,WAAW5lB,KAAKspB,UAAUnjB,KAAKkB,YAC/ErH,KAAKmyG,SAAWvqG,cAAc5H,KAAKspB,UAAUnjB,KAAKkB,UAAWrH,KAAKsxG,mBAs9BtE,MA/8BAC,aAAYhxG,UAAUqJ,SAKtB,SAAU6rC,UAAW5b,UACjB,GAAI6I,OAAQ1iC,IAUZ,IATAA,KAAKy1C,UAAYA,UAEZz1C,KAAKgpC,QACNhpC,KAAK+oG,UAAUniG,QAAQ,SAAUs+F,MACzBA,KAAKz2D,OACL/L,MAAMoxE,oBAAoB5O,KAAKzjG,MAAQihC,MAAMsxE,YAAY,KAAM9O,UAItEllG,KAAKgpC,OAAQ,CACd,GAAqBirE,YAAa13E,mBAAmBv8B,KAAKg8B,eAC1Dh8B,MAAKspB,UAAUE,YAAY5iB,QAAQ,SAAU6iB,MAAOyqF,YAEhD,GAAqBvqF,SAAUuqF,WAAa,EACvBz5E,YAAchR,MAAMmkB,MAAQ,EAAgB,EAC5CpjB,MAAQ,UAAgCqS,4BAA4Bo3E,WAAYtqF,QAASF,MAAMmkB,MACpHlL,OAAM74B,MAAM/C,KAAK,WACb,OACIkD,WAAY,KACZmqG,UAAW3pF,MACX4pF,QAASxuF,WAAWkH,YAAY8wD,UAAU7xD,QACtC9E,QAAQuD,OAAQvD,QAAQ0C,SACxB,GAAIrD,iBAAgB,GAAIC,iBAAgBkD,MAAMkgE,aAAc1iE,QAAQwT,eAAc,aAMtGl0B,iBAAiBvG,KAAM65B,UACnB75B,KAAKgpC,SAA+B,IAApBnP,SAAS/3B,QAAgB83B,wBAAwBC,YAEjE75B,KAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAY,KACZmqG,UAAW,EACXC,QAASxuF,WAAWkH,YAAY2wD,WAAW1xD,QACvC9E,QAAQ,GAAekF,UAAWA,UAAWlF,QAAQ,SAUzEsqF,YAAYhxG,UAAU6iE,MAItB,SAAU0uC,kBACmB,SAArBA,mBAA+BA,qBACnC9xG,KAAKqK,SAASzD,QAAQ,SAAUu1B,OAAS,MAAOA,OAAMinC,MAAM0uC,mBAC5D,IAAIz4F,IAAKrZ,KAAKq0G,yBAA0BC,oBAAsBj7F,GAAGi7F,oBAAqBC,sBAAwBl7F,GAAGk7F,sBAAuBC,aAAen7F,GAAGm7F,aACrIC,iBAAmBz0G,KAAK00G,gBAAgBJ,qBACxCK,mBAAqB30G,KAAK00G,gBAAgBH,uBAC1CK,UAAY,CAC5B50G,MAAKgpC,QAAUhpC,KAAKspB,UAAUilB,kBAAoBH,wBAAwBC,SAC3EumE,WAAa,EAEjB,IAAqBxC,aAAc,GAAI1iB,qBAAoB1vF,KAAKmyG,UAAW,GAAI5mF,SAA2BmoF,UAAe,QAAM,GAAI1nF,iBAAgBpG,WAAWkH,YAAYywD,SAASxxD,QAC3K9E,QAAQ2tF,WACRzuF,WAAWquF,cACXG,mBACAF,qBACE1uF,WAAW+G,YAAYuxD,gBAA4C,IAA3Br+E,KAAKsxG,mBAA2Bp5E,aAAasH,aAE/F,OADAsyE,kBAAiBhrG,KAAKsrG,aACfN,kBAMXP,YAAYhxG,UAAUm0G,gBAItB,SAAUG,aACN,GAAqBC,SACrB,IAAID,YAAY/yG,OAAS,EAAG,CACxB,GAAqBizG,cAChB/0G,KAAKspB,UAAU4vB,QAAUx0B,iBAAiBmwF,aAAa/gF,IAAuB6/E,SAAc,OAC7FoB,SAASjuG,KAAK6sG,SAASjzF,IAAIib,SAASvM,KAAK,cAAc6I,WAAWj4B,KAAK6H,WAE3EitG,SAAWjuF,IACP,GAAI0E,SAA2BmQ,UAAe,KAAGzP,eACjD,GAAIV,SAA2BoQ,SAAc,KAAG1P,gBACjD8oF,SAASpsG,OAAOksG,aAAc5oF,mBAGjC6oF,UAAW3oF,SAEf,OAAO2oF,WAOXvD,YAAYhxG,UAAU61C,eAKtB,SAAUzvC,IAAKpD,SAEXvD,KAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAYrD,IAAIqD,WAChBmqG,UAAW,EACXC,QAASxuF,WAAWkH,YAAYoxD,cAAcnyD,QAC1C9E,QAAQtgB,IAAI0tC,gBAAiBptB,QAAQtgB,IAAIxB,aAUzDosG,YAAYhxG,UAAU+zC,UAKtB,SAAU3tC,IAAKpD,SAEXvD,KAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAYrD,IAAIqD,WAChBmqG,UAAW,EACXC,QAASxuF,WAAWkH,YAAY4wD,SAAS3xD,QACrC9E,QAAQtgB,IAAI0tC,gBAAiBluB,YAAYc,QAAQtgB,IAAItD,eAUrEkuG,YAAYhxG,UAAUi0C,eAKtB,SAAU7tC,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACSy7B,UAAYz7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM/C,KAAsB,KACjC,IAAqBurG,eAAkC1rG,IAAS,MAC3C2rG,MAA0BD,cAAiB,IAC3C2C,0BAA4B1C,MAAM9+F,YAAY7N,IAAI,SAAU6f,KAAMyvF,cACnF,MAAOvyE,OAAMwyE,6BAA8Bz5E,UAAWA,UAAWw5E,aAAcA,aAAcjrG,WAAYrD,IAAIqD,WAAYzG,QAASowG,SAAUtwG,MAAOmiB,QAGvJxlB,MAAK6J,MAAM4xB,WAAa,WACpB,OACIzxB,WAAYrD,IAAIqD,WAChBmqG,UAAW,EACXC,QAASxuF,WAAWkH,YAAY4wD,SAAS3xD,QACrC9E,QAAQtgB,IAAI0tC,gBAAiBluB,WAAWmsF,MAAM/8C,QAAQ5vD,IAAI,SAAUd,GAAK,MAAOoiB,SAAQpiB,QAE5FswG,eAAgBH,6BAS5BzD,YAAYhxG,UAAUm1C,sBAKtB,SAAU/uC,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACSy7B,UAAYz7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM/C,KAAsB,KACjC,IAAIuS,IAAKrZ,KAAKo1G,wBAAwB35E,UAAW90B,KAAM6jB,MAAQnR,GAAGmR,MAAO6qF,iBAAmBh8F,GAAGg8F,iBAAkBp/D,WAAa58B,GAAG48B,WAC5Gw8D,aAAezyG,KAAKqxG,mBAAmBrxG,KAC5DA,MAAKqK,SAASvD,KAAK2rG,cACnBA,aAAa7oG,SAASjD,IAAI8uC,UAAW9uC,IAAI0D,SACzC,IAAqBirG,YAAat1G,KAAK6J,MAAM/H,OAAS25B,UAAY,CAKlEz7B,MAAK6J,MAAM4xB,WAAa,WACpB,OACIzxB,WAAYrD,IAAIqD,WAChBmqG,UAAW,EAAsB3pF,MACjC4pF,QAASxuF,WAAWkH,YAAY2wD,WAAW1xD,QACvC9E,QAAQuD,OACR6qF,iBACApuF,QAAQtgB,IAAI0tC,gBACZptB,QAAQquF,YACR5yE,MAAM6yE,4BAA4B95E,UAAWwa,YAC7CvwB,SAAS+sF,aAAaN,eAUtCZ,YAAYhxG,UAAUi1C,aAKtB,SAAU7uC,IAAKpD,SACX,GAAIm/B,OAAQ1iC,KACSy7B,UAAYz7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM/C,KAAsB,KAEjC,IAAqBkoG,QAASziG,cAAc5F,IAAIlF,MAAQ,KAAOkF,IAAIlF,KAC/D4X,GAAKrZ,KAAKo1G,wBAAwB35E,UAAW90B,KAAM6jB,MAAQnR,GAAGmR,MAAOgrF,WAAan8F,GAAGm8F,WAAYH,iBAAmBh8F,GAAGg8F,iBAAkBI,gBAAkBp8F,GAAG81C,aAAclZ,WAAa58B,GAAG48B,WAC3Ky/D,aACAV,6BACAW,aACrB,IAAI3G,OAAQ,CACR,GAAqB7/C,cAAexoD,IAAI0uC,OACnC1vC,IAAI,SAAUy0B,UACf,OACI72B,QAA0B,SAC1B62B,SAAUA,SACVC,OAAyB,QAG5B1xB,OAAO8sG,gBACRtmD,cAAartD,SACbkzG,0BACI7lD,aAAaxpD,IAAI,SAAUypD,YAAa6lD,cACpC,MAAOvyE,OAAMwyE,6BACT3xG,QAAS6rD,YAAY7rD,QACrBk4B,UAAWA,UACXw5E,aAAcA,aACdjrG,WAAYolD,YAAYh1B,SAASpwB,WACjC3G,MAAO+rD,YAAYh1B,SAAS/2B,UAGxCqyG,UAAYvmD,aAAaxpD,IAAI,SAAUypD,aAAe,MAAOj1B,mBAAkBi1B,YAAYh1B,SAAUg1B,YAAY/0B,WAErHs7E,WAAaH,WAAW7vG,IAAI,SAAU0T,IAClC,GAAIxF,QAASwF,GAAG,GAAI21B,UAAY31B,GAAG,EACnC,OAAO8M,aAAYc,QAAQpT,QAASoT,QAAQ+nB,eAGpDzoC,iBAAiBvG,KAAM2G,IAAI0D,SAC3B,IAAqBirG,YAAat1G,KAAK6J,MAAM/H,OAAS25B,UAAY,EAC7Cm6E,QAAUjvG,IAAIwhB,WAAWvJ,KAAK,SAAUyb,QAAU,MAAOA,QAAO9R,UAAUG,cAC1EmtF,iBAAoC,UACpCC,SAA4B,SAC7CF,WACAE,SAAW91G,KAAKo/B,UAAUxZ,WAAWgwF,QAAQrtF,UAAU6wB,mBACvDy8D,iBAAmB71G,KAAKo/B,UAAUxZ,WAAWgwF,QAAQrtF,UAAU8wB,eAUnEr5C,KAAK6J,MAAM4xB,WAAa,WACpB,OACIzxB,WAAYrD,IAAIqD,WAChBmqG,UAAW,EAAsB3pF,MACjC4pF,QAASxuF,WAAWkH,YAAY0wD,YAAYzxD,QACxC9E,QAAQuD,OACR6qF,iBACApuF,QAAQtgB,IAAI0tC,gBACZptB,QAAQquF,YACRruF,QAAQ+nF,QACRA,OAASn0E,cAAcl0B,KAAOwlB,UAC9BupF,UAAU5zG,OAASqkB,WAAWuvF,WAAavpF,UAC3CwpF,WAAW7zG,OAASqkB,WAAWwvF,YAAcxpF,UAC7CuW,MAAM6yE,4BAA4B95E,UAAWwa,YAC7C6/D,SACAD,mBAEJV,eAAgBH,6BAS5BzD,YAAYhxG,UAAU60G,wBAKtB,SAAU35E,UAAW90B,KACjB,GAAI+7B,OAAQ1iC,KACSwqB,MAAQ,CACzB7jB,KAAIqzB,mBACJxP,OAAS,SAEb,IAAqBgrF,YAAa,GAAIltF,IACtC3hB,KAAI2uC,QAAQ1uC,QAAQ,SAAUsoG,OAC1B,GAAI71F,IAAKojB,0BAA0ByyE,MAAO,MAAOztG,KAAO4X,GAAG5X,KAAMoS,OAASwF,GAAGxF,MAC7E2hG,YAAW90F,IAAIsc,qBAAqBnpB,OAAQpS,OAAQoS,OAAQpS,SAEhEkF,IAAIwhB,WAAWvhB,QAAQ,SAAUyzB,QAC7BA,OAAO4b,WAAWrvC,QAAQ,SAAUsoG,OAChC,GAAI71F,IAAKojB,0BAA0ByyE,MAAO70E,QAAS54B,KAAO4X,GAAG5X,KAAMoS,OAASwF,GAAGxF,MAC/E2hG,YAAW90F,IAAIsc,qBAAqBnpB,OAAQpS,OAAQoS,OAAQpS,UAGpE,IAAqB0tD,iBACAlZ,aACrBj2C,MAAK+1G,uCAAuCpvG,IAAIwhB,YAChDxhB,IAAIkhB,UAAUjhB,QAAQ,SAAU2jB,YAAaW,eACzC,GAAqBmP,QAA0B,OAC1B27E,SAA4B,MAOjD,IANArvG,IAAIwhB,WAAWvhB,QAAQ,SAAUqvG,YAAalrG,GACtCkrG,YAAY1tF,UAAUpiB,KAAKkB,YAAcc,eAAeoiB,YAAY7kB,SACpE20B,OAAS47E,YACTD,SAAWjrG,KAGfsvB,OAAQ,CACR,GAAIhhB,IAAKqpB,MAAMwzE,gBAAgB3rF,YAAa8P,OAAQ27E,SAAUv6E,UAAW90B,IAAI4uC,WAAY5uC,IAAIu1B,aAAcs5E,WAA+B9yE,MAAM1G,eAAevb,IAAqB,MAAWg1F,gBAAkBp8F,GAAG81C,aAAcgnD,cAAgB98F,GAAG48B,UACrPkZ,cAAaroD,KAAK9E,MAAMmtD,aAAcsmD,iBACtCx/D,WAAWnvC,KAAK9E,MAAMi0C,WAAYkgE,mBAGlCzzE,OAAM0zE,eAAe7rF,YAAa5jB,IAAIu1B,eAG9C,IAAqBm6E,mBAoCrB,OAnCA1vG,KAAIu1B,aAAat1B,QAAQ,SAAU4E,OAC/B,GAAqBy/E,WAA6B,MAC9C9iF,gBAAeqD,MAAMnI,SACrBq/B,MAAMjgB,UAAUC,yBAAyBoK,YAAY6lB,YACrDs4C,UAAY,EAEP9iF,eAAeqD,MAAMnI,SAC1Bq/B,MAAMjgB,UAAUC,yBAAyBoK,YAAYgmB,kBACrDm4C,UAAY,EAEP9iF,eAAeqD,MAAMnI,SAC1Bq/B,MAAMjgB,UAAUC,yBAAyBoK,YAAY+lB,eACrDo4C,UAAY,GAEC,MAAbA,WACAorB,gBAAgBvvG,KAAKqf,YAAYc,QAAQzb,MAAMme,SAAU1C,QAAQgkE,gBAGzEtkF,IAAI4uC,WAAW3uC,QAAQ,SAAUU,KAC7B,GAAqB2jF,WAA6B,MAC7C3jF,KAAIjE,MAGA8E,eAAeb,IAAIjE,SACxBq/B,MAAMjgB,UAAUC,yBAAyBoK,YAAY+lB,eACrDo4C,UAAY,GAJZA,UAAY,EAMC,MAAbA,YACAvoD,MAAMqxE,eAAezsG,IAAI7F,MAAQg6B,UACjC46E,gBAAgBvvG,KAAKqf,YAAYc,QAAQ3f,IAAI7F,MAAOwlB,QAAQgkE,iBAGpEtkF,IAAI2uC,QAAQ1uC,QAAQ,SAAU+rG,WAC1B18D,WAAWnvC,MAAOvD,QAASowG,SAAUj3E,SAAUi2E,UAAWt4E,OAAyB,UAGnF7P,MAAOA,MACPgrF,WAAYhyG,MAAMugB,KAAKyxF,WAAWzzG,UAClCszG,iBAAkBgB,gBAAgBv0G,OAASqkB,WAAWkwF,iBAAmBlqF,UACzEgjC,aAAcA,aACdlZ,WAAYA,aAcpBs7D,YAAYhxG,UAAU21G,gBAWtB,SAAU3rF,YAAa8P,OAAQrQ,eAAgBssF,iBAAkB/jB,KAAMr2D,aAAcs5E,WAAY14E,UAC7F,GAAI4F,OAAQ1iC,KACSy7B,UAAYz7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM/C,KAAsB,MACjCuzB,OAAO9R,UAAU0B,QAAQrjB,QAAQ,SAAU6iB,MAAOyqF,YAC9C,GAAqBvqF,SAAU0Q,OAAOxQ,oBAAsBqqF,WACvC1pF,MAAQ,SAAkCqS,4BAA4BC,SAAUnT,QAASF,MAAMmkB,OAC/FnT,YAAchR,MAAMmkB,MAAQ,EAAgB,CACjElL,OAAM74B,MAAM/C,KAAK,WACb,OACIkD,WAAYqwB,OAAOrwB,WACnBmqG,UAAW3pF,MACX4pF,QAASxuF,WAAWkH,YAAY8wD,UAAU7xD,QACtC9E,QAAQuD,OAAQvD,QAAQ0C,SACxB,GAAIrD,iBAAgB,GAAIC,iBAAgBkD,MAAMkgE,aAAc1iE,QAAQwT,eAAc,YASlG,IAAqB66E,YAAat1G,KAAK6J,MAAM/H,OAAS25B,UAAY,EAC9DpiB,GAAKrZ,KAAKu2G,0BAA0BhsF,YAAa2R,cAAe1R,MAAQnR,GAAGmR,MAAO6rF,gBAAkBh9F,GAAGg9F,gBAAiBxrF,aAAexR,GAAGwR,aAAcE,SAAW1R,GAAG0R,QAC1KwnE,MAAK3rF,QAAQ,SAAUU,KACfA,IAAIjE,OAAS8E,eAAeb,IAAIjE,SAAW8E,eAAeoiB,YAAY7kB,SACtEg9B,MAAMqxE,eAAezsG,IAAI7F,MAAQg6B,UACjC46E,gBAAgBvvG,KAAKqf,YAAYc,QAAQ3f,IAAI7F,MAAOwlB,QAAQ,SAGhEoT,OAAO9R,UAAUG,cACjB8B,OAAS,MAEb,IAAqBkrF,WAAYr7E,OAAOgb,OAAO1vC,IAAI,SAAUy0B,SAAUo+B,YACnE,GAAqBg+C,UAAWrwF,YAAYc,QAAQuxC,YAAavxC,QAAQmT,SAASwb,gBAElF,OAAO,IAAIrvB,iBAAgB6T,SAASwb,cAAe4gE,WAAU,MAE5Cb,cACApzB,QAAUloD,OAAO9R,SACtC/nB,QAAOw2B,KAAKurD,QAAQjtC,SAAS1uC,QAAQ,SAAUusB,UAC3C,GAAqB6b,WAAYuzC,QAAQjtC,QAAQniB,SAC7CqiF,YAAW1hF,IAAIkb,YAEf2mE,WAAW7uG,KAAK,GAAIyf,iBAAgB4M,SAAUlM,QAAQ+nB,aAAY,MAG1E,IAAqBynE,gCACjBp8E,OAAOgb,OAAOvzC,SAAmB,OAAR0oB,OAAuD,KAChFisF,2BACIp8E,OAAOgb,OAAO1vC,IAAI,SAAUrD,MAAO2yG,cAC/B,MAAOvyE,OAAMwyE,6BACTz5E,UAAWA,UACXw5E,aAAcA,aACdjrG,WAAY1H,MAAM0H,WAClBzG,QAASowG,SACTtwG,MAAOf,MAAMe,UAI7B,IAAqBqzG,gBAAiB9wF,WAAWkH,YAAYmxD,WAAWlyD,QAAQ4P,SAAU1U,QAAQwU,aAC7E0zB,aAAe90B,OAAO2b,eAAerwC,IAAI,SAAUy0B,UACpE,OACI72B,QAASmzG,eACTr8E,OAAQA,OACRD,SAAUA,YAGG6b,WAAa5b,OAAO4b,WAAWtwC,IAAI,SAAUitG,cAC9D,OACIrvG,QAASmzG,eACTh6E,SAAUk2E,aAAcv4E,OAAQA,SAsBxC,OAdAr6B,MAAK6J,MAAM4xB,WAAa,WACpB,OACIzxB,WAAYqwB,OAAOrwB,WACnBmqG,UAAW,MAA4B3pF,MACvC4pF,QAASxuF,WAAWkH,YAAY6wD,cAAc5xD,QAC1C9E,QAAQuD,OAAQ6rF,gBAAgBv0G,OAASqkB,WAAWkwF,iBAAmBlqF,UACvElF,QAAQquF,YAAazqF,aAAcE,SACnC2qF,UAAU5zG,OAAS,GAAIwkB,gBAAeovF,WAAavpF,UACnDwpF,WAAW7zG,OAAS,GAAIwkB,gBAAeqvF,YAAcxpF,YAEzDwqF,iBAAkBF,2BAClBluF,UAAW8R,OAAO9R,UAAUpiB,QAG3BgpD,aAAcA,aAAclZ,WAAYA,aAOrDs7D,YAAYhxG,UAAU61G,eAKtB,SAAU7rF,YAAa2R,cACnBl8B,KAAK42G,iBAAiB52G,KAAKu2G,0BAA0BhsF,YAAa2R,gBAMtEq1E,YAAYhxG,UAAUw1G,uCAItB,SAAU5tF,YACN,GAAqB0uF,kBAAmB1uF,WAAWvJ,KAAK,SAAUyb,QAAU,MAAOA,QAAO9R,UAAUG,aACpG,IAAImuF,kBAAoBA,iBAAiBtuF,UAAUmE,gBAAgB5qB,OAAQ,CACvE,GAAIuX,IAAKoT,oCAAoCzsB,KAAKyiB,UAAWziB,KAAKo/B,UAAW,KAA4By3E,iBAAiBtuF,UAAUmE,iBAAkB7B,aAAexR,GAAGwR,aAAcE,SAAW1R,GAAG0R,SAAUP,MAAQnR,GAAGmR,MAAOQ,UAAY3R,GAAG2R,SAC/OhrB,MAAK42G,kBACD/rF,aAAcA,aACdE,SAAUA,SACVP,MAAOA,MACPQ,UAAWA,UACXqrF,mBACArsG,WAAY6sG,iBAAiB7sG,eAQzCunG,YAAYhxG,UAAUq2G,iBAItB,SAAUjpE,MAC2B3tC,KAAK6J,MAAM/H,MAI5C9B,MAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAY2jC,KAAK3jC,WACjBmqG,UAAWxmE,KAAKnjB,MAChB4pF,QAASxuF,WAAWkH,YAAYxC,aAAayB,QACzC9E,QAAQ0mB,KAAKnjB,OACbmjB,KAAK0oE,gBAAgBv0G,OAASqkB,WAAWwnB,KAAK0oE,iBAAmBlqF,UACjEwhB,KAAK3iB,UAAW2iB,KAAK9iB,aAAc8iB,KAAK5iB,eAUxDwmF,YAAYhxG,UAAUg2G,0BAKtB,SAAUhsF,YAAa2R,cACnB,GAAqB1R,OAAQ,EACR6rF,kBACrBn6E,cAAat1B,QAAQ,SAAU4E,OACvBrD,eAAeqD,MAAMnI,SAAW8E,eAAeoiB,YAAY7kB,QAC3D2wG,gBAAgBvvG,KAAKqf,YAAYc,QAAQzb,MAAMme,SAAU1C,QAAQ,OAGzE,IAAI5N,IAAKiR,YAAYtqB,KAAKo/B,UAAW7U,aAAcM,aAAexR,GAAGwR,aAAcE,SAAW1R,GAAG0R,SAAUD,cAAgBzR,GAAGmR,MAAOQ,UAAY3R,GAAG2R,SACpJ,QACIR,MAAOA,MAAQM,cACfurF,gBAAiBA,gBACjBxrF,aAAcA,aACdE,SAAUA,SACVC,UAAWA,UACXhhB,WAAYugB,YAAYvgB,aAOhCunG,YAAYhxG,UAAUkwG,SAItB,SAAUhvG,MACN,GAAIA,MAAQguG,iBAAiBP,MAAMztG,KAC/B,MAAOguG,kBAAiBP,KAG5B,KAAK,GADgB4H,cAAen7E,SACVk3E,YAAc7yG,KAAM6yG,YAAaA,YAAcA,YAAY7pE,OACjF8tE,aAAeA,aAAa1nF,KAAK,UAAU2I,KAAKvM,cAAe,CAE/D,GAAqBurF,cAAelE,YAAYkB,eAAetyG,KAC/D,IAAoB,MAAhBs1G,aACA,MAAOnxF,YAAWkH,YAAYmxD,WAAWlyD,QAAQ+qF,aAAc7vF,QAAQ8vF,eAG3E,IAAqBjE,QAASD,YAAYp9D,UAAU72B,KAAK,SAAUk0F,QAAU,MAAOA,QAAOrxG,OAASA,MACpG,IAAIqxG,OAAQ,CACR,GAAqBkE,UAAWlE,OAAOzvG,OAAS4vG,qBAChD,OAAO6D,cAAa1nF,KAAK,WAAWA,KAAK4nF,WAGjD,MAAO,OAOXzF,YAAYhxG,UAAU02G,6BAKtB,SAAUjtG,WAAY8sB,UAClB,GAAiB,IAAbA,SAAgB,CAChB,GAAqBogF,aAActxF,WAAWkH,YAAYswD,YAC1D,OAAO,YAAc,MAAO85B,cAEhC,GAAqBz7E,WAAYz7B,KAAK6J,MAAM/H,MAS5C,OAPA9B,MAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAYA,WACZmqG,UAAW,GACXC,QAASxuF,WAAWkH,YAAY+wD,cAAc9xD,QAAQ9E,QAAQ6P,eAG/D,SAAUn1B,MAAQ,MAAO65B,eAAcC,UAAW95B,QAO7D4vG,YAAYhxG,UAAU42G,2BAKtB,SAAUntG,WAAYgtB,MAClB,GAAoB,IAAhBA,KAAKl1B,OAAc,CACnB,GAAqBs1G,aAAcxxF,WAAWkH,YAAYuwD,UAC1D,OAAO,YAAc,MAAO+5B,cAGhC,GAAqBzxG,KAAM0gB,WAAW2Q,KAAKrxB,IAAI,SAAU4T,EAAGxO,GAAK,MAAQ9I,aAAasX,GAAKlW,MAAO4jB,QAAQlc,QACrF0wB,UAAYz7B,KAAK6J,MAAM/H,MAQ5C,OAPA9B,MAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAYA,WACZmqG,UAAW,GACXC,QAASxuF,WAAWkH,YAAYgxD,eAAe/xD,QAAQpmB,SAGxD,SAAUhE,MAAQ,MAAO65B,eAAcC,UAAW95B,QAQ7D4vG,YAAYhxG,UAAU82G,qBAMtB,SAAU1iG,WAAYlT,KAAMq1B,UACxB,GAAqBouE,MAA0BllG,KAAK+oG,UAAUnqF,KAAK,SAAUmpE,aAAe,MAAOA,aAAYtmF,OAASA,MACxH,IAAIyjG,KAAKz2D,KAAM,CACX,GAAqB6oE,aAAct3G,KAAK6J,MAAM/H,MAE9C9B,MAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAY2K,WAAW3K,WACvBmqG,UAAW,IACXC,QAASxuF,WAAWkH,YAAYixD,aAAahyD,QAAQ9E,QAAQ6P,cAMrE,KAFA,GAAqBygF,cAAe57E,SACf67E,YAAcx3G,KAC5Bw3G,YAAYxuE,QACfwuE,YAAcA,YAAYxuE,OAC1BuuE,aAAeA,aAAanoF,KAAK,UAAU2I,KAAKvM,aAEpD,IAAqBisF,eAAgBD,YAAY1D,oBAAoBryG,MAChDi2G,gBAAkB9xF,WAAWkH,YAAYmxD,WAAWlyD,QAAQwrF,aAActwF,QAAQwwF,gBACvG,OAAO,UAAU91G,MACb,MAAOi6B,iBAAgBjnB,WAAW8mB,UAAW9mB,WAAWsgG,aAAcz5E,cAAc87E,aAAcI,iBAAiB/uG,OAAOhH,SAI9H,GAAqB85B,WAAYz7B,KAAKg0G,YAAYr/F,WAAW3K,WAAYk7F,MACpDyS,gBAAkB/xF,WAAWkH,YAAYmxD,WAAWlyD,QAAQ4P,SAAU1U,QAAQwU,YACnG,OAAO,UAAU95B,MACb,MAAOi6B,iBAAgBjnB,WAAW8mB,UAAW9mB,WAAWsgG,aAAc0C,gBAAgBrrB,WAAW,YAAa3qF,SAS1H4vG,YAAYhxG,UAAUyzG,YAKtB,SAAUhqG,WAAYk7F,MAClB,GAAIxiE,OAAQ1iC,KACSy7B,UAAYz7B,KAAK6J,MAAM/H,OACvB0oB,MAAQ,CAC7B06E,MAAK/+F,KAAK8hB,eAAerhB,QAAQ,SAAU6jB,eAEnCA,gBAAkBxH,eAAeE,YACjCqH,OAASE,wBAAwBD,iBAGzC,IAAqBmB,UAAWs5E,KAAK/+F,KAAK0lB,OAAOlmB,IAAI,SAAUiyG,OAAS,MAAOlsF,QAAOgX,MAAMtD,UAAWw4E,QAYvG,OATA53G,MAAK6J,MAAM/C,KAAK,WACZ,OACIkD,WAAYA,WACZmqG,UAAW,GACXC,QAASxuF,WAAWkH,YAAYkxD,SAASjyD,QACrC9E,QAAQuD,OAAQkY,MAAMtD,UAAUxZ,WAAWs/E,KAAK/+F,KAAKkB,WAAY8e,WAAWyF,eAIjF6P,WAWX81E,YAAYhxG,UAAU20G,4BAStB,SAAUvgG,YACN,GAAI+tB,OAAQ1iC,IACZ,QACIy7B,UAAW9mB,WAAW8mB,UACtBw5E,aAActgG,WAAWsgG,aACzBjrG,WAAY2K,WAAW3K,WACvBzG,QAASoR,WAAWpR,QACpBF,MAAOuzB,gCACHC,4BAA6B,SAAUC,UACnC,MAAO4L,OAAMu0E,6BAA6BtiG,WAAW3K,WAAY8sB,WAErEC,0BAA2B,SAAUC,MACjC,MAAO0L,OAAMy0E,2BAA2BxiG,WAAW3K,WAAYgtB,OAEnEE,oBAAqB,SAAUz1B,KAAMq1B,UACjC,MAAO4L,OAAM20E,qBAAqB1iG,WAAYlT,KAAMq1B,YAEzDniB,WAAWtR,SAMtBkuG,YAAYhxG,UAAU8zG,uBAGtB,WA+BI,QAASwD,wBAAuBp8E,UAAWzxB,WAAYwJ,YAAaskG,iBAChE,GAAqBjD,gBACAlpF,MAAQnY,YAAY7N,IAAI,SAAU0T,IACnD,GAAIrP,YAAaqP,GAAGrP,WAAYzG,QAAU8V,GAAG9V,QAASF,MAAQgW,GAAGhW,MAC5CozB,UAAY,GAAKshF,qBACjB7F,aAAe3uG,UAAYowG,SAAWqE,KAAO,KAC9Dx+F,GAAK+e,uBAAuB25E,aAAc3uG,QAASF,MAAOozB,WAAY9R,MAAQnL,GAAGmL,MAAO8T,YAAcjf,GAAGif,WAE7G,OADAo8E,aAAY/tG,KAAK9E,MAAM6yG,YAAalwF,MAAMhf,IAAI,SAAUwf,MAAQ,MAAOD,oCAAmCC,KAAMnb,eACzGub,oCAAoCkT,YAAazuB,aAK5D,QAHIwJ,YAAY1R,QAAUg2G,kBACtBjD,YAAY/tG,KAAKoe,mCAAmCsW,cAAcC,UAAW9P,OAAO6N,SAAUxvB,aAE3F6qG,YA3CX,GAAqBmD,MAAOh4G,KACP+3G,mBAAqB,EACrBzD,uBACAC,yBACAC,aAAex0G,KAAK6J,MAAMlE,IAAI,SAAUlG,QAASg8B,WAClE,GAAIpiB,IAAK5Z,UAAW20G,QAAU/6F,GAAG+6F,QAASD,UAAY96F,GAAG86F,UAAWwC,iBAAmBt9F,GAAGs9F,iBAAkBxB,eAAiB97F,GAAG87F,eAAgBnrG,WAAaqP,GAAGrP,UAC5JmrG,iBACAb,oBAAoBxtG,KAAK9E,MAAMsyG,oBAAqBuD,uBAAuBp8E,UAAWzxB,WAAYmrG,gBAAgB,IAElHwB,kBACApC,sBAAsBztG,KAAK9E,MAAMuyG,sBAAuBsD,uBAAuBp8E,UAAWzxB,WAAY2sG,kBAA+B,OAAZxC,WAA2D,GAOxL,IAAqB8D,gBAA6B,EAAZ9D,UAClC,GAAIlkB,YAAWyjB,UAAU3nF,WAAWA,WAAYqoF,UAChDA,OACJ,OAAO7uF,qCAAoC0yF,eAAgBjuG,aAE/D,QAASsqG,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnHjD,YAAYhxG,UAAUg1G,4BAKtB,SAAU95E,UAAWy8E,UACjB,GAAIx1E,OAAQ1iC,KACSm4G,oBACAC,wBAA0B,CAC/CF,UAAStxG,QAAQ,SAAUyS,IACvB,GAAI9V,SAAU8V,GAAG9V,QAASm5B,SAAWrjB,GAAGqjB,SAAUrC,OAAShhB,GAAGghB,OACzC5D,UAAY,GAAK2hF,0BACjBlG,aAAe3uG,UAAYowG,SAAWjxE,MAAQ,KAC/DlpB,GAAK6c,qBAAqB67E,aAAc3uG,QAASm5B,SAASoY,QAASre,WAAY9R,MAAQnL,GAAGmL,MAAO+qF,aAAel2F,GAAGk2F,aAClG2I,UAAY1zF,KAC7B+qF,eACA2I,UAAUvxG,KAAK+sG,kBAAkBnzF,IAAIgvF,aAAaryD,IAAIw2D,oBAAoBr6E,SAE9E,IAAIxf,IAAKyiB,0BAA0BC,SAAUrC,QAASi+E,YAAct+F,GAAGnG,OAAQm7B,UAAYh1B,GAAGvY,KACzE82G,cAAgBv7E,qBAAqBs7E,YAAatpE,UACvEmpE,kBAAiBrxG,KAAKoe,mCAAmC,GAAI4rE,QAAO7pE,QAAQsxF,eAAerrB,UAAU0mB,gBAAiByE,WAAY37E,SAAS1yB,cAE/I,IAAqBwuG,cACrB,IAAIL,iBAAiBr2G,OAAS,EAAG,CAC7B,GAAqBizG,WAAYlB,kBAAkBnzF,IAAIuG,SAAQ,IAAOgR,WAAWkzD,aAC5EnrF,KAAKspB,UAAU4vB,QAAUx0B,iBAAiByzF,kBAAkBrkF,IAAuB6/E,SAAc,OAClGoB,SAASjuG,KAAK6sG,SAASjzF,IAAIib,SAASvM,KAAK,cAAc6I,WAAWj4B,KAAK6H,WAE3E2wG,cAAgB3xF,IACZ,GAAI0E,SAA2BoQ,SAAc,KAAG1P,eAChD,GAAIV,SAA2BqoF,eAAoB,KAAG3nF,eACtD,GAAIV,SAA2BkkF,iBAAiBP,MAAW,KAAGjjF,gBAC/D8oF,SAASpsG,OAAOwvG,kBAAmB,GAAInsF,iBAAgB6nF,qBAAsB5nF,mBAGhFusF,eAAgBrsF,SAEpB,OAAOqsF,gBAOXjH,YAAYhxG,UAAU21C,eAKtB,SAAUvvC,IAAKpD,WAMfguG,YAAYhxG,UAAUu1C,uBAKtB,SAAUnvC,IAAKpD,WAMfguG,YAAYhxG,UAAU20C,eAKtB,SAAUvuC,IAAKpD,WAMfguG,YAAYhxG,UAAU60C,cAKtB,SAAUzuC,IAAKpD,WAMfguG,YAAYhxG,UAAUy0C,WAKtB,SAAUruC,IAAKpD,WAMfguG,YAAYhxG,UAAUq0C,qBAKtB,SAAUjuC,IAAKpD,WAMfguG,YAAYhxG,UAAUm0C,UAKtB,SAAU/tC,IAAKpD,WACRguG,eAgNPkH,cAAiB,WACjB,QAASA,eAActsD,YAAa2iB,cAAeC,eAAgByH,SAC/C,SAAZA,UAAsBA,QAAU,MACpCx2E,KAAKmsD,YAAcA,YACnBnsD,KAAK8uE,cAAgBA,cACrB9uE,KAAK+uE,eAAiBA,eACtB/uE,KAAKw2E,QAAUA,QACfx2E,KAAKkvE,aA0ET,MAlEAupC,eAAcl4G,UAAUm4G,mBAMxB,SAAUl9B,KAAM3yE,IAAKqN,qBACjB,GAAqByiG,kBAAmB34G,KAAKmsD,YAAY54B,MAAMioD,KAAM3yE,KAAK,EAAMqN,oBAChF,IAAIyiG,iBAAiB5mF,OAAOjwB,OACxB,MAAO62G,kBAAiB5mF,MAE5B,IAAqB6mF,kBAAmB96F,gBAAgB66F,iBAAiB7mF,UAAW5b,oBAAqBlW,KAAK8uE,cAAe9uE,KAAK+uE,eAClI,OAAI6pC,kBAAiB7mF,OAAOjwB,OACjB82G,iBAAiB7mF,SAE3B1Y,GAAKrZ,KAAKkvE,WAAWpoE,KAAK9E,MAAMqX,GAAIu/F,iBAAiBx4F,aAEtD,IAAI/G,KAORo/F,cAAcl4G,UAAUs4G,YAGxB,WAAc,MAAO74G,MAAKkvE,WAM1BupC,cAAcl4G,UAAUk0E,MAKxB,SAAU4G,WAAYy9B,eAClB,GAAqB14F,aACA24F,cAAgB,GAAIC,oBAEzCh5G,MAAKkvE,UAAUtoE,QAAQ,SAAUsK,SAC7B,GAAqB7H,IAAKgyE,WAAWhjE,OAAOnH,QACvCkP,UAASha,eAAeiD,KAIxBgQ,GAAK+G,SAAS/W,IAAIy9D,SAAShgE,KAAK9E,MAAMqX,GAAInI,QAAQ41D,SAHnD1mD,SAAS/W,IAAM6H,OAKnB,IAAImI,KAGR,IAAqB4/F,SAAUz4G,OAAOw2B,KAAK5W,UAAUza,IAAI,SAAU0D,IAC/D,GAAqB4yE,QAASZ,WAAWlJ,iBAAiB/xD,SAAS/W,KAC9C6vG,IAAM94F,SAAS/W,IACfQ,MAAQoyE,OAAS88B,cAAc9iC,QAAQijC,IAAIrvG,MAAOoyE,QAAUi9B,IAAIrvG,MAChEsvG,mBAAqB,GAAIxyC,SAAQ98D,YAAeqvG,IAAI1gG,QAAS0gG,IAAIx7F,YAAarU,GAKnG,OAJA8vG,oBAAmBryC,QAAUoyC,IAAIpyC,QAC7BgyC,eACAK,mBAAmBryC,QAAQlgE,QAAQ,SAAUmP,QAAU,MAAOA,QAAOpO,SAAWmxG,cAAc/iG,OAAOpO;GAElGwxG,oBAEX,OAAO99B,YAAW5G,MAAMwkC,QAASj5G,KAAKw2E,UAEnCiiC,iBAEPO,oBAAuB,SAAUvuG,QAEjC,QAASuuG,uBACL,MAAkB,QAAXvuG,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,KA2D/D,MA7DAC,WAAU+4G,oBAAqBvuG,QAS/BuuG,oBAAoBz4G,UAAU01E,QAK9B,SAAUpsE,MAAOoyE,QACb,GAAIv5C,OAAQ1iC,IACZ,OAAOi8E,QAASpyE,MAAMlE,IAAI,SAAUoL,GAAK,MAAOA,GAAErK,MAAMg8B,MAAOu5C,UAAcpyE,OAOjFmvG,oBAAoBz4G,UAAU8lE,oBAK9B,SAAUC,GAAI2V,QACV,GAAIv5C,OAAQ1iC,KACSumE,UAA+B0V,OAAOh8D,aAAaqmD,GAAGC,WACtDC,UAAYF,GAAGE,UAA+ByV,OAAOh8D,aAAaqmD,GAAGE,WAAeF,GAAGE,UACvFn8D,SAAWi8D,GAAGj8D,SAAS1E,IAAI,SAAUoL,GAAK,MAAOA,GAAErK,MAAMg8B,MAAOu5C,SACrF,OAAO,IAAI3U,gBAAehB,GAAGxmD,IAAKwmD,GAAGh5D,MAAOi5D,UAAWC,UAAWn8D,SAAUi8D,GAAG9B,OAAQ8B,GAAGt8D,aAO9FgvG,oBAAoBz4G,UAAUkmE,iBAK9B,SAAUH,GAAI2V,QACV,MAAO,IAAI1U,aAAYjB,GAAGjjE,MAA0B44E,OAAOh8D,aAAaqmD,GAAG7kE,MAAS6kE,GAAGt8D,aAO3FgvG,oBAAoBz4G,UAAUmmE,oBAK9B,SAAUJ,GAAI2V,QACV,MAAO,IAAIzU,gBAAelB,GAAGjjE,MAA0B44E,OAAOh8D,aAAaqmD,GAAG7kE,MAAS6kE,GAAGt8D,aAEvFgvG,qBACTvxC,cAaE2xC,cAAiB,WACjB,QAASA,eAAc77E,WAAYH,WAAYi8E,eAC3Cr5G,KAAKu9B,WAAaA,WAClBv9B,KAAKo9B,WAAaA,WACW,gBAAlBi8E,gBACPr5G,KAAK+V,OAASsjG,cACdr5G,KAAK2kB,MAAQ,OAGb3kB,KAAK+V,OAAS,KACd/V,KAAK2kB,MAAQ00F,eAGrB,MAAOD,kBA0FPp7E,iBAAoB,SAAUvzB,QAE9B,QAASuzB,kBAAiBJ,eAAgBD,iBACtC,GAAI+E,OAAQj4B,OAAO0iC,KAAKntC,OAASA,IAQjC,OAPA0iC,OAAM9E,eAAiBA,eACvB8E,MAAM/E,gBAAkBA,gBACxB+E,MAAM7E,WACN6E,MAAM42E,cAAgB,GAAIhxF,KAC1Boa,MAAM62E,yBAA2B,GAAIjxF,KACrCoa,MAAM82E,sBACN92E,MAAMjE,mCAAqC,GAAInW,KACxCoa,MAsMX,MAhNAziC,WAAU+9B,iBAAkBvzB,QAgB5BuzB,iBAAiBz9B,UAAU69B,WAI3B,SAAUG,SACN,GAAImE,OAAQ1iC,KACSy5G,mBAAqBz5G,KAAKy+B,mCAAmChe,IAAI8d,QAAQF,QACzEq7E,iBAAmB15G,KAAKu5G,yBAAyB94F,IAAI8d,QAAQF,OAQlF,IAPKo7E,qBACDA,oBAAuBp7E,OAAQE,QAAQF,OAAQC,SAAUr6B,QACzDjE,KAAKy+B,mCAAmC/d,IAAI6d,QAAQF,OAAQo7E,oBAC5DC,kBAAqBr7E,OAAQr+B,KAAK25G,aAAap7E,QAAQF,OAAQ,IAC/Dr+B,KAAKw5G,mBAAmB1yG,KAAK4yG,kBAC7B15G,KAAKu5G,yBAAyB74F,IAAI6d,QAAQF,OAAQq7E,oBAEjDD,mBAAmBn7E,UAAYC,QAAQD,SAAU,CAClD,GAAqBs7E,YAAar7E,QAAQD,YAC1C,IAA8B,UAA1Bs7E,WAAW13E,WAAwB,CASnC,GAAqB23E,WACrBr5G,QAAOw2B,KAAK4iF,YAAYhzG,QAAQ,SAAUusB,UACrB,eAAbA,WACA0mF,QAAQ1mF,UAAYymF,WAAWzmF,aAGvCymF,WAAaC,QAEjBJ,mBAAmBn7E,SAAWs7E,WAC9BF,iBAAiBp7E,SAAWt+B,KAAK25G,aAAaC,WAAY,GAE9D,IAAKH,mBAAmBtzG,MAAQo4B,QAAQp4B,OACpCszG,mBAAmBtzG,KAAOo4B,QAAQp4B,KAIlCuzG,iBAAiBvzG,KAAOnG,KAAK25G,aAAap7E,QAAQp4B,KAAM,GAGpDo4B,QAAQp4B,KAAKuzC,cAAgBxB,mBAAmB92C,UAAU,CAC1D,GAAqB04G,iBAAoCv7E,QAAY,IACrEu7E,iBAAgBjgE,mBAAmBlxC,OAAOmxG,gBAAgBhgE,eAAelzC,QAAQ,SAAUyC,IACvF,GAAqBg1B,QAASh1B,GAAGhC,SACjC,IAAIq7B,MAAM/E,gBAAgBe,cAAcL,OAAO12B,YAC1C+6B,MAAMjE,mCAAmC3K,IAAIuK,QAAS,CACvD,GAAqB07E,WAAYr3E,MAAM/E,gBAAgB8lD,eAAeplD,OAClE07E,YACAr3E,MAAMtE,WAAW27E,gBAWzC/7E,iBAAiBz9B,UAAUgf,UAI3B,SAAUke,aACN,GAAIiF,OAAQ1iC,KACSu0B,YACAqK,KAAOgY,KAAKnxC,WAC7Bu0G,UAAWh6G,KAAKw5G,mBAChB37E,QAAS79B,KAAK69B,QAAQl4B,IAAI,SAAU04B,OAAQl5B,OACxCk5B,OAAOsY,iBACP,IAAqBsjE,UAA4B,MACjD,IAAIv3E,MAAM/E,gBAAgBe,cAAcL,OAAO12B,UAAW,CACtD,GAAqB42B,SAAUmE,MAAMjE,mCAAmChe,IAAI4d,OACvEE,UAAYA,QAAQD,UAA4C,cAAhCC,QAAQD,SAAS4D,aAClD+3E,SAAW57E,OAAO58B,KAAO,IAAM0D,MAC/BovB,SAASztB,MAAOu3B,OAAQA,OAAQ9J,SAAU0lF,YAGlD,OACIC,SAAU/0G,MACV1D,KAAM48B,OAAO58B,KACbkG,SAAU+6B,MAAM/E,gBAAgBw8E,kBAAkB97E,OAAO12B,SAAU81B,aACnEw8E,SAAUA,aAItB,QAASr7E,KAAMA,KAAMrK,SAAUA,WAOnCyJ,iBAAiBz9B,UAAUo5G,aAK3B,SAAUt2G,MAAOmnB,OACb,MAAOpnB,YAAWC,MAAOrD,KAAMwqB,QAOnCwT,iBAAiBz9B,UAAUuD,WAK3B,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cAAc,CAC/B,GAAqB6yG,YAAap6G,KAAK49B,eAAeqC,gBAAgB58B,MAAMsE,SAAUtE,MAAM5B,MACvE0D,MAAQnF,KAAKq6G,kBAAkBD,WAAY72G,QAChE,QAAS22G,SAAU/0G,MAAOuxC,QAASrzC,MAAMqzC,WAUjD1Y,iBAAiBz9B,UAAU85G,kBAO3B,SAAUD,WAAY5vF,OAClB,GAAqBrlB,OAAQnF,KAAKs5G,cAAc74F,IAAI25F,YAC/B77E,QAAU,IAC/B,IAAY,EAAR/T,OACAxqB,KAAK29B,gBAAgBe,cAAc07E,WAAWzyG,UAAW,CACzD,GAAI3H,KAAKy+B,mCAAmC3K,IAAIsmF,YAG5C,MAAwB,MAE5B77E,SAAUv+B,KAAKs6G,YAAYF,YACvB77E,SAAWA,QAAQD,mBAAoB/2B,gBAEvCpC,MAAQnF,KAAKq6G,kBAAkB97E,QAAQD,SAAU9T,OAEjD+T,QAAU,UAGb,IAAa,MAATp5B,MAGL,MAAOA,MAWX,OARa,OAATA,QACAA,MAAQnF,KAAK69B,QAAQ/7B,OACrB9B,KAAK69B,QAAQ/2B,KAAKszG,aAEtBp6G,KAAKs5G,cAAc54F,IAAI05F,WAAYj1G,OAC/Bo5B,SACAv+B,KAAKo+B,WAAWG,SAEbp5B,OAMX64B,iBAAiBz9B,UAAU+5G,YAI3B,SAAUj8E,QACN,GAAqBE,SAAUv+B,KAAK29B,gBAAgB8lD,eAAeplD,OACnE,KAAKE,QAAS,CAIV,GAAqBJ,gBAAiBn+B,KAAK49B,eAAeoE,cAAc3D,OACpEF,kBACAI,SAAYF,OAAQF,eAAeE,OAAQC,SAAUH,eAAeG,WAG5E,MAAOC,UAEJP,kBACTsV,kBACEpV,iBAAoB,WACpB,QAASA,kBAAiBkB,UAAWxB,gBACjC59B,KAAKo/B,UAAYA,UACjBp/B,KAAK49B,eAAiBA,eACtB59B,KAAK2tC,KAAO,GAAIrlB,KAgMpB,MAzLA4V,kBAAiB39B,UAAUi+B,cAK3B,SAAUD,QAASD,UACft+B,KAAK2tC,KAAKjtB,IAAI6d,QAAQp4B,KAAKkB,WAAak3B,QAASA,QAASD,SAAUA,SAAUi8E,WAAW,KAM7Fr8E,iBAAiB39B,UAAUo+B,WAI3B,SAAUJ,SACNv+B,KAAK2tC,KAAKjtB,IAAI6d,QAAQp4B,KAAKkB,WAAak3B,QAASA,QAASD,SAAU,KAAMi8E,WAAW,KAMzFr8E,iBAAiB39B,UAAUgf,UAI3B,SAAUgV,UACN,GAAImO,OAAQ1iC,KACSw6G,gBAAkB,GAAIx2F,IAC3CxgB,OAAMugB,KAAK/jB,KAAK2tC,KAAK5rC,UAAU6E,QAAQ,SAAUyS,IAC7C,GAAIklB,SAAUllB,GAAGklB,QAASD,SAAWjlB,GAAGilB,SAAUi8E,UAAYlhG,GAAGkhG,SACjE,IAAIh8E,QAAQmb,cAAgBxB,mBAAmB92C,SAAU,CAKrDo5G,gBAAgBn+E,IAAIkC,QAAQp4B,KAAKkB,UACjC,IAAqB0/E,YAA8B,OACnDA,YAAWtlD,QAAQ76B,QAAQ,SAAUogF,KAAOwzB,gBAAgBn+E,IAAI2qD,IAAI3/E,aAExE,IAAKkzG,UAAW,CACkBp4F,kBAAkBoc,QAAQp4B,KAAKkB,UAAU5F,KACvE49B,6BAA4BqD,MAAMtD,UAAWb,QAAQp4B,KAAKkB,UAAWq7B,MAAM+3E,yBAAyBl8E,QAA0B,cAGtIhK,SAAS3tB,QAAQ,SAAUgZ,OACvB,GAAqBye,QAASze,MAAMye,MACpC,IAAIm8E,gBAAgB1mF,IAAIuK,QAAS,CAC7B,GAAqBq8E,iBAAkBv4F,kBAAkBvC,MAAM2U,SAC/DmO,OAAMtD,UAAUlG,WAAWpyB,KAAK4e,SAASg1F,iBAAiBh6F,IAAIgiB,MAAMi4E,oBAAoBt8E,SAASpG,WAAW,MACxGC,aAAasH,gBAU7BtB,iBAAiB39B,UAAUk6G,yBAK3B,SAAUl8E,QAASD,UACf,GAAIoE,OAAQ1iC,KACSwT,aAAexT,KAAK46G,iBAAiBr8E,UACrC1W,YACrB,IAAIyW,mBAAoBsb,yBACpBpmC,YAAY1M,KAAK9E,MAAMwR,YAIvB8qB,SAAS2E,mBAAmBt6B,OAAO21B,SAAS4E,eACvCv9B,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAClCsB,OAAO21B,SAASkD,iBAAiBC,QAAQ97B,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAC3E2b,OAAO,SAAU1b,KAAO,MAAOA,OAAQg3B,SAASn4B,KAAKkB,aACrD1B,IAAI,SAAU2B,KAAO,MAAOo7B,OAAMi4E,oBAAoBrzG,QAG3DugB,UAAYyW,SAASzW,cAEpB,IAAI0W,QAAQmb,cAAgBxB,mBAAmBr3C,UAAW,CAC3D,GAAqBmkF,YAA8B,OACnDn9D,WAAYm9D,WAAWn9D,UAAUlf,OAAOq8E,WAAWj8D,eAWvD,MALAvV,aAAY1M,KAAK9E,MAAMwR,YAAaqU,UAAU7E,OAAO,SAAUoE,UAAY,QAASA,SAASI,WAAa7hB,IAAI,SAAUyhB,UACpH,MAAOsb,OAAMk4E,kBACTlhE,YAAaxB,mBAAmBC,WAAYhyC,KAAMihB,SAASI,cAG5DrB,WAAW3S,cAMtB0qB,iBAAiB39B,UAAUo6G,oBAI3B,SAAUE,YACN,GAAqBC,mBAAoB96G,KAAK49B,eAAeqC,gBAAgBje,sBAAsB64F,WAAWlzG,UAAWwa,kBAAkB04F,WAAWp5G,MACtJ,OAAOzB,MAAKo/B,UAAUxZ,WAAWk1F,oBAMrC58E,iBAAiB39B,UAAUq6G,iBAI3B,SAAUjtE,MACN,GAAqBvO,WAAYp/B,KAAKo/B,UAClC27E,YAAe,WACf,QAASA,gBA2DT,MApDAA,aAAYx6G,UAAUmD,WAKtB,SAAUsL,IAAKzL,SACX,GAAIm/B,OAAQ1iC,IACZ,OAAOmmB,YAAWnX,IAAIrJ,IAAI,SAAUia,OAAS,MAAOxc,YAAWwc,MAAO8iB,MAAOn/B,aAOjFw3G,YAAYx6G,UAAUqD,eAKtB,SAAU+B,IAAKpC,SACX,GAAIm/B,OAAQ1iC,IACZ,OAAO,IAAIsmB,gBAAe9lB,OAAOw2B,KAAKrxB,KAAKA,IAAI,SAAUsO,KAAO,MAAO,IAAIsS,iBAAgBtS,IAAK7Q,WAAWuC,IAAIsO,KAAMyuB,MAAOn/B,WAAU,QAO1Iw3G,YAAYx6G,UAAUsD,eAKtB,SAAUR,MAAOE,SAAW,MAAO0jB,SAAQ5jB,QAM3C03G,YAAYx6G,UAAUuD,WAKtB,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cACjB,MAAO63B,WAAUxZ,WAAWviB,MAG5B,MAAM,IAAIkB,OAAM,oCAAsClB,QAGvD03G,cAEX,OAAO33G,YAAWuqC,KAAM,GAAIotE,aAAe,OAExC78E,oBAEPe,qBAAwB,SAAUx0B,QAElC,QAASw0B,sBAAqBH,YAAanB,iBACvC,GAAI+E,OAAQj4B,OAAO0iC,KAAKntC,OAASA,IAGjC,OAFA0iC,OAAM5D,YAAcA,YACpB4D,MAAM/E,gBAAkBA,gBACjB+E,MAgDX,MArDAziC,WAAUg/B,qBAAsBx0B,QAYhCw0B,qBAAqB1+B,UAAU2+B,YAK/B,SAAUH,gBAAiBH,MACvB,GAAI8D,OAAQ1iC,KACS2tC,KAAOiJ,KAAKrjB,MAAMqL,MAClBq7E,WACrBj6G,MAAK69B,WACL8P,KAAK9P,QAAQj3B,QAAQ,SAAUo0G,kBAC3B,GAAqB38E,QAASqE,MAAM5D,YAAYre,IAAIiiB,MAAM/E,gBAAgBs9E,oBAAoBD,iBAAiBrzG,SAAUo3B,iBAAkBi8E,iBAAiBv5G,KAC5JihC,OAAM7E,QAAQ/2B,KAAKu3B,QACf28E,iBAAiBf,UACjBA,SAASnzG,MAAOu3B,OAAQA,OAAQ47E,SAAUe,iBAAiBf,YAGnE,IAAqBD,WAAY52G,WAAWuqC,KAAKqsE,UAAWh6G,KAAM,KAClE,QAASg6G,UAAWA,UAAWC,SAAUA,WAO7Ch7E,qBAAqB1+B,UAAUqD,eAK/B,SAAU+B,IAAKpC,SACX,GAAI,YAAcoC,KAAK,CACnB,GAAqBy0G,YAAap6G,KAAK69B,QAAQl4B,IAAc,UACxC+wC,QAAU/wC,IAAa,OAC5C,OAAO+wC,SAAQ50C,OAAS9B,KAAK8+B,YAAYre,IAAI25F,WAAWzyG,SAAUyyG,WAAW34G,KAAMi1C,SAC/E0jE,WAGJ,MAAO3vG,QAAOlK,UAAUqD,eAAeupC,KAAKntC,KAAM2F,IAAKpC,UAGxD07B,sBACTqU,kBAcE4nE,eACAC,MAAO,EACPC,UAAW,EACX3oE,IAAK,EAETyoE,eAAcA,cAAcC,OAAS,QACrCD,cAAcA,cAAcE,WAAa,YACzCF,cAAcA,cAAczoE,KAAO,KACnC,IAAIvL,aAAe,WACf,QAASA,aAAYklB,QAASvnB,QAASw2E,MAAO3sD,WAAY4sD,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,mBAAoBC,kBAAmBC,eAAgBj6B,iBAAkBk6B,iBAClM77G,KAAKosD,QAAUA,QACfpsD,KAAK6kC,QAAUA,QACf7kC,KAAKq7G,MAAQA,MACbr7G,KAAK0uD,WAAaA,WAClB1uD,KAAKs7G,kBAAoBA,kBACzBt7G,KAAKu7G,gBAAkBA,gBACvBv7G,KAAKw7G,eAAiBA,eACtBx7G,KAAKy7G,cAAgBA,cACrBz7G,KAAK07G,mBAAqBA,mBAC1B17G,KAAK27G,kBAAoBA,kBACzB37G,KAAK47G,eAAiBA,eACtB57G,KAAK2hF,iBAAmBA,iBACxB3hF,KAAK67G,gBAAkBA,gBACvB77G,KAAK87G,kBAAoB,GAAIxzF,KAunBjC,MAlnBA4e,aAAY3mC,UAAU+rD,WAGtB,WAActsD,KAAKs7G,kBAAkBhvD,cAKrCplB,YAAY3mC,UAAUw7G,mBAItB,SAAUC,WACN,GAAIt5E,OAAQ1iC,KACSi8G,cAAgBp7E,4BAA4Bm7E,UAAWh8G,KAAKq7G,MAAOr7G,KAAK67G,gBAAiB77G,KAAKs7G,kBAInH,OAHAW,eAAc36E,UAAU16B,QAAQ,SAAU26B,UACtC,MAAOmB,OAAM44E,kBAAkBj2B,qCAAqC9jD,SAASp7B,KAAKkB,WAAW,KAE1F40G,eAMX/0E,YAAY3mC,UAAU27G,oBAItB,SAAUF,WACN,GAAIt5E,OAAQ1iC,KACSi8G,cAAgBp7E,4BAA4Bm7E,UAAWh8G,KAAKq7G,MAAOr7G,KAAK67G,gBAAiB77G,KAAKs7G,kBACnH,OAAO1nE,SACFF,IAAIuoE,cAAc36E,UAAU37B,IAAI,SAAU47B,UAC3C,MAAOmB,OAAM44E,kBAAkBj2B,qCAAqC9jD,SAASp7B,KAAKkB,WAAW,MAE5Ff,KAAK,WAAc,MAAO21G,kBAMnC/0E,YAAY3mC,UAAU8gC,YAItB,SAAUxf,UACN,MAAOwf,aAAYrhC,KAAKq7G,MAAOr7G,KAAK67G,gBAAiB77G,KAAKs7G,kBAAmBz5F,WAMjFqlB,YAAY3mC,UAAU47G,eAItB,SAAUj/E,MACN,MAAOl9B,MAAKo8G,WAAWl/E,KAAMg+E,cAAcC,QAM/Cj0E,YAAY3mC,UAAU87G,mBAItB,SAAU37E,OACN,GAAIgC,OAAQ1iC,KACSs8G,iBAKrB,OAJA57E,OAAMA,MAAM95B,QAAQ,SAAUs2B,MAC1B,MAAOwF,OAAM05E,WAAWl/E,KAAMg+E,cAAcE,WACvCx0G,QAAQ,SAAU21G,SAAW,MAAOD,gBAAex1G,KAAKy1G,aAE1DD,gBAMXp1E,YAAY3mC,UAAUi8G,eAItB,SAAU97E,OACN,GAAIgC,OAAQ1iC,KACSy8G,kBAMrB,OALA/7E,OAAM95B,QAAQ,SAAUs2B,MACpB,MAAOA,MAAKoE,UAAU16B,QAAQ,SAAU26B,UACpC,MAAOk7E,iBAAgB31G,KAAK47B,MAAM44E,kBAAkBj2B,qCAAqC9jD,SAASp7B,KAAKkB,WAAW,QAGnHusC,QAAQF,IAAI+oE,iBAAiBn2G,KAAK,SAAUqa,GAAK,MAAOwiB,yBAAwBzC,UAM3FwG,YAAY3mC,UAAUm8G,cAItB,SAAUh8E,OACN,GAAIgC,OAAQ1iC,IAMZ,OALA0gC,OAAM95B,QAAQ,SAAUs2B,MACpB,MAAOA,MAAKoE,UAAU16B,QAAQ,SAAU26B,UACpC,MAAOmB,OAAM44E,kBAAkBj2B,qCAAqC9jD,SAASp7B,KAAKkB,WAAW,OAG9F87B,wBAAwBzC,QAOnCwG,YAAY3mC,UAAU67G,WAKtB,SAAUl/E,KAAMy/E,WACZ,MAAO38G,MAAK48G,qBAAqB1/E,KAAMy/E,WAAWh0G,OAAO3I,KAAK68G,wCAAwC3/E,KAAMy/E,WAAY38G,KAAK88G,qBAAqB5/E,KAAMy/E,aAO5Jz1E,YAAY3mC,UAAUq8G,qBAKtB,SAAU1/E,KAAMy/E,WACZ,GAAIj6E,OAAQ1iC,KACSs8G,kBACAl9E,UAAYp/B,KAAK+8G,qBAAqB35E,qBAAqBliB,kBAAkBgc,KAAKrb,UAAU,GAAO7hB,KAAK6kC,QAAQxB,SAkDrI,OAjDAnG,MAAKoE,UAAU16B,QAAQ,SAAUivF,aAAcmnB,eAO3Ct6E,MAAMi5E,kBAAkBvlB,WAAWh3D,UAAWy2D,aAAa1vF,KAAKkB,UAKhE,IAAqB4d,oBAAqB4wE,aAAa5yD,mBAAmBt9B,IAAI,SAAUzF,GAAK,MAAOA,GAAEmH,YAAcsB,OAAOktF,aAAa3yD,cAAcv9B,IAAI,SAAUzF,GAAK,MAAOA,GAAEmH,YAAewuF,aAAa77C,gBAAgBr0C,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,YAAewuF,aAAa57C,gBAAgBt0C,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,aACvT8pG,sBAAwB,GAAI7oF,IACjDrD,oBAAmBre,QAAQ,SAAUU,IAAK21G,WAClCv6E,MAAM24E,MAAMl6E,aAAa75B,IAAIK,WAC7BwpG,sBAAsBzwF,IAAIpZ,IAAK,QAAU01G,cAAgB,IAAMC,aAGvE9L,sBAAsBvqG,QAAQ,SAAUmjF,QAAS1iF,WAC7C+3B,UAAUlG,WAAWpyB,KAAK4e,SAASqkE,SAC9BrpE,IAAIyL,UAAU4L,KAAKvM,eACnByM,WAAWhS,eAAemZ,UAAUxZ,WAAWve,gBAEpDs1G,UAAYzB,cAAcE,WAE1BvlB,aAAa5yD,mBAAmBr8B,QAAQ,SAAUs2G,OAC9C,GAAqBl0G,UAAW05B,MAAM44E,kBAAkBx2B,qBAAqBo4B,MAAM71G,UAC9E2B,UAAS0f,cAGdga,MAAMy6E,sBAAsB/9E,UAAWy2D,aAAcnzD,MAAM44E,kBAAkB53B,yBAAyB16E,WAAYA,SAAS7C,MAAOgrG,uBAClIzuE,MAAMy6E,sBAAsB/9E,UAAWy2D,aAAc7sF,SAAU6sF,aAAar0D,iBAAiBrZ,WAAYgpF,4BASjF,IAAhC/xE,UAAUlG,WAAWp3B,QAAiB66G,UAAYzB,cAAcC,QAC/Dj+E,KAAK/U,WAAWrmB,QAAUo7B,KAAKyE,MAAM7/B,QAAUo7B,KAAK0E,YAAY9/B,QAC7Do7B,KAAKoE,UAAUx/B,QAAUo7B,KAAK4E,wBAClCrC,iBAAiBL,WAEjBA,UAAUlG,WAAWp3B,OAAS,GAC9Bw6G,eAAex1G,KAAK9G,KAAKo9G,qBAAqBlgF,KAAKrb,SAAUud,YAE1Dk9E,gBAOXp1E,YAAY3mC,UAAUs8G,wCAKtB,SAAU3/E,KAAMy/E,WACZ,GAAIj6E,OAAQ1iC,KACSs8G,iBACrB,MAAMK,UAAYzB,cAAcC,OAE5B,MAAOmB,eAEX,IAAqBx8E,YAAaze,sBAAsB6b,KAAKrb,UAAU,GAAM,EAmB7E,OAlBAqb,MAAK/U,WAAWvhB,QAAQ,SAAUy2G,WAC9B,GAAqBr0G,UAA8B05B,MAAM44E,kBAAkBv3B,kCAAkCs5B,WAAa/+E,QACrHt1B,UAAS0f,aAKd1f,SAAkB,SAAEqvC,UAAUzxC,QAAQ,SAAUmnD,UAC5C,GAAqBuvD,eAAgB56E,MAAM24E,MAAM32E,uBAAuBqpB,SAAU7wB,KAAKrb,SACvF,KAAKy7F,cACD,KAAM,IAAI/4G,OAAM,6BAA+BwpD,SAAW,gBAAkB7wB,KAAKrb,SAErF,IAAqB02B,eAAmCvvC,SAAkB,SAAEuvC,eAAiB7V,MAAM0pB,QAAQzmB,qBACtFvG,UAAYsD,MAAMq6E,qBAAqB35E,qBAAqBlD,iBAAiBo9E,cAAe/kE,gBAAkB3S,kBAAkBC,SAAU/F,YAAa4C,MAAMmC,QAAQxB,SAC1L5D,kBAAiBL,WACjBk9E,eAAex1G,KAAK47B,MAAM06E,qBAAqBE,cAAel+E,gBAG/Dk9E,gBAOXp1E,YAAY3mC,UAAUu8G,qBAKtB,SAAU5/E,KAAMy/E,WACZ,GAAqBL,kBAErB,MAAKt8G,KAAK6kC,QAAQ04E,uBAA2BZ,UAAYzB,cAAcC,OACnE,MAAOmB,eAEX,IAAIp/E,KAAK/U,WAAWrmB,QAAUo7B,KAAK0E,YAAY9/B,QAAUo7B,KAAKoE,UAAUx/B,QACpEo7B,KAAKyE,MAAM7/B,QAAUo7B,KAAK4E,sBAAuB,CACjD,GAAqB07E,aAAcx9G,KAAK+8G,qBAAqB35E,qBAAqBphB,sBAAsBkb,KAAKrb,UAAU,GAAO7hB,KAAK6kC,QAAQxB,SAC3InG,MAAKoE,UAAU16B,QAAQ,SAAU26B,UAE7BpC,iBAAiBq+E,YAAaj8E,SAASp7B,KAAKkB,aAEV,IAAlCm2G,YAAYtkF,WAAWp3B,QACvB29B,iBAAiB+9E,aAErBlB,eAAex1G,KAAK9G,KAAKo9G,qBAAqBlgF,KAAKrb,SAAU27F,cAEjE,MAAOlB,iBAUXp1E,YAAY3mC,UAAU48G,sBAQtB,SAAU/yF,IAAK1gB,WAAYV,SAAUmf,WAAYgpF,uBAC7C,GAAI93F,IAAKrZ,KAAKy9G,eAAez0G,SAAUU,WAAYye,YAAau1F,eAAiBrkG,GAAGm/B,SAAUuwD,UAAY1vF,GAAGsoB,OAC5GnoB,GAAK4Q,IAAI8O,YAAYpyB,KAAK9E,MAAMwX,GAAIxZ,KAAK07G,mBAAmBnY,iBAAiBv6F,SAAU00G,eAAgB3U,UAAWoI,uBACnH,IAAI33F,KAOR0tB,YAAY3mC,UAAUo9G,kBAKtB,SAAU1B,cAAevnC,QACrB,GAAIhyC,OAAQ1iC,KACS+xB,UACAqT,WAAa,GAAIE,YAEjBs4E,cAAgB,GAAInF,eAAcrzE,iBAAoBsvC,OAe3E,IAdAunC,cAAcv7E,MAAM95B,QAAQ,SAAUs2B,MAClC,GAAqB2gF,aACrB3gF,MAAK/U,WAAWvhB,QAAQ,SAAUsoD,eAC9B,GAAqBqzB,SAAU7/C,MAAM44E,kBAAkBx2B,qBAAqB51B,cACxEqzB,UAAWA,QAAQ75D,aACnBm1F,UAAU/2G,KAAKy7E,WAGvBs7B,UAAUj3G,QAAQ,SAAUoC,UACxB,GAAqBwyE,MAA6CxyE,SAAkB,SAAW,SAC1EkN,oBAAsB6lC,oBAAoBC,UAA6BhzC,SAAkB,SAAE8vC,cAChH/mB,QAAOjrB,KAAK9E,MAAM+vB,OAA2B6rF,cAAclF,mBAAmBl9B,KAAMt+C,KAAKrb,SAAU3L,0BAGvG6b,OAAOjwB,OACP,KAAM,IAAIyC,OAAMwtB,OAAOpsB,IAAI,SAAU4T,GAAK,MAAOA,GAAExT,aAAeH,KAAK,MAE3E,OAAOg4G,gBAMX12E,YAAY3mC,UAAUu9G,aAItB,SAAU7B,eACN,GAAIv5E,OAAQ1iC,KACR8iC,0BAA4Bm5E,cAAcn5E,0BAA2BpC,MAAQu7E,cAAcv7E,MAC1Eq9E,cAAgBr9E,MAAM/6B,IAAI,SAAUu3B,MACrD,MAAOwF,OAAMs7E,iBAAiB9gF,KAAKrb,SAAUihB,0BAA2B5F,KAAK/U,WAAY+U,KAAKyE,MAAOzE,KAAKoE,UAAWpE,KAAK0E,cAE9H,OAAOv5B,SAAQ01G,gBAWnB72E,YAAY3mC,UAAUy9G,iBAStB,SAAUzgF,WAAYuF,0BAA2B3a,WAAYwZ,MAAOL,UAAWM,aAC3E,GAAIc,OAAQ1iC,KACS8/B,WAAaze,sBAAsBkc,YAAY,GAAM,GACrD++E,kBACAl9E,UAAYp/B,KAAK+8G,qBAAqB35E,qBAAqBliB,kBAAkBqc,YAAY,GAAOv9B,KAAK6kC,QAAQxB,SAyBlI,IAxBAi5E,eAAex1G,KAAK9E,MAAMs6G,eAAgBt8G,KAAKi+G,eAAe1gF,WAAYpV,WAAYwZ,MAAOL,UAAWM,YAAaxC,YAErHkC,UAAU16B,QAAQ,SAAUivF,cAAgB,MAAOnzD,OAAMw7E,eAAe9+E,UAAWy2D,gBAEnF1tE,WAAWvhB,QAAQ,SAAUk8E,SACzB,GAAqB95E,UAAW05B,MAAM44E,kBAAkBx2B,qBAAsC,QAC9F,IAAK97E,SAAS0f,YAAd,CAGA,GAAqB6Y,UAAWuB,0BAA0BriB,IAAIqiE,QAC9D,KAAKvhD,SACD,KAAM,IAAIh9B,OAAM,6DAA+D4C,eAAe6B,SAAS7C,MAAQ,IAGnH,IAAqBg4G,qBAAsBz7E,MAAM84E,eAAejY,iBAAiBnkE,UAAWp2B,SAG5FA,UAAkB,SAAE2vC,oBAAoB/xC,QAAQ,SAAUw3G,gBACtD9B,eAAex1G,KAAK47B,MAAM27E,eAAkCD,eAAyB,UAAGp1G,SAAUo1G,eAAgBt+E,cAGlF4C,OAAM47E,kBAAkBl/E,UAAWp2B,SAAUu4B,SAAUA,SAASC,iBAAiBrZ,WAAYg2F,oBAAqBr+E,WACtJ4C,OAAM67E,yBAAyBn/E,UAAWp2B,SAAUu4B,SAAUzB,eAE9DV,UAAUlG,WAAWp3B,OAAS,EAAG,CACjC,GAAqB08G,WAAYx+G,KAAKo9G,qBAAqB7/E,WAAY6B,UACvEk9E,gBAAenjF,QAAQqlF,WAE3B,MAAOlC,iBAWXp1E,YAAY3mC,UAAU09G,eAStB,SAAUxgF,YAAatV,WAAYwZ,MAAOL,UAAWM,YAAa68E,cAC9D,GAAI/7E,OAAQ1iC,KACS0+G,gBAAkB1+G,KAAK67G,gBAAgB95E,aAAatE,aACpE93B,IAAI,SAAU04B,QAAU,MAAOqE,OAAMm5E,gBAAgB75E,cAAc3D,UACnDsgF,SAAWr9E,UAAU37B,IAAI,SAAUyD,MACpD,OACIm1B,QAA4BmE,MAAM44E,kBAAkBp2B,mBAAmB97E,KAAKjD,KAAKkB,WACjFi3B,SAA6BoE,MAAM44E,kBAAkB/4E,oBAAoBn5B,KAAKjD,KAAKkB,cAExFsB,OAAOwf,WAAWxiB,IAAI,SAAU2B,KAC/B,OACIi3B,QAA4BmE,MAAM44E,kBAAkBv2B,oBAAoBz9E,KACxEg3B,SAA6BoE,MAAM44E,kBAAkBx2B,qBAAqBx9E,QAE9Eq6B,MAAMh8B,IAAI,SAAU2B,KACpB,OACIi3B,QAA4BmE,MAAM44E,kBAAkBxzB,eAAexgF,KACnEg3B,SAA6BoE,MAAM44E,kBAAkB3zB,gBAAgBrgF,QAEzEs6B,YAAYj8B,IAAI,SAAU2B,KAC1B,OACIi3B,QAA4BmE,MAAM44E,kBAAkBh0B,qBAAqBhgF,KACzEg3B,SAA6BoE,MAAM44E,kBAAkBh0B,qBAAqBhgF,KAAOnB,SAGpEy4G,gBAAkB5+G,KAAK+8G,qBAAqB35E,qBAAqBphB,sBAAsByb,aAAa,GAAOz9B,KAAK6kC,QAAQxB,UACzIhqB,GAAKmkB,mBAAmBC,YAAamhF,gBAAiB5+G,KAAK2hF,iBAAkB3hF,KAAK67G,gBAAiB6C,gBAAiBC,UAAW//E,KAAOvlB,GAAGulB,KAAMrK,SAAWlb,GAAGkb,QACjKA,UAAS3tB,QAAQ,SAAUgZ,OACvB6+F,aAAavlF,WAAWpyB,KAAK4e,SAAS9F,MAAM2U,UAAU7T,IAAI+9F,aAAa74F,WAAWhG,MAAMye,SAASpG,WAAW,MACxGC,aAAasH,aAGrB,IAAqBq/E,aAAc,GAAIzF,eAAc37E,YAAa7b,gBAAgB6b,aAAcmB,KAChG,OAAI5+B,MAAK6kC,QAAQ04E,uBACLsB,YAAa7+G,KAAKo9G,qBAAqB3/E,YAAamhF,mBAGxDC,cAOZ33E,YAAY3mC,UAAU29G,eAKtB,SAAU9+E,UAAWmC,UACjB,GAAqB1Z,aACrB,IAAI7nB,KAAK6kC,QAAQ6vC,OAAQ,CACrB,GAAqBoqC,kBAAmB9+G,KAAK6kC,QAAQ6vC,OAAOnyE,QAAQ,KAAM,IAC1EslB,WAAU/gB,MACNpB,MAAO8c,gCAAgCxiB,KAAK0uD,WAAY5hC,YAAYkwD,WACpE11D,SAAUw3F,mBAGd9+G,KAAK6kC,QAAQU,YACb1d,UAAU/gB,MACNpB,MAAO8c,gCAAgCxiB,KAAK0uD,WAAY5hC,YAAYmwD,qBACpE31D,SAAUtnB,KAAK6kC,QAAQU,aAG/BvlC,KAAK27G,kBAAkB/lB,QAAQx2D,UAAWmC,SAAU1Z,YASxDqf,YAAY3mC,UAAUg+G,yBAOtB,SAAUn/E,UAAWp2B,SAAUu4B,SAAUzB,YACrC,GAAqBi/E,UAAW/+G,KAAKs7G,kBAAkB53B,yBAAyB16E,UAC3Dg2G,mBAAqBh/G,KAAKs+G,kBAAkBl/E,UAAW2/E,SAAUx9E,UAAWv4B,SAAS7C,MAAO,KAAM25B,YAClHqzE,aACgB8L,eAAiBh3G,qBAAqBe,SAAS7C,KAAKkB,WACpD63G,cACrB,KAAK,GAAqB/rF,YAAYnqB,UAASqsC,OAAQ,CACnD,GAAqBQ,cAAe7sC,SAASqsC,OAAOliB,SAEpD+rF,aAAYp4G,KAAK,GAAIyf,iBAAgB4M,SAAUlM,QAAQ4uB,gBAAe,KAE1E,GAAqBspE,gBACrB,KAAK,GAAqBhsF,YAAYnqB,UAASssC,QAAS,CACpD,GAAqBO,cAAe7sC,SAASssC,QAAQniB,SAErDgsF,cAAar4G,KAAK,GAAIyf,iBAAgB4M,SAAUlM,QAAQ4uB,gBAAe,KAE3EzW,UAAUlG,WAAWpyB,KAAK4e,SAASu5F,gBAC9Bv+F,IAAIkF,WAAWkH,YAAYwxD,wBAAwBvyD,QACpD9E,QAAQje,SAASinB,UAAWmP,UAAUxZ,WAAW5c,SAAS7C,KAAKkB,WAC/Dqe,SAASs5F,oBAAqB,GAAI14F,gBAAe44F,aACjD,GAAI54F,gBAAe64F,cACnBh5F,WAA8Bnd,SAAkB,SAAE6vC,mBAAmBlzC,IAAI,SAAUsqB,UAAY,MAAOhJ,SAAQgJ,gBAE7GgI,WAAWlS,WAAW+G,YAAY4S,kBAAsCzZ,eAAemZ,UAAUxZ,WAAW5c,SAAS7C,KAAKkB,cAAiB6iF,aAAaC,SAAUjyD,aAAaC,MAAOD,aAAasH,aAW5M0H,YAAY3mC,UAAU+9G,kBAStB,SAAUl/E,UAAWp2B,SAAUu4B,SAAU69E,qBAAsBC,gBAAiBv/E,YAC5E,GAAIzmB,IAAKrZ,KAAKy9G,eAAez0G,SAAUu4B,SAAU69E,sBAAuB1B,eAAiBrkG,GAAGm/B,SAAUuwD,UAAY1vF,GAAGsoB,MAChG29E,WAAaD,gBAAkB35F,SAAS25F,gBAAgBjc,WAAaj9E,eACrEo5F,WAAav/G,KAAKy7G,cAAclY,iBAAiBnkE,UAAWp2B,SAAU00G,eAAgB4B,WAAYvW,UAIvH,OAHIsW,kBACA1/E,wBAAwB3/B,KAAK67G,gBAAiBwD,gBAAiBr/G,KAAKw7G,eAAe9X,eAAe16F,UAAW82B,YAE1Gy/E,YAQXr4E,YAAY3mC,UAAUk9G,eAMtB,SAAUz0G,SAAUu4B,SAAU69E,sBAC1B,GAAI18E,OAAQ1iC,IACZ,IAAIA,KAAK87G,kBAAkBhoF,IAAI9qB,SAAS7C,KAAKkB,WACzC,MAA0BrH,MAAK87G,kBAAkBr7F,IAAIzX,SAAS7C,KAAKkB,UAEvE,IAAqB0+B,qBAA0D,SAAsB,SAAEA,oBAClF5d,WAAai3F,qBAAqBz5G,IAAI,SAAUkjB,KAAO,MAAO6Z,OAAM44E,kBAAkBv2B,oBAAoBl8D,IAAIxhB,aAC9Gs6B,MAAQJ,SAASC,iBAAiBG,MAAMh8B,IAAI,SAAUu/F,MAAQ,MAAOxiE,OAAM44E,kBAAkBxzB,eAAeod,KAAK79F,aACjHZ,OAASzG,KAAKu7G,gBAAgBhoF,MAAMvqB,SAAgDA,SAAkB,SAAU,QAAGmf,WAAYwZ,MAAOJ,SAAS2Y,QAASpxC,kBAAkBy4B,SAASp7B,KAAM6C,SAA6BA,SAAkB,UAAI+8B,oBAEjQ,OADA/lC,MAAK87G,kBAAkBp7F,IAAI1X,SAAS7C,KAAKkB,UAAWZ,QAC7CA,QAMXygC,YAAY3mC,UAAUw8G,qBAItB,SAAUpyE,aACN,GAAIjI,OAAQ1iC,KACSwqC,cAAgB,SAAUnM,OAAQxY,YAEnD,GADmB,SAAfA,aAAyBA,WAAa,QACpCwY,iBAAkB92B,eACpB,KAAM,IAAIhD,OAAM,sCAAwCqyC,KAAKnxC,UAAU44B,QAE3E,IAAqBmhF,OAAQ98E,MAAMm5E,gBAAgB4D,aAAaphF,SAAW,EACvEhlB,GAAKqpB,MAAMm5E,gBAAgB6D,YAAYrhF,SAAWA,OAAQ12B,SAAW0R,GAAG1R,SAAUlG,KAAO4X,GAAG5X,KAAMi1C,QAAUr9B,GAAGq9B,QAC9FipE,aAAej9E,MAAMm5E,gBAAgB+D,qBAAqBj4G,SAAUgjC,aAKpEk1E,cAAgBn9E,MAAMm5E,gBAAgB+D,qBAAqBj1E,YAAaA,aACxEF,WAAak1E,eAAiBE,cAAgB,KAAOF,aAMrDG,mBAAqBj6F,eACrBk6F,uBAAyBP,MAAQM,mBAAmBh+G,OACpDk+G,cAAgBF,mBAAmBn3G,OAAO,GAAInF,OAAMu8G,wBAAwBE,KAAKz0F,cACtG,OAAOkrB,SAAQnuC,OAAO,SAAUid,KAAM06F,YAAc,MAAO16F,MAAK4J,KAAK8wF,aAAkCt6F,WAAW,GAAIwpE,mBAAkB3kD,WAAYhpC,KAAM,MAAOu+G,gBAErK,QAAS9mF,cAAgByR,YAAaA,YAAa/kB,WAAY4kB,gBASnEtD,YAAY3mC,UAAU89G,eAOtB,SAAU9gF,WAAYv0B,SAAUm3G,mBAAoBrgF,YAChD,GAAqBV,WAAYp/B,KAAK+8G,qBAAqB35E,qBAAqBlD,iBAAoCigF,mBAA6B,UAAGngH,KAAKw7G,eAAe9X,eAAe16F,UAAW82B,YAAa9/B,KAAK6kC,QAAQxB,UACvM+8E,mBAAqBpgH,KAAKw7G,eAAe/X,cAAcrkE,UAAWp2B,SAAUm3G,mBAEjG,OADAxgF,yBAAwB3/B,KAAK67G,gBAAiBuE,mBAAoBpgH,KAAKw7G,eAAe9X,eAAe16F,UAAW82B,YACzG9/B,KAAKo9G,qBAAqB7/E,WAAY6B,YAOjD8H,YAAY3mC,UAAU68G,qBAKtB,SAAU7/E,WAAYnT,KAClB,MAAO,IAAIgvF,eAAc77E,WAAYnT,IAAIugB,YAAavgB,IAAI8O,aAEvDgO,eA0SPm5E,aAAe,gBACfC,eAAiB,kBACjBt8E,WAAa,WACbu8E,QACAr+E,WAAY,UAEZs+E,UAAY,WACZC,QAAU,UACVC,cAAgB,GAAI18F,MAAKw8F,UAAW,aAAc,SAYlDr7E,gBAAmB,WACnB,QAASA,iBAAgBxH,gBAAiBC,eAAgB+iF,qBAAsBC,uBAAwBC,eACvE,SAAzBF,uBAAmCA,yBACR,SAA3BC,yBAAqCA,0BACzC,IAAIl+E,OAAQ1iC,IACZA,MAAK29B,gBAAkBA,gBACvB39B,KAAK49B,eAAiBA,eACtB59B,KAAK6gH,cAAgBA,cACrB7gH,KAAK8gH,gBAAkB,GAAIx4F,KAC3BtoB,KAAK+gH,cAAgB,GAAIz4F,KACzBtoB,KAAKghH,eAAiB,GAAI14F,KAC1BtoB,KAAKihH,YAAc,GAAI34F,KACvBtoB,KAAKkhH,cAAgB,GAAI54F,KACzBtoB,KAAKmhH,wCAA0C,GAAI74F,KACnDtoB,KAAKohH,0BACLT,qBAAqB/5G,QAAQ,SAAUy6G,IACnC,MAAO3+E,OAAM4+E,gCAAgC5+E,MAAMzC,gBAAgBohF,GAAG15G,SAAU05G,GAAG5/G,MAAO4/G,GAAGz4E,QAEjGg4E,uBAAuBh6G,QAAQ,SAAU26G,IAAM,MAAO7+E,OAAM8+E,kBAAkB9+E,MAAMzC,gBAAgBshF,GAAG55G,SAAU45G,GAAG9/G,MAAO8/G,GAAG16F,MAC9H7mB,KAAKmhH,wCAAwCzgG,IAAIw3B,mBAAmBr3C,WAAYgO,gBAAiBC,kBACjG9O,KAAKmhH,wCAAwCzgG,IAAIw3B,mBAAmBn3C,MAAOytC,aAC3ExuC,KAAKmhH,wCAAwCzgG,IAAIw3B,mBAAmB92C,UAAW6tC,iBAC/EjvC,KAAKmhH,wCAAwCzgG,IAAIw3B,mBAAmBC,YAAa9I,iBAAkBb,WAAY3/B,gBAAiBC,gBAAiBmgC,iBAwuBrJ,MAluBA9J,iBAAgB5kC,UAAU6jF,mBAI1B,SAAU8D,YACN,GAAqBu5B,cAAezhH,KAAK0hH,sBAAsBx5B,WAC/D,OAAOloF,MAAK49B,eAAe+jF,gBAAgBF,eAM/Ct8E,gBAAgB5kC,UAAUmiB,yBAI1B,SAAUpb,KACN,GAAqBs6G,WAAY5hH,KAAK49B,eAAeikF,kBAAqCv6G,IAAe,WAAsBA,IAAS,MACnHw6G,kBAAoB9hH,KAAK0hH,sBAAsBE,UAGpE,OAFA5hH,MAAK49B,eAAemkF,4BAA4BH,UAAUj6G,SAA6BL,IAAe,YACtGtH,KAAK49B,eAAeokF,eAAeF,kBAAmBF,WAC/CE,mBAQX38E,gBAAgB5kC,UAAU0hH,gBAM1B,SAAUzsG,UAAW/T,KAAMygH,gBACvB,MAAOliH,MAAK0hH,sBAAsB1hH,KAAK49B,eAAeikF,kBAAkBrsG,UAAW/T,KAAMygH,kBAO7F/8E,gBAAgB5kC,UAAU4hH,mBAK1B,SAAU3sG,UAAW/T,MACjB,GAAIihC,OAAQ1iC,IACZ,OAAOA,MAAK49B,eAAewkF,gBAAgB,WAAc,MAAO1/E,OAAMu/E,gBAAgBzsG,UAAW/T,SAMrG0jC,gBAAgB5kC,UAAUmhH,sBAI1B,SAAUrjF,QACN,GAAqBF,gBAAiBn+B,KAAK49B,eAAeoE,cAAc3D,OACxE,OAAIF,iBAAkBA,eAAeG,mBAAoB/2B,cAC9CvH,KAAK0hH,sBAAsBvjF,eAAeG,UAG1CD,QAOf8G,gBAAgB5kC,UAAUquD,YAI1B,SAAUzoD,MACN,GAAqByoD,aAAc5uD,KAAK8gH,gBAAgBrgG,IAAIta,KAC5D,KAAKyoD,YAAa,CACdA,cACA,IAAqByzD,eAAgBriH,KAAKsiH,gBAAgBn8G,MACrCo8G,WAAaviH,KAAKwiH,eAAer8G,KAAMk8G,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoBziH,KAAK4uD,YAAY2zD,WAC1D3zD,aAAY9nD,KAAK9E,MAAM4sD,YAAa6zD,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmB1iH,KAAK2iH,SAASx8G,KAAMk8G,cAA0B,YACjEzzD,YAAY9nD,KAAK9E,MAAM4sD,YAAa8zD,mBAEpCH,aAAeviH,KAAK29B,gBAAgBe,cAAcv4B,KAAKwB,WACvD3H,KAAK29B,gBAAgBe,cAAc6jF,WAAW56G,UAAW,CACzD,GAAqB42B,SAAUv+B,KAAK29B,gBAAgB8lD,eAAe8+B,WACnE,IAAIhkF,SAAWA,QAAQp4B,KAAM,CACzB,GAAqBy8G,yBAA6C5iH,KAAKmhH,wCAAwC1gG,IAAuB8d,QAAQp4B,KAAiB,aAC1I08G,0BAA4BD,wBAAwBtxF,KAAK,SAAUwxF,cAAgB,MAAOJ,kBAAiBpxF,KAAK,SAAU+1D,KAAO,MAAOy7B,cAAa3gH,SAASklF,QAC9Kw7B,4BACD7iH,KAAK+iH,YAAY5+G,YAAY,SAAWgC,KAAK1E,KAAO,OAAS0E,KAAKwB,SAAW,mBAAqBuwC,mBAAuC3Z,QAAQp4B,KAAkB,aAAK,oEACnK,gBAAkBy8G,wBAAwBj9G,IAAI,SAAUQ,MAAQ,MAAOA,MAAKjE,iBAAmB0D,KAAK,QAAU,6BAA8BO,OAI7JnG,KAAK8gH,gBAAgBpgG,IAAIva,KAAMyoD,YAAY5rC,OAAO,SAAUqkE,KAAO,QAASA,OAEhF,MAAOz4B,cAMXzpB,gBAAgB5kC,UAAUwuD,aAI1B,SAAU5oD,MACN,GAAIu8B,OAAQ1iC,KACS+uD,aAAe/uD,KAAK+gH,cAActgG,IAAIta,KAC3D,KAAK4oD,aAAc,CACf,GAAqBszD,eAAgBriH,KAAKsiH,gBAAgBn8G,KAC1D4oD,gBACA,IAAqBwzD,YAAaviH,KAAKwiH,eAAer8G,KAAMk8G,cAC5D,IAAIE,WAAY,CACZ,GAAqBS,sBAAuBhjH,KAAK+uD,aAAawzD,WAC9D/hH,QAAOw2B,KAAKgsF,sBAAsBp8G,QAAQ,SAAUq8G,YAC/B,aAAiBA,YAAcD,qBAAqBC,cAG7E,GAAqBC,WAAYb,cAAuB,WACxD7hH,QAAOw2B,KAAKksF,WAAWt8G,QAAQ,SAAUusB,UACrC,GAAqBgwF,UAAWD,UAAU/vF,UACrB/D,KAAO,SACvBxQ,KAAK,SAAUjG,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1DyqG,aACA,cAAiBjwF,WAClCiwF,WAAWt8G,KAAK9E,MAAMohH,WAA6B,aAAiBjwF,WAExE,aAAiBA,UAAYiwF,WACzBh0F,MAAQA,KAAiB,YACzBg0F,WAAWt8G,KAAK9E,MAAMohH,WAAY1gF,MAAMigF,SAASx8G,KAAMipB,KAAiB,eAGhFpvB,KAAK+gH,cAAcrgG,IAAIva,KAAM4oD,cAEjC,MAAOA,eAMX5pB,gBAAgB5kC,UAAU6nF,WAI1B,SAAUjiF,MACN,GAAIu8B,OAAQ1iC,IACZ,MAAMmG,eAAgBoB,eAElB,MADAvH,MAAK+iH,YAAY,GAAIx+G,OAAM,uBAAyBqyC,KAAKnxC,UAAUU,MAAQ,gCAAiCA,QAGhH,KACI,GAAqBk9G,cAAerjH,KAAKghH,eAAevgG,IAAIta,KAC5D,KAAKk9G,aAAc,CACf,GAAqBhB,eAAgBriH,KAAKsiH,gBAAgBn8G,MACrCo8G,WAAaviH,KAAKwiH,eAAer8G,KAAMk8G,eACvC3rE,QAAU2rE,cAAgBA,cAAuB,QAAI,KACrDiB,SAAW5sE,QAAUA,QAAkB,SAAI,IAChE,IAAI4sE,SAAU,CACV,GAAqB16E,MAAO,SAA8BhqB,KAAK,SAAUjG,GAAK,MAA0B,eAAnBA,EAAc,aAC9E4qG,kBAAsC36E,KAAkB,eACxD46E,sBAA0CxjH,KAAK2iH,SAASx8G,KAAMyiC,KAA0B,wBAC7Gy6E,iBACAE,kBAAkB38G,QAAQ,SAAU68G,aAAct+G,OAC9C,GAAqBu+G,iBACAC,UAAYjhF,MAAMkhF,YAAYz9G,KAAMs9G,aACrDE,YACAD,aAAa58G,KAAK68G,UACtB,IAAqBP,YAAaI,sBAAwBA,sBAAsBr+G,OAAS,IACrFi+G,aACAM,aAAa58G,KAAK9E,MAAM0hH,aAAcN;AAE1C,aAAiBt8G,KAAK48G,oBAGrBnB,cACLc,aAAerjH,KAAKooF,WAAWm6B,YAE9Bc,gBACDA,iBAEJrjH,KAAKghH,eAAetgG,IAAIva,KAAMk9G,cAElC,MAAOA,cAEX,MAAwB9pG,GAEpB,KADAksB,SAAQnhC,MAAM,kBAAoBsyC,KAAKnxC,UAAUU,MAAQ,eAAiBoT,GACpEA,IAOd4rB,gBAAgB5kC,UAAUsjH,aAI1B,SAAU19G,MACN,GAAqB29G,aAAc9jH,KAAKihH,YAAYxgG,IAAIta,KACxD,KAAK29G,YAAa,CACd,GAAqBzB,eAAgBriH,KAAKsiH,gBAAgBn8G,KAC1D29G,eACA,IAAqBvB,YAAaviH,KAAKwiH,eAAer8G,KAAMk8G,cAC5D,IAAIE,WAAY,CACZ,GAAqBwB,qBAAsB/jH,KAAK6jH,aAAatB,WAC7D/hH,QAAOw2B,KAAK+sF,qBAAqBn9G,QAAQ,SAAUq8G,YAC9B,YAAgBA,YAAcc,oBAAoBd,cAG3E,GAAqBe,WAAY3B,cAAuB,WACxD7hH,QAAOw2B,KAAKgtF,WAAWp9G,QAAQ,SAAUusB,UACrC,GAAqBgwF,UAAWa,UAAU7wF,UACrB8wF,SAAW,SAA8B3yF,KAAK,SAAU3Y,GAAK,MAA0B,UAAnBA,EAAc,YACvG,aAAgBwa,UAA6B,YAAgBA,WAAa8wF,WAE9EjkH,KAAKihH,YAAYvgG,IAAIva,KAAM29G,aAE/B,MAAOA,cAOX3+E,gBAAgB5kC,UAAUiiH,eAK1B,SAAUr8G,KAAMk8G,eACZ,GAAqBE,YAAaviH,KAAK4jH,YAAYz9G,KAAMk8G,cAAuB,QAChF,IAAIE,qBAAsBh7G,cACtB,MAAOg7G,aAQfp9E,gBAAgB5kC,UAAUoiB,iBAK1B,SAAUxc,KAAM+9G,YACN/9G,eAAgBoB,eAClBvH,KAAK+iH,YAAY,GAAIx+G,OAAM,6BAA+BqyC,KAAKnxC,UAAUU,MAAQ,gCAAiCA,KAEtH,KACI,QAASnG,KAAK6jH,aAAa19G,MAAM+9G,YAErC,MAAwB3qG,GAEpB,KADAksB,SAAQnhC,MAAM,kBAAoBsyC,KAAKnxC,UAAUU,MAAQ,eAAiBoT,GACpEA,IAQd4rB,gBAAgB5kC,UAAU+gH,gCAK1B,SAAUn7G,KAAMyiC,MACZ5oC,KAAKkhH,cAAcxgG,IAAIva,KAAM,SAAU5C,QAAS5B,MAAQ,MAAO,KAAKinC,KAAKe,KAAK3nC,MAAM4mC,MAAO,QAAQjgC,OAAOhH,WAO9GwjC,gBAAgB5kC,UAAUihH,kBAK1B,SAAUr7G,KAAM0gB,IACZ7mB,KAAKkhH,cAAcxgG,IAAIva,KAAM,SAAU5C,QAAS5B,MAAQ,MAAOklB,IAAG7kB,MAAMiC,OAAWtC,SAKvFwjC,gBAAgB5kC,UAAU6gH,wBAG1B,WACIphH,KAAKmkH,eAAiBnkH,KAAKiiH,gBAAgB5B,aAAc,kBACzDrgH,KAAKokH,OAASpkH,KAAKmiH,mBAAmB7B,eAAgB,UACtDtgH,KAAKs8E,6BACDt8E,KAAKiiH,gBAAgB5B,aAAc,gCACvCrgH,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,QAAS7wE,YACjFxvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,cAAehxE,kBACvFrvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,QAAS/wE,YACjFtvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,YAAa9wE,gBACrFvvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,UAAWjzE,cACnFptC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,YAAajxE,gBACrFpvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,aAAc7yE,iBACtFxtC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,gBAAiBtyE,oBACzF/tC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,mBAAoB3yE,uBAC5F1tC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,aAAcpyE,iBACtFjuC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,gBAAiBryE,oBACzFhuC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,SAAU3xE,aAClF1uC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,UAAWzxE,cACnF5uC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,QAAS7xE,YACjFxuC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,eAAgBxxE,mBACxF7uC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,gBAAiBtxE,oBACzF/uC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,aAAcxxG,iBACtF7O,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,aAAcvxG,iBACtF9O,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,YAAapxE,gBAErFjvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,QAAS7wE,YACjFxvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,QAAS/wE,YACjFtvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,YAAa9wE,gBACrFvvC,KAAKshH,gCAAgCthH,KAAKiiH,gBAAgB5B,aAAc,YAAajxE,iBAkBzFjK,gBAAgB5kC,UAAU0/B,gBAS1B,SAAU6W,gBAAiBr1C,KAAMi1C,SAC7B,MAAO12C,MAAK49B,eAAeqC,gBAAgB6W,gBAAiBr1C,KAAMi1C,UAQtEvR,gBAAgB5kC,UAAUwiH,YAM1B,SAAUz+G,MAAOf,QAASiH,MACtB,IAAIxK,KAAK6gH,cAIL,KAAMv8G,MAHNtE,MAAK6gH,cAAcv8G,MAAQf,SAAWA,QAAQoE,UAAa6C,OAYnE26B,gBAAgB5kC,UAAUqjH,YAM1B,SAAUrgH,QAASF,OACf,GAAqBghH,kBAAmBrkH,KAAK6gH,aAC7C7gH,MAAK6gH,cAAgB,SAAUv8G,MAAOud,WACtC,IAAqBpb,QAASzG,KAAK2iH,SAASp/G,QAASF,MAErD,OADArD,MAAK6gH,cAAgBwD,iBACd59G,QAQX0+B,gBAAgB5kC,UAAUoiH,SAM1B,SAAUp/G,QAASF,OAYf,QAASihH,mBAAkB/gH,QAASF,MAAOkhH,MAAOhvE,YAK9C,QAASivE,uBAAsB/C,cAC3B,GAAqBtjF,gBAAiB65E,KAAKp6E,eAAeoE,cAAcy/E,aACxE,OAAOtjF,gBAAiBA,eAAeG,SAAW,KAQtD,QAASmmF,cAAaC,eAAgBC,eAAgBhjH,MAClD,GAAIgjH,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC9D,GAAIC,QAAQnkG,IAAIikG,gBACZ,KAAM,IAAIngH,OAAM,0BAEpB,KACI,GAAqBsgH,SAAUF,eAAsB,KACrD,IAAIE,UAAqB,GAATN,OAAoC,SAAtBM,QAAQ3iF,YAAwB,CAC1D,GAAqBkmD,YAAau8B,eAA2B,WACxCG,SAAWH,eAAeG,QAC/CnjH,MAAOA,KAAKgE,IAAI,SAAU8zB,KAAO,MAAO6qF,mBAAkB/gH,QAASk2B,IAAK8qF,MAAQ,EAAGhvE,cAC9E5vC,IAAI,SAAU8zB,KAAO,MAAOiK,cAAajK,KAAOx1B,OAAYw1B,MAC7DqrF,UAAYA,SAAShjH,OAASH,KAAKG,QACnCH,KAAKmF,KAAK9E,MAAML,KAAMmjH,SAAS5hH,MAAMvB,KAAKG,QAAQ6D,IAAI,SAAUtC,OAAS,MAAOs/G,UAASt/G,UAE7FuhH,QAAQlkG,IAAIgkG,gBAAgB,EAE5B,KAAK,GADgBK,eAAgBC,aAAa5hD,QACxBr4D,EAAI,EAAGA,EAAIq9E,WAAWtmF,OAAQiJ,IACpDg6G,cAAcnlH,OAAOwoF,WAAWr9E,GAAIpJ,KAAKoJ,GAE7C,IACqBk6G,UADAC,SAAWC,KAEhC,KACIA,MAAQJ,cAAcK,OACtBH,SAAWX,kBAAkBI,eAAgBG,QAASN,MAAQ,EAAGhvE,YAErE,QACI4vE,MAAQD,SAEZ,MAAOD,WAGf,QACIL,QAAQtoF,OAAOooF,iBAGvB,MAAc,KAAVH,MAIOhE,OAEJoC,UAAWzgF,WAAY,QAAShxB,QAAS,8BAA+B3N,QAASmhH,iBAM5F,QAAS/B,UAAShuG,YACd,GAAIsvB,YAAYtvB,YACZ,MAAOA,WAEX,IAAIA,qBAAsBnR,OAAO,CAE7B,IAAK,GADgB6hH,aACZzjH,GAAK,EAAGyX,GAAK,WAAiCzX,GAAKyX,GAAGvX,OAAQF,KAAM,CACzE,GAAI6G,MAAO4Q,GAAGzX,GAEd,IAAI6G,MAA4B,WAApBA,KAAKy5B,WAAyB,CACtC,GAAqBojF,aAAc3C,SAASl6G,KAAKkM,WACjD,IAAInR,MAAMC,QAAQ6hH,aAAc,CAC5B,IAAK,GAAI9rG,IAAK,EAAG+rG,cAAgBD,YAAa9rG,GAAK+rG,cAAczjH,OAAQ0X,KAAM,CAC3E,GAAIgsG,YAAaD,cAAc/rG,GAC/B6rG,UAASv+G,KAAK0+G,YAElB,UAGR,GAAqBC,SAAU9C,SAASl6G,KACpCi7B,cAAa+hF,UAGjBJ,SAASv+G,KAAK2+G,SAElB,MAAOJ,UAEX,GAAI1wG,qBAAsBpN,cAAc,CAEpC,GAAIoN,aAAeqjG,KAAKmM,gBAAkBnM,KAAKkJ,cAAcptF,IAAInf,aAC7D4gC,WAAa,EACb,MAAO5gC,WAGP,IAAqB8sG,cAAe9sG,WACf+wG,iBAAmBlB,sBAAsB/C,aAC9D,OAAIiE,kBACOpB,kBAAkB7C,aAAciE,iBAAkBnB,MAAQ,EAAGhvE,YAG7DksE,aAInB,GAAI9sG,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqB8sG,cAAe,MACpC,QAAQ9sG,WAAuB,YAC3B,IAAK,QACD,GAAqBtB,MAAOsvG,SAAShuG,WAAiB,KACtD,IAAI+uB,aAAarwB,MACb,MAAOA,KACX,IAAqBC,OAAQqvG,SAAShuG,WAAkB,MACxD,IAAI+uB,aAAapwB,OACb,MAAOA,MACX,QAAQqB,WAAqB,UACzB,IAAK,KACD,MAAOtB,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KACD,GAAqBrE,WAAY0zG,SAAShuG,WAAsB,UAChE,OAAmBguG,UAAZ1zG,UAAqB0F,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqBgxG,SAAUhD,SAAShuG,WAAoB,QAC5D,IAAI+uB,aAAaiiF,SACb,MAAOA,QACX,QAAQhxG,WAAqB,UACzB,IAAK,IACD,MAAOgxG,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAAcjD,SAAShuG,WAAuB,YAC9CxP,MAAQw9G,SAAShuG,WAAkB,MACxD,OAAIixG,cAAe3hF,YAAY9+B,OACpBygH,YAAYzgH,OAChB,IACX,KAAK,SACD,GAAqB0gH,QAASlxG,WAAmB,OAC5BmxG,cAAgBviH,QAChBwiH,aAAepD,SAAShuG,WAAuB,WACpE,IAAIoxG,uBAAwBx+G,cAAc,CACtC,GAAqBmvC,SAAUqvE,aAAarvE,QAAQ/tC,OAAOk9G,OAC3DC,eACI9N,KAAK/3E,gBAAgB8lF,aAAap+G,SAAUo+G,aAAatkH,KAAMi1C,QACnE,IAAqBgvE,kBAAmBlB,sBAAsBsB,cAC9D,OAAIJ,kBACOpB,kBAAkBwB,cAAeJ,iBAAkBnB,MAAQ,EAAGhvE,YAG9DuwE,cAGf,MAAIC,eAAgB9hF,YAAY4hF,QACrBvB,kBAAkBwB,cAAeC,aAAaF,QAAStB,MAAQ,EAAGhvE,YACtE,IACX,KAAK,YAID,GAAqBwa,QAASp7C,WAAiB,KAC1BqxG,WAAab,MAAMj5G,QAAQ6jD,OAChD,IAAIi2D,YAAchB,aAAaiB,QAC3B,MAAOD,WAEX,MACJ,KAAK,QACD,MAAOziH,QACX,KAAK,WACD,MAAOA,QACX,KAAK,MACL,IAAK,OAGD,GADAk+G,aAAe6C,kBAAkB/gH,QAASoR,WAAuB,WAAG4vG,MAAQ,EAAoB,GAC5F9C,uBAAwBl6G,cAAc,CACtC,GAAIk6G,eAAiBzJ,KAAKmM,eAGtB,MAAO5gH,QAEX,IAAqB2iH,gBAAiBvxG,WAAsB,cACvC0Z,UAAY2pF,KAAKkJ,cAAczgG,IAAIghG,aACxD,IAAIpzF,UAAW,CACX,GAAqB1sB,MAAOukH,eACvBvgH,IAAI,SAAU8zB,KAAO,MAAO6qF,mBAAkB/gH,QAASk2B,IAAK8qF,MAAQ,EAAGhvE,cACvE5vC,IAAI,SAAU8zB,KAAO,MAAOiK,cAAajK,KAAOx1B,OAAYw1B,KACjE,OAAOpL,WAAU9qB,QAAS5B,MAI1B,GAAqBgjH,gBAAiBH,sBAAsB/C,aAC5D,OAAOgD,cAAahD,aAAckD,eAAgBuB,gBAG1D,MAAO3F,OACX,KAAK,QACD,GAAqBrvG,SAAU2yB,oBAAoBlvB,WASnD,OARIA,YAAiB,MACjBzD,QACIA,QAAU,eAAiByD,WAAiB,KAAI,GAAK,KAAOA,WAAsB,UAAI,GAAK,6BAC/FqjG,KAAK+K,YAAY5+E,gBAAgBjzB,QAAS3N,QAAQoE,SAAUgN,WAAiB,KAAGA,WAAsB,WAAIpR,UAG1Gy0G,KAAK+K,YAAY,GAAIx+G,OAAM2M,SAAU3N,SAElCg9G,MACX,KAAK,SACD,MAAO5rG,YAEf,MAAO,MAEX,MAAOmvB,cAAanvB,WAAY,SAAUtR,MAAO5B,MAC7C,GAAIi/G,cAAc5sF,IAAIryB,MAAO,CACzB,GAAIA,OAAS++G,WAAaC,UAAW9rG,YAAY,CAG7C,GAAqBiyE,SAAU+7B,SAAShuG,WAAWiyE,QACnD,IAAIA,UAAYoxB,KAAKoM,QAAUx9B,SAAWoxB,KAAK17B,6BAC3C,MAAOqmC,UAASt/G,OAGxB,MAAOihH,mBAAkB/gH,QAASF,MAAOkhH,MAAOhvE,WAAa,GAEjE,MAAOotE,UAASt/G,SAGxB,MAAOk9G,QAEX,IACI,MAAOoC,UAASt/G,OAEpB,MAAwBkW,GACpB,GAAqBm9B,SAAUnzC,QAAQmzC,QAAQ50C,OAAS,IAAMyB,QAAQmzC,QAAQ9wC,KAAK,KAAO,GACrEsL,QAAUqI,EAAErI,QAAU,sBAAwB3N,QAAQ9B,KAAOi1C,QAAU,OAASnzC,QAAQoE,QAC7G,IAAI4R,EAAEsI,SACF,KAAMsiB,iBAAgBjzB,QAASqI,EAAEsI,SAAUtI,EAAE6qB,KAAM7qB,EAAE8qB,OAEzD,MAAMlgC,aAAY+M,UAzS1B,GAAIwxB,OAAQ1iC,KACSg4G,KAAOh4G,KACPmlH,MAAQH,aAAa/kE,MACrB2kE,QAAU,GAAIt8F,KAySd69F,0BAA4B,SAAU5iH,QAASF,OAChE,IACI,MAAOihH,mBAAkB/gH,QAASF,MAAO,EAAG,GAEhD,MAAwBkW,GACpBmpB,MAAMqgF,YAAYxpG,EAAGhW,WAGRkD,OAASzG,KAAK6gH,cAAgBsF,0BAA0B5iH,QAASF,OAClFihH,kBAAkB/gH,QAASF,MAAO,EAAG,EACzC,KAAIqgC,aAAaj9B,QAGjB,MAAOA,SAMX0+B,gBAAgB5kC,UAAU+hH,gBAI1B,SAAUn8G,MACN,GAAqBg4B,gBAAiBn+B,KAAK49B,eAAeoE,cAAc77B,KACxE,OAAOg4B,iBAAkBA,eAAeG,SAAWH,eAAeG,UAC5D4D,WAAY,UAEfiD,mBAyEP6/E,aAAgB,WAChB,QAASA,iBAsBT,MAjBAA,cAAa5hD,MAGb,WACI,GAAqBub,SAAU,GAAIr2D,IACnC,QACI1oB,OAAQ,SAAU6B,KAAM4B,OAEpB,MADAs7E,SAAQj+D,IAAIjf,KAAM4B,OACXrD,MAEXolH,KAAM,WACF,MAAOzmC,SAAQud,KAAO,EAAI,GAAIkqB,gBAAeznC,SAAWqmC,aAAa/kE,SAIjF+kE,aAAaiB,WACbjB,aAAa/kE,OAAU/zC,QAAS,SAAUzK,MAAQ,MAAOujH,cAAaiB,UAC/DjB,gBAEPoB,eAAkB,SAAU37G,QAE5B,QAAS27G,gBAAez2D,UACpB,GAAIjtB,OAAQj4B,OAAO0iC,KAAKntC,OAASA,IAEjC,OADA0iC,OAAMitB,SAAWA,SACVjtB,MAaX,MAjBAziC,WAAUmmH,eAAgB37G,QAU1B27G,eAAe7lH,UAAU2L,QAIzB,SAAUzK,MACN,MAAOzB,MAAK2vD,SAAS77B,IAAIryB,MAAQzB,KAAK2vD,SAASlvC,IAAIhf,MAAQujH,aAAaiB,SAErEG,gBACTpB,cAoBEqB,qBAAwB,WACxB,QAASA,sBAAqBhoF,OAAQC,UAClCt+B,KAAKq+B,OAASA,OACdr+B,KAAKs+B,SAAWA,SAEpB,MAAO+nF,yBASPC,yBAA2B,EAS3BrhF,qBAAwB,WACxB,QAASA,sBAAqB1E,KAAMgmF,kBAAmB5oF,gBAAiBkjF,eACpE7gH,KAAKugC,KAAOA,KACZvgC,KAAKumH,kBAAoBA,kBACzBvmH,KAAK29B,gBAAkBA,gBACvB39B,KAAK6gH,cAAgBA,cACrB7gH,KAAKwmH,cAAgB,GAAIl+F,KACzBtoB,KAAKymH,gBAAkB,GAAIn+F,KAC3BtoB,KAAK0mH,kBAAoB,GAAI1iG,KAC7BhkB,KAAKi6G,SAAW,GAAI3xF,KACpBtoB,KAAK2mH,oBAAsB,GAAIr+F,KAC/BtoB,KAAK4mH,eAAiB,GAAIt+F,KAC1BtoB,KAAK6mH,2BAA6B,GAAIv+F,KAupB1C,MAjpBA2c,sBAAqB1kC,UAAUyhC,cAI/B,SAAUy/E,cACN,GAAIA,aAAa/qE,QAAQ50C,OAAS,EAC9B,MAA0B9B,MAAK8mH,sBAAsBrF,aAKzD,IAAqBsF,mBAAuC/mH,KAAKgnH,0BAA0BvF,aAC3F,IAAIsF,kBACA,MAAOA,kBAEX,IAAqBE,iBAAkBjnH,KAAKymH,gBAAgBhmG,IAAIghG,aAChE,OAAIwF,iBACOA,iBAKXjnH,KAAKknH,iBAAiBzF,aAAa95G,UACT3H,KAAKymH,gBAAgBhmG,IAAIghG,gBAqBvDx8E,qBAAqB1kC,UAAUm/G,YAU/B,SAAU+B,cACN,GAAIA,aAAa/qE,QAAQ50C,OAAQ,CAC7B,GAAqBs4G,YAAap6G,KAAKigC,gBAAgBwhF,aAAa95G,SAAU85G,aAAahgH,MACtE0lH,aAAennH,KAAK0/G,YAAYtF,WACrD,OAAO+M,cACHnnH,KAAKigC,gBAAgBknF,aAAax/G,SAAUw/G,aAAa1lH,KAAMggH,aAAa/qE,SAC5E,KAER,GAAqB0wE,oBAAqBnlG,6BAA6Bw/F,aAAa95G,SACpF,IAAIy/G,qBAAuB3F,aAAa95G,SAAU,CAC9C,GAAqB0/G,gBAAiBhlG,6BAA6Bo/F,aAAahgH,MAC3D24G,WAAap6G,KAAKigC,gBAAgBmnF,mBAAoBC,eAAgB5F,aAAa/qE,SACnFywE,aAAennH,KAAK0/G,YAAYtF,WACrD,OAAO+M,cACHnnH,KAAKigC,gBAAgBje,sBAAsBmlG,aAAax/G,UAAWwa,kBAAkBglG,aAAa1lH,MAAO24G,WAAW1jE,SACpH,KAER,GAAqBjwC,QAASzG,KAAK29B,gBAAgB+hF,YAAY+B,aAI/D,OAHKh7G,UACDA,OAA4BzG,KAAKi6G,SAASx5F,IAAIghG,eAE3Ch7G,QAcXw+B,qBAAqB1kC,UAAUohH,gBAO/B,SAAUF,cACN,MAAOzhH,MAAK2mH,oBAAoBlmG,IAAIghG,eAAiBA,aAAa95G,UAYtEs9B,qBAAqB1kC,UAAUk/G,aAM/B,SAAUgC,cAKN,GAAIjgG,gBAAgBigG,aAAa95G,UAC7B,MAAO,KAGX,KADA,GAAqBw2B,gBAAiBn+B,KAAKgiC,cAAcy/E,cAClDtjF,gBAAkBA,eAAeG,mBAAoB/2B,eACxD42B,eAAiBn+B,KAAKgiC,cAAc7D,eAAeG,SAEvD,OAAQH,iBAAkBA,eAAeG,UAAYH,eAAeG,SAASkhF,OAAU,MAW3Fv6E,qBAAqB1kC,UAAUq/G,qBAM/B,SAAU0H,iBAAkBC,oBACxB,MAAOvnH,MAAK6mH,2BAA2BpmG,IAAI6mG,mBACvCtnH,KAAKugC,KAAKq/E,qBAAqB0H,iBAAkBC,qBAOzDtiF,qBAAqB1kC,UAAUyhH,eAK/B,SAAUwF,aAAcC,cACpBD,aAAa7wE,kBACb8wE,aAAa9wE,kBACb32C,KAAKi6G,SAASv5F,IAAI8mG,aAAcC,eAOpCxiF,qBAAqB1kC,UAAUwhH,4BAK/B,SAAUlgG,SAAU4oB,YAChBzqC,KAAK6mH,2BAA2BnmG,IAAImB,SAAU4oB,aAalDxF,qBAAqB1kC,UAAUmnH,eAM/B,SAAU7lG,UACN7hB,KAAKwmH,cAAclqF,OAAOza,UAC1B7hB,KAAK0mH,kBAAkBpqF,OAAOza,SAC9B,IAAqBgc,SAAU79B,KAAK4mH,eAAenmG,IAAIoB,SACvD,IAAIgc,QAAS,CACT79B,KAAK4mH,eAAetqF,OAAOza,SAC3B,KAAK,GAAIjgB,IAAK,EAAG+lH,UAAY9pF,QAASj8B,GAAK+lH,UAAU7lH,OAAQF,KAAM,CAC/D,GAAIy8B,QAASspF,UAAU/lH,GACvB5B,MAAKymH,gBAAgBnqF,OAAO+B,QAC5Br+B,KAAKi6G,SAAS39E,OAAO+B,QACrBr+B,KAAK2mH,oBAAoBrqF,OAAO+B,WAU5C4G,qBAAqB1kC,UAAU6hH,gBAK/B,SAAU3uE,IACN,GAAqBm0E,UAAW5nH,KAAK6gH,aACrC7gH,MAAK6gH,cAAgB,YACrB,KACI,MAAOptE,MAEX,QACIzzC,KAAK6gH,cAAgB+G,WAO7B3iF,qBAAqB1kC,UAAUumH,sBAI/B,SAAUrF,cACN,GAAqB/qE,SAAU+qE,aAAa/qE,QACvBmxE,mBAAqB7nH,KAAKgiC,cAAchiC,KAAKigC,gBAAgBwhF,aAAa95G,SAAU85G,aAAahgH,MACtH,KAAKomH,mBACD,MAAO,KAEX,IAAqBC,cAAeD,mBAAmBvpF,QACvD,IAAIwpF,uBAAwBvgH,cACxB,MAAO,IAAI8+G,sBAAqB5E,aAAczhH,KAAKigC,gBAAgB6nF,aAAangH,SAAUmgH,aAAarmH,KAAMi1C,SAE5G,KAAIoxE,cAA4C,UAA5BA,aAAa5lF,WAKjC,CAED,IAAK,GADgB7+B,OAAQykH,aACH/8G,EAAI,EAAGA,EAAI2rC,QAAQ50C,QAAUuB,MAAO0H,IAC1D1H,MAAQA,MAAMqzC,QAAQ3rC,GAE1B,OAAO,IAAIs7G,sBAAqB5E,aAAcp+G,OAT9C,MAAIykH,cAAaC,SAA8B,IAAnBrxE,QAAQ50C,OACzB,GAAIukH,sBAAqB5E,aAAcqG,aAAaC,QAAQrxE,QAAQ,KAU5E,MAMXzR,qBAAqB1kC,UAAUymH,0BAI/B,SAAUvF,cACN,GAAqBljF,SAAUv+B,KAAK29B,gBAAgB8lD,eAAeg+B,aACnE,OAAOljF,SAAU,GAAI8nF,sBAAqB5E,aAAcljF,QAAQD,UAAY,MAmBhF2G,qBAAqB1kC,UAAU0/B,gBAS/B,SAAU6W,gBAAiBr1C,KAAMi1C,SAC7B,MAAO12C,MAAKumH,kBAAkB9lG,IAAIq2B,gBAAiBr1C,KAAMi1C,UAgB7DzR,qBAAqB1kC,UAAUshC,cAO/B,SAAUl6B,UACN,GAAqB22B,UAAWt+B,KAAKgoH,kBAAkBrgH,SACvD,SAAI22B,SAAmB,UACZ99B,OAAOw2B,KAAKsH,SAAmB,UAAGhN,KAAK,SAAU22F,aACpD,GAAqBroG,OAAQ0e,SAAmB,SAAE2pF,YAClD,OAAOroG,QAA8B,UAArBA,MAAMsiB,YAA0BtiB,MAAMwjG,cASlEn+E,qBAAqB1kC,UAAUwhC,aAI/B,SAAUp6B,UACN,GAAqBugH,gBAAiBloH,KAAK29B,gBAAgBoE,aAAap6B,SACxE,IAAIugH,eACA,MAAOA,eAIXloH,MAAKknH,iBAAiBv/G,SACtB,IAAqBwgH,mBAMrB,OALAnoH,MAAKymH,gBAAgB7/G,QAAQ,SAAUu3B,gBAC/BA,eAAeE,OAAO12B,WAAaA,UACnCwgH,gBAAgBrhH,KAAKq3B,eAAeE,UAGrC8pF,iBAMXljF,qBAAqB1kC,UAAU2mH,iBAI/B,SAAUv/G,UACN,GAAI+6B,OAAQ1iC,IACZ,KAAIA,KAAK0mH,kBAAkB5yF,IAAInsB,UAA/B,CAGA3H,KAAK0mH,kBAAkBrqF,IAAI10B,SAC3B,IAAqB8+G,oBACAnoF,SAAWt+B,KAAKgoH,kBAAkBrgH,SAMvD,IALI22B,SAAmB,UAGnBt+B,KAAK6mH,2BAA2BnmG,IAAI/Y,SAAU22B,SAAmB,UAEjEA,SAAmB,SAAG,CAEtB,GAAqB8pF,uBAAwB,GAAIpkG,KAAIxjB,OAAOw2B,KAAKsH,SAAmB,UAAG34B,IAAI2+B,qBACtE+jF,UAAY/pF,SAAkB,WACnD99B,QAAOw2B,KAAKsH,SAAmB,UAAG13B,QAAQ,SAAUqhH,aAChD,GAAqBhmF,YAAa3D,SAAmB,SAAE2pF,aAClCxmH,KAAO6iC,mBAAmB2jF,aAC1B5pF,OAASqE,MAAMzC,gBAAgBt4B,SAAUlG,MACzC6mH,OAASD,UAAUjiH,eAAe6hH,cAAgBI,UAAUJ,YACjF,IAAIK,OAAQ,CAIR,GAAqBC,gBAAiB7lF,MAAM8lF,cAAcF,OAAQ3gH,SAC7D4gH,gBAID7lF,MAAMikF,oBAAoBjmG,IAAI2d,OAAQkqF,gBAHtC7lF,MAAMqgF,YAAY,GAAIx+G,OAAM,wCAA0C+jH,OAAS,SAAW3gH,WAMlG8+G,gBAAgB3/G,KAAK47B,MAAM+lF,qBAAqBpqF,OAAQ12B,SAAUygH,sBAAuBnmF,eAIjG,GAAI3D,SAAkB,QAsClB,IAAK,GArCDoqF,SAAU,SAAUC,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAOhiH,QAAQ,SAAUiiH,cAClC,GAAqBzmG,WAEjBA,YADwB,gBAAjBymG,cACMA,aAGAA,aAAa1tB,GAE9B/4E,WAAakiB,mBAAmBliB,WAChC,IAAqB0mG,SAAU1mG,UACH,iBAAjBymG,gBACPC,QAAUxkF,mBAAmBukF,aAAapnH,MAE9C,IAAqBsnH,gBAAiBrmF,MAAM8lF,cAAcG,aAAa5kG,KAAMpc,SAC7E,IAAIohH,eAAgB,CAChB,GAAqBtB,cAAe/kF,MAAMzC,gBAAgB8oF,eAAgBD,SACrDtB,aAAe9kF,MAAMzC,gBAAgBt4B,SAAUya,WACpEqkG,iBAAgB3/G,KAAK47B,MAAMsmF,aAAaxB,aAAcC,sBAI7D,CAED,GAAqBsB,gBAAiBE,OAAOT,cAAcG,aAAa5kG,KAAMpc,SAC9E,IAAIohH,eAAgB,CAChB,GAAqBG,eAAgBD,OAAOlnF,aAAagnF,eACzDG,eAActiH,QAAQ,SAAU6gH,cAC5B,GAAqBD,cAAe9kF,MAAMzC,gBAAgBt4B,SAAU8/G,aAAahmH,KACjFglH,iBAAgB3/G,KAAK47B,MAAMsmF,aAAaxB,aAAcC,oBAKlEwB,OAASjpH,KACJ4B,GAAK,EAAGyX,GAAKilB,SAAkB,QAAG18B,GAAKyX,GAAGvX,OAAQF,KAAM,CAC7D,GAAI+mH,cAAetvG,GAAGzX,GACtB8mH,SAAQC,cAGhBlC,gBAAgB7/G,QAAQ,SAAUu3B,gBAAkB,MAAOuE,OAAM+jF,gBAAgB/lG,IAAIyd,eAAeE,OAAQF,kBAC5Gn+B,KAAK4mH,eAAelmG,IAAI/Y,SAAU8+G,gBAAgB9gH,IAAI,SAAUw4B,gBAAkB,MAAOA,gBAAeE,YAS5G4G,qBAAqB1kC,UAAUkoH,qBAO/B,SAAUjB,aAAc2B,aAAcC,oBAAqB9qF,UAMvD,GAAIt+B,KAAK29B,gBAAgBe,cAAc8oF,aAAa7/G,WAAa22B,UAClC,UAA3BA,SAAqB,WAAe,CACpC,GAAqB+qF,oBAAsBnnF,WAAY,QAASs9E,MAAOlhF,SAASkhF,MAChF,OAAO,IAAI6G,sBAAqBmB,aAAc6B,mBAElD,GAAqBrR,MAAOh4G,KACxBspH,qBAAwB,SAAU7+G,QAElC,QAAS6+G,wBACL,MAAkB,QAAX7+G,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,KAsD/D,MAxDAC,WAAUqpH,qBAAsB7+G,QAShC6+G,qBAAqB/oH,UAAUqD,eAK/B,SAAU+B,IAAK4jH,gBACX,GAAqBC,UAAW7jH,IAAgB,UAChD,IAAiB,aAAb6jH,SAAyB,CACzB,GAAqBC,QAASF,eAAeznH,MAC7CynH,gBAAeziH,KAAK9E,MAAMunH,eAAiB5jH,IAAgB,eAC3D,IAAqBc,QAASgE,OAAOlK,UAAUqD,eAAeupC,KAAKntC,KAAM2F,IAAK4jH,eAE9E,OADAA,gBAAeznH,OAAS2nH,OACjBhjH,OAEN,GAAiB,cAAb+iH,SA8BL,MAAO/+G,QAAOlK,UAAUqD,eAAeupC,KAAKntC,KAAM2F,IAAK4jH,eA7BvD,IAAqB5pH,QAASgG,IAAY,OACrBoqD,OAASpqD,IAAU,KAAI2+B,mBAAmB3+B,IAAU,MAAKA,IAAU,IACxF,KAAKoqD,OACD,MAAO,KAEX,IAAqBpoD,UAAW,MAChC,OAAIhI,SACAgI,SAA8BqwG,KAAKwQ,cAAc7oH,OAAQ6nH,aAAa7/G,UACjEA,SAMEqwG,KAAK/3E,gBAAgBt4B,SAAUooD,SAJ9B7tB,WAAY,QACZhxB,QAAS,qBAAuBvR,OAAS,gBAAkB6nH,aAAa7/G,SAAW,MAKtF4hH,eAAetmH,QAAQ8sD,SAAW,GAE9B7tB,WAAY,YAAazgC,KAAMsuD,QAGpCq5D,oBAAoBt1F,IAAIi8B,QACjBioD,KAAK/3E,gBAAgBkpF,aAAcp5D,QAD9C,QAWLu5D,sBACTh2E,kBACmBo2E,gBAAkBtmH,WAAWk7B,SAAU,GAAIgrF,yBAChE,OAAII,2BAA2BniH,cACpBvH,KAAKgpH,aAAaxB,aAAckC,iBAEpC,GAAIrD,sBAAqBmB,aAAckC,kBAOlDzkF,qBAAqB1kC,UAAUyoH,aAK/B,SAAUxB,aAAcC,cAWpB,MAVAD,cAAa7wE,kBACb8wE,aAAa9wE,kBACT32C,KAAK29B,gBAAgBe,cAAc8oF,aAAa7/G,WAChD3H,KAAK29B,gBAAgBe,cAAc+oF,aAAa9/G,WAKhD3H,KAAKi6G,SAASv5F,IAAI+mG,aAAcznH,KAAK0/G,YAAY8H,eAAiBA,cAE/D,GAAInB,sBAAqBmB,aAAcC,eAQlDxiF,qBAAqB1kC,UAAUwiH,YAM/B,SAAUz+G,MAAOf,QAASiH,MACtB,IAAIxK,KAAK6gH,cAIL,KAAMv8G,MAHNtE,MAAK6gH,cAAcv8G,MAAQf,SAAWA,QAAQoE,UAAa6C,OAUnEy6B,qBAAqB1kC,UAAUynH,kBAI/B,SAAUroH,QACN,GAAqBgqH,gBAAiB3pH,KAAKwmH,cAAc/lG,IAAI9gB,OAC7D,KAAKgqH,eAAgB,CACjB,GAAqBC,iBAAkB5pH,KAAKugC,KAAKspF,eAAelqH,OAChE,IAAIiqH,gBAAiB,CACjB,GAAqBE,eAAe,CACpCF,iBAAgBhjH,QAAQ,SAAUmjH,IAC1BA,GAAY,QAAID,eAChBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACMznF,WAAY,SAAUqzC,QAAS+wC,yBAA0B3mH,OAAQA,OAAQ2+B,cAE/EqrF,eAAwB,SAAKrD,yBAA0B,CACvD,GAAqB0D,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiBhqH,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqBgqH,eAAwB,QAAI,cAAgBrD,wBACxHtmH,MAAK+iH,YAAY,GAAIx+G,OAAMylH,eAE/BhqH,KAAKwmH,cAAc9lG,IAAI/gB,OAAQgqH,gBAEnC,MAAOA,iBAQX1kF,qBAAqB1kC,UAAUshH,kBAM/B,SAAUliH,OAAQyiB,WAAY8/F,gBAC1B,GAAqBv6G,UAAW3H,KAAKwoH,cAAc7oH,OAAQuiH,eAC3D,OAAKv6G,UAIE3H,KAAKigC,gBAAgBt4B,SAAUya,aAHlCpiB,KAAK+iH,YAAY,GAAIx+G,OAAM,4BAA8B5E,QAAUuiH,eAAiB,6DAA+D,MAC5IliH,KAAKigC,gBAAgB,SAAWtgC,OAAQyiB,cASvD6iB,qBAAqB1kC,UAAUioH,cAK/B,SAAU7oH,OAAQuiH,gBACd,IACI,MAAOliH,MAAKugC,KAAK0pF,qBAAqBtqH,OAAQuiH,gBAElD,MAAwB3oG,GACpBksB,QAAQnhC,MAAM,6BAA+B3E,OAAS,sBAAwBuiH,gBAC9EliH,KAAK+iH,YAAYxpG,EAAGtV,OAAWi+G,gBAEnC,MAAO,OAEJj9E,wBAkBPD,mBAAsB,WACtB,QAASA,oBAAmBzE,KAAMgmF,mBAC9BvmH,KAAKugC,KAAOA,KACZvgC,KAAKumH,kBAAoBA,kBACzBvmH,KAAKkqH,aAAe,GAAI5hG,KACxBtoB,KAAKmqH,gBAAkB,GAAI7hG,KAC3BtoB,KAAKi6G,SAAW,GAAI3xF,KAkIxB,MA5HA0c,oBAAmBzkC,UAAUm+B,cAI7B,SAAU/2B,UAIN,OAAQ3H,KAAKugC,KAAKY,aAAa7f,yBAAyB3Z,YAO5Dq9B,mBAAmBzkC,UAAU45G,kBAK7B,SAAUxyG,SAAUyiH,sBAChB,MAAOpqH,MAAKugC,KAAK45E,kBAAkBxyG,SAAUyiH,uBAOjDplF,mBAAmBzkC,UAAU06G,oBAK7B,SAAUp5F,SAAUwoG,sBAChB,MAAOrqH,MAAKugC,KAAK06E,oBAAoBp5F,SAAUwoG,uBAMnDrlF,mBAAmBzkC,UAAUkjF,eAI7B,SAAUg+B,cACNA,aAAa9qE,iBACb,IAAqBpY,SAAUv+B,KAAKkqH,aAAazpG,IAAIghG,aAKrD,OAJKljF,WACDv+B,KAAKsqH,iBAAiB7I,aAAa95G,UACnC42B,QAA6Bv+B,KAAKkqH,aAAazpG,IAAIghG,eAEhDljF,SAAW,MAMtByG,mBAAmBzkC,UAAUwhC,aAI7B,SAAUp6B,UACN,MAAI3H,MAAKsqH,iBAAiB3iH,UACfnE,MAAMugB,KAAK/jB,KAAKkqH,aAAalzF,QAAQhU,OAAO,SAAUqb,QAAU,MAAOA,QAAO12B,WAAaA,WAE/F,MAMXq9B,mBAAmBzkC,UAAUm/G,YAI7B,SAAU+B,cAEN,MADAA,cAAa9qE,kBACa32C,KAAKi6G,SAASx5F,IAAIghG,eAMhDz8E,mBAAmBzkC,UAAU69B,WAI7B,SAAUG,SAAWv+B,KAAKkqH,aAAaxpG,IAAI6d,QAAQF,OAAQE,UAK3DyG,mBAAmBzkC,UAAU+pH,iBAI7B,SAAU3iH,UACN,GAAI+6B,OAAQ1iC,KACSuqH,WAAavqH,KAAKmqH,gBAAgB1pG,IAAI9Y,SAC3D,IAAkB,MAAd4iH,WACA,MAAOA,WAEX,IAAqB3rF,MAAO,IAC5B,IAAI5+B,KAAK0+B,cAAc/2B,UAAW,CAC9B,GAAqB6iH,iBAAkB5oG,gBAAgBja,SACvD,KACIi3B,KAAO5+B,KAAKugC,KAAK+5E,YAAYkQ,iBAEjC,MAAwBjxG,GAEpB,KADAksB,SAAQnhC,MAAM,8BAAgCkmH,iBACxCjxG,GAKd,GAFAgxG,WAAqB,MAAR3rF,KACb5+B,KAAKmqH,gBAAgBzpG,IAAI/Y,SAAU4iH,YAC/B3rF,KAAM,CACN,GAAIvlB,IAAKwlB,qBAAqB7+B,KAAKumH,kBAAmBvmH,KAAM2H,SAAUi3B,MAAOo7E,UAAY3gG,GAAG2gG,UAAWC,SAAW5gG,GAAG4gG,QACrHD,WAAUpzG,QAAQ,SAAU23B,SAAW,MAAOmE,OAAMwnF,aAAaxpG,IAAI6d,QAAQF,OAAQE,WACrF07E,SAASrzG,QAAQ,SAAUqzG,UACvBv3E,MAAMu3E,SAASv5F,IAAIu5F,SAAS57E,OAAQqE,MAAM6jF,kBAAkB9lG,IAAIS,kBAAkBvZ,UAAWsyG,SAASA,aAG9G,MAAOsQ,aAEJvlF,sBAyEPylF,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBAEPC,mBAAsB,WACtB,QAASA,sBACL1qH,KAAK2qH,WAAa,GAAIriG,KAkE1B,MA7DAoiG,oBAAmBnqH,UAAUm+B,cAG7B,WAAc,OAAO,GAMrBgsF,mBAAmBnqH,UAAU45G,kBAI7B,SAAUt4F,UAAY,MAAOA,WAK7B6oG,mBAAmBnqH,UAAU06G,oBAI7B,SAAUp5F,UAAY,MAAOA,WAK7B6oG,mBAAmBnqH,UAAUkjF,eAI7B,SAAUp8E,WACN,MAAOrH,MAAK2qH,WAAWlqG,IAAIpZ,YAAc,MAM7CqjH,mBAAmBnqH,UAAUwhC,aAG7B,WAAc,UAKd2oF,mBAAmBnqH,UAAUm/G,YAI7B,SAAUr4G,WAAa,MAAOA,YAK9BqjH,mBAAmBnqH,UAAU69B,WAI7B,SAAUG,SAAWv+B,KAAK2qH,WAAWjqG,IAAI6d,QAAQF,OAAQE,UAElDmsF,sBAoCPpjF,kBAAqB,WACrB,QAASA,mBAAkB0B,OAAQ4hF,SAAUv1F,UAAWoS,MACpDznC,KAAKgpC,OAASA,OACdhpC,KAAK4qH,SAAWA,SAChB5qH,KAAKq1B,UAAYA,UACjBr1B,KAAKynC,KAAOA,KACZznC,KAAKN,WAWT,MANA4nC,mBAAkB/mC,UAAUsnC,yBAG5B,WACI,MAAO,IAAIP,mBAAkBtnC,KAAMA,KAAK4qH,SAAU5qH,KAAKq1B,UAAW,GAAI/M,OAEnEgf,qBAEPujF,YAAe,WACf,QAASA,aAAYxnH,OACjBrD,KAAKqD,MAAQA,MAEjB,MAAOwnH,gBAoDPtjF,qBAAwB,WACxB,QAASA,sBAAqB9kB,WAC1BziB,KAAKyiB,UAAYA,UA2jBrB,MArjBA8kB,sBAAqBhnC,UAAUuqH,SAI/B,SAAUnkH,KAAO,MAAOynB,4BAA2BznB,MAMnD4gC,qBAAqBhnC,UAAU6vF,oBAK/B,SAAUjrE,KAAMiF,KAKZ,MAJAA,KAAIqd,KAAK/mB,IAAIyE,KAAK1jB,KAAM0jB,KAAK9hB,MAAMoiB,gBAAgBzlB,KAAMoqB,MACrDjF,KAAKklE,YAAYnyD,aAAasH,WAC9BpV,IAAI1qB,QAAQoH,KAAKqe,KAAK1jB,MAEnB,MAOX8lC,qBAAqBhnC,UAAU8tF,kBAK/B,SAAU7oE,KAAM4E,KAGZ,IAFA,GAAqB/mB,OAAQmiB,KAAKniB,MAAMoiB,gBAAgBzlB,KAAMoqB,KACzC2gG,QAAU3gG,IACb,MAAX2gG,SAAiB,CACpB,GAAIA,QAAQtjF,KAAK3T,IAAItO,KAAK/jB,MAEtB,MADAspH,SAAQtjF,KAAK/mB,IAAI8E,KAAK/jB,KAAM4B,OACrBA,KAEX0nH,SAA6BA,QAAe,OAEhD,KAAM,IAAIxmH,OAAM,yBAA2BihB,KAAK/jB,OAOpD8lC,qBAAqBhnC,UAAU4tF,iBAK/B,SAAUxnF,IAAKyjB,KACX,GAAqB2/D,SAA6BpjF,IAAS,IAC3D,IAAmB,MAAfA,IAAIunF,QACJ,OAAQvnF,IAAIunF,SACR,IAAKL,YAAWE,MACZ,MAAO3jE,KAAIwgG,SAAS59E,SACxB,KAAK6gD,YAAWC,KACZ,MAAO1jE,KAAIwgG,QACf,KAAK/8B,YAAWG,WACZjE,QAAUihC,iBACV,MACJ,KAAKn9B,YAAWI,WACZlE,QAAUkhC,iBACV,MACJ,SACI,KAAM,IAAI1mH,OAAM,4BAA8BoC,IAAIunF,SAI9D,IADA,GAAqB68B,SAAU3gG,IACb,MAAX2gG,SAAiB,CACpB,GAAIA,QAAQtjF,KAAK3T,IAAIi2D,SACjB,MAAOghC,SAAQtjF,KAAKhnB,IAAIspE,QAE5BghC,SAA6BA,QAAe,OAEhD,KAAM,IAAIxmH,OAAM,yBAA2BwlF,UAO/CxiD,qBAAqBhnC,UAAUguF,kBAK/B,SAAU/oE,KAAM4E,KACZ,GAAqB7V,UAAWiR,KAAKjR,SAASkR,gBAAgBzlB,KAAMoqB,KAC/CjlB,MAAQqgB,KAAKrgB,MAAMsgB,gBAAgBzlB,KAAMoqB,KACzC/mB,MAAQmiB,KAAKniB,MAAMoiB,gBAAgBzlB,KAAMoqB,IAE9D,OADA7V,UAASpP,OAAS9B,MACXA,OAOXkkC,qBAAqBhnC,UAAUkuF,mBAK/B,SAAUjpE,KAAM4E,KACZ,GAAqB7V,UAAWiR,KAAKjR,SAASkR,gBAAgBzlB,KAAMoqB,KAC/C/mB,MAAQmiB,KAAKniB,MAAMoiB,gBAAgBzlB,KAAMoqB,IAE9D,OADA7V,UAASiR,KAAK/jB,MAAQ4B,MACfA,OAOXkkC,qBAAqBhnC,UAAUuuF,sBAK/B,SAAUtpE,KAAM4E,KACZ,GAEqB3jB,QAFA8N,SAAWiR,KAAKjR,SAASkR,gBAAgBzlB,KAAMoqB,KAC/CzoB,KAAO3B,KAAK2xF,oBAAoBnsE,KAAK7jB,KAAMyoB,IAEhE,IAAoB,MAAhB5E,KAAK0oE,QACL,OAAQ1oE,KAAK0oE,SACT,IAAKQ,eAAcC,YACfloF,OAAS8N,SAAS5L,OAAO3G,MAAMuS,SAAU5S,KACzC,MACJ,KAAK+sF,eAAcE,oBACfnoF,OAAS8N,SAAS22G,WAAY3yD,KAAM52D,KAAK,IACzC,MACJ,KAAK+sF,eAAcG,KACfpoF,OAAS8N,SAASo1B,KAAK3nC,MAAMuS,SAAU5S,KACvC,MACJ,SACI,KAAM,IAAI4C,OAAM,0BAA4BihB,KAAK0oE,aAIzDznF,QAAS8N,SAA4BiR,KAAU,MAAGxjB,MAAMuS,SAAU5S,KAEtE,OAAO8E,SAOX8gC,qBAAqBhnC,UAAUwuF,wBAK/B,SAAU5pE,KAAMiF,KACZ,GAAqBzoB,MAAO3B,KAAK2xF,oBAAoBxsE,KAAKxjB,KAAMyoB,KAC3C+gG,OAAShmG,KAAK0B,EACnC,IAAIskG,iBAAkBxlG,cAAewlG,OAAOj9B,UAAYL,WAAWE,MAE/D,MADA3jE,KAAIwgG,SAASvqH,YAAYE,UAAUF,YAAY2B,MAAMooB,IAAIwgG,SAAUjpH,MAC5D,IAGP,IAAqB2oC,OAAQnlB,KAAK0B,GAAGpB,gBAAgBzlB,KAAMoqB,IAC3D,OAAOkgB,OAAMtoC,MAAM,KAAML,OAQjC4lC,qBAAqBhnC,UAAUgwF,gBAK/B,SAAUprE,KAAMiF,KACZ,MAAO,IAAIygG,aAAY1lG,KAAK9hB,MAAMoiB,gBAAgBzlB,KAAMoqB,OAO5Dmd,qBAAqBhnC,UAAUswF,sBAK/B,SAAU1rE,KAAMiF,KACZ,GAAqB8uE,OAAQpxD,mBAAmB3iB,KAAMiF,IAAKpqB,KAK3D,OAJAoqB,KAAIqd,KAAK/mB,IAAIyE,KAAK1jB,KAAMy3F,OACpB/zE,KAAKklE,YAAYnyD,aAAasH,WAC9BpV,IAAI1qB,QAAQoH,KAAKqe,KAAK1jB,MAEnB,MAOX8lC,qBAAqBhnC,UAAU+vF,oBAK/B,SAAUnrE,KAAMiF,KACZ,MAAOjF,MAAKK,KAAKC,gBAAgBzlB,KAAMoqB,MAO3Cmd,qBAAqBhnC,UAAUwwF,YAK/B,SAAU5rE,KAAMiF,KACZ,GAAqBnb,WAAYkW,KAAKlW,UAAUwW,gBAAgBzlB,KAAMoqB,IACtE,OAAInb,WACOjP,KAAK6kB,mBAAmBM,KAAKwnE,SAAUviE,KAEvB,MAAlBjF,KAAKynE,UACH5sF,KAAK6kB,mBAAmBM,KAAKynE,UAAWxiE,KAE5C,MAOXmd,qBAAqBhnC,UAAU8wF,kBAK/B,SAAUlsE,KAAMiF,KACZ,IACI,MAAOpqB,MAAK6kB,mBAAmBM,KAAKgsE,UAAW/mE,KAEnD,MAAwB7Q,GACpB,GAAqBquB,UAAWxd,IAAIyd,0BAGpC,OAFAD,UAASH,KAAK/mB,IAAIsqG,kBAAmBzxG,GACrCquB,SAASH,KAAK/mB,IAAIuqG,kBAAmB1xG,EAAEpB,OAChCnY,KAAK6kB,mBAAmBM,KAAKisE,WAAYxpD,YAQxDL,qBAAqBhnC,UAAUgxF,eAK/B,SAAUpsE,KAAMiF,KACZ,KAAMjF,MAAK7gB,MAAMmhB,gBAAgBzlB,KAAMoqB,MAO3Cmd,qBAAqBhnC,UAAU0wF,iBAK/B,SAAU9rE,KAAM5hB,SAAW,MAAO,OAMlCgkC,qBAAqBhnC,UAAU0uF,qBAK/B,SAAUtoF,IAAKyjB,KACX,GAAqBzoB,MAAO3B,KAAK2xF,oBAAoBhrF,IAAIhF,KAAMyoB,KAC1C8uE,MAAQvyF,IAAIqoF,UAAUvpE,gBAAgBzlB,KAAMoqB,IACjE,OAAO,KAAK8uE,MAAMvvD,KAAK3nC,MAAMk3F,OAAQ,QAAQvwF,OAAOhH,SAOxD4lC,qBAAqBhnC,UAAU2uF,iBAK/B,SAAUvoF,IAAKyjB,KAAO,MAAOzjB,KAAItD,OAMjCkkC,qBAAqBhnC,UAAU4uF,kBAK/B,SAAUxoF,IAAKyjB,KACX,MAAOpqB,MAAKyiB,UAAUC,yBAAyB/b,IAAItD,QAOvDkkC,qBAAqBhnC,UAAU8uF,qBAK/B,SAAU1oF,IAAKyjB,KACX,MAAIzjB,KAAIsI,UAAUwW,gBAAgBzlB,KAAMoqB,KAC7BzjB,IAAIgmF,SAASlnE,gBAAgBzlB,KAAMoqB,KAEpB,MAAjBzjB,IAAIimF,UACFjmF,IAAIimF,UAAUnnE,gBAAgBzlB,KAAMoqB,KAExC;EAOXmd,qBAAqBhnC,UAAU+uF,aAK/B,SAAU3oF,IAAKyjB,KACX,OAAQzjB,IAAIsI,UAAUwW,gBAAgBzlB,KAAMoqB,MAOhDmd,qBAAqBhnC,UAAUgvF,uBAK/B,SAAU5oF,IAAKyjB,KACX,MAAOzjB,KAAIsI,UAAUwW,gBAAgBzlB,KAAMoqB,MAO/Cmd,qBAAqBhnC,UAAUivF,cAK/B,SAAU7oF,IAAKyjB,KACX,MAAOzjB,KAAItD,MAAMoiB,gBAAgBzlB,KAAMoqB,MAO3Cmd,qBAAqBhnC,UAAUkvF,kBAK/B,SAAU9oF,IAAKyjB,KACX,GAAqBme,YAAa5hC,IAAImgB,OAAOnhB,IAAI,SAAU6iC,OAAS,MAAOA,OAAM/mC,MACjF,OAAOwnC,YAAWV,WAAY5hC,IAAIuyB,WAAY9O,IAAKpqB,OAOvDunC,qBAAqBhnC,UAAU8vF,yBAK/B,SAAUlrE,KAAMiF,KACZ,GAAqBme,YAAapjB,KAAK2B,OAAOnhB,IAAI,SAAU6iC,OAAS,MAAOA,OAAM/mC,MAKlF,OAJA2oB,KAAIqd,KAAK/mB,IAAIyE,KAAK1jB,KAAMwnC,WAAWV,WAAYpjB,KAAK+T,WAAY9O,IAAKpqB,OACjEmlB,KAAKklE,YAAYnyD,aAAasH,WAC9BpV,IAAI1qB,QAAQoH,KAAKqe,KAAK1jB,MAEnB,MAOX8lC,qBAAqBhnC,UAAUqvF,wBAK/B,SAAUjpF,IAAKyjB,KACX,GAAIsY,OAAQ1iC,KACS2vF,IAAM,WAAc,MAAOhpF,KAAIgpF,IAAIlqE,gBAAgBid,MAAOtY,MAC1D2iE,IAAM,WAAc,MAAOpmF,KAAIomF,IAAItnE,gBAAgBid,MAAOtY,KAC/E,QAAQzjB,IAAIqyD,UACR,IAAKoyB,gBAAeC,OAChB,MAAOsE,QAAS5C,KACpB,KAAK3B,gBAAeG,UAChB,MAAOoE,SAAU5C,KACrB,KAAK3B,gBAAeE,UAChB,MAAOqE,QAAS5C,KACpB,KAAK3B,gBAAeI,aAChB,MAAOmE,SAAU5C,KACrB,KAAK3B,gBAAeU,IAChB,MAAO6D,QAAS5C,KACpB,KAAK3B,gBAAeW,GAChB,MAAO4D,QAAS5C,KACpB,KAAK3B,gBAAeM,KAChB,MAAOiE,OAAQ5C,KACnB,KAAK3B,gBAAeK,MAChB,MAAOkE,OAAQ5C,KACnB,KAAK3B,gBAAeO,OAChB,MAAOgE,OAAQ5C,KACnB,KAAK3B,gBAAeQ,SAChB,MAAO+D,OAAQ5C,KACnB,KAAK3B,gBAAeS,OAChB,MAAO8D,OAAQ5C,KACnB,KAAK3B,gBAAeY,MAChB,MAAO2D,OAAQ5C,KACnB,KAAK3B,gBAAea,YAChB,MAAO0D,QAAS5C,KACpB,KAAK3B,gBAAec,OAChB,MAAOyD,OAAQ5C,KACnB,KAAK3B,gBAAee,aAChB,MAAOwD,QAAS5C,KACpB,SACI,KAAM,IAAIxoF,OAAM,oBAAsBoC,IAAIqyD,YAQtDzxB,qBAAqBhnC,UAAUsvF,kBAK/B,SAAUlpF,IAAKyjB,KACX,GAAqB3jB,QACA8N,SAAW5N,IAAI4N,SAASkR,gBAAgBzlB,KAAMoqB,IAEnE,OADA3jB,QAAS8N,SAAS5N,IAAIlF,OAQ1B8lC,qBAAqBhnC,UAAUuvF,iBAK/B,SAAUnpF,IAAKyjB,KACX,GAAqB7V,UAAW5N,IAAI4N,SAASkR,gBAAgBzlB,KAAMoqB,KAC9CgF,KAAOzoB,IAAIxB,MAAMsgB,gBAAgBzlB,KAAMoqB,IAC5D,OAAO7V,UAAS6a,OAOpBmY,qBAAqBhnC,UAAUwvF,sBAK/B,SAAUppF,IAAKyjB,KACX,MAAOpqB,MAAK2xF,oBAAoBhrF,IAAIswB,QAAS7M,MAOjDmd,qBAAqBhnC,UAAUyvF,oBAK/B,SAAUrpF,IAAKyjB,KACX,GAAIsY,OAAQ1iC,KACSyG,SAErB,OADAE,KAAIswB,QAAQrwB,QAAQ,SAAUgZ,OAAS,MAAOnZ,QAAOmZ,MAAM3L,KAAO2L,MAAMvc,MAAMoiB,gBAAgBid,MAAOtY,OAC9F3jB,QAOX8gC,qBAAqBhnC,UAAU2vF,eAK/B,SAAUvpF,IAAKpD,SACX,GAAqBxB,QAAS/B,KAAK2xF,oBAAoBhrF,IAAIsR,MAAO1U,QAClE,OAAOxB,QAAOA,OAAOD,OAAS,IAOlCylC,qBAAqBhnC,UAAUoxF,oBAK/B,SAAUn+E,YAAa4W,KACnB,GAAIsY,OAAQ1iC,IACZ,OAAOwT,aAAY7N,IAAI,SAAU6f,MAAQ,MAAOA,MAAKC,gBAAgBid,MAAOtY,QAOhFmd,qBAAqBhnC,UAAUskB,mBAK/B,SAAUqU,WAAY9O,KAClB,IAAK,GAAqBrf,GAAI,EAAGA,EAAImuB,WAAWp3B,OAAQiJ,IAAK,CACzD,GAAqBoa,MAAO+T,WAAWnuB,GAClB/G,IAAMmhB,KAAKG,eAAetlB,KAAMoqB,IACrD,IAAIpmB,cAAe6mH,aACf,MAAO7mH,KAGf,MAAO,OAEJujC,wBAkBPyjF,kBAAoB,QACpBC,kBAAoB,QAgBpBG,yBAA4B,SAAU3gH,QAEtC,QAAS2gH,4BACL,MAAO3gH,QAAO0iC,KAAKntC,MAAM,IAAUA,KAuRvC,MAzRAC,WAAUmrH,yBAA0B3gH,QASpC2gH,yBAAyB7qH,UAAUswF,sBAKnC,SAAU1rE,KAAMiF,KACZ,GAAIsY,OAAQ1iC,IAWZ,OAVAoqB,KAAI6uE,UAAU9zE,MACdnlB,KAAK67F,uBAAuB12E,KAAMiF,KACf,MAAfjF,KAAK6jB,SACL5e,IAAIquE,MAAMtzE,KAAMA,KAAK1jB,KAAO,+BAC5B0jB,KAAK6jB,OAAOvjB,gBAAgBzlB,KAAMoqB,KAClCA,IAAImuE,QAAQpzE,KAAM,iBAEtBA,KAAK+iB,QAAQthC,QAAQ,SAAUuhC,QAAU,MAAOzF,OAAMo5D,kBAAkB32E,KAAMgjB,OAAQ/d,OACtFjF,KAAKkjB,QAAQzhC,QAAQ,SAAU0hC,QAAU,MAAO5F,OAAMq5D,kBAAkB52E,KAAMmjB,OAAQle,OACtFA,IAAI+uE,WACG,MAOXiyB,yBAAyB7qH,UAAUs7F,uBAKnC,SAAU12E,KAAMiF,KACZA,IAAIquE,MAAMtzE,KAAM,YAAcA,KAAK1jB,KAAO,KACZ,MAA1B0jB,KAAKwjB,mBACL3oC,KAAKg8F,aAAa72E,KAAKwjB,kBAAkB7hB,OAAQsD,KAErDA,IAAImuE,QAAQpzE,KAAM,OAClBiF,IAAI2uE,YAC0B,MAA1B5zE,KAAKwjB,mBACDxjB,KAAKwjB,kBAAkB5hB,KAAKjlB,OAAS,IACrCsoB,IAAImuE,QAAQpzE,KAAM,oBAClBnlB,KAAK6kB,mBAAmBM,KAAKwjB,kBAAkB5hB,KAAMqD,MAG7DA,IAAI4uE,YACJ5uE,IAAImuE,QAAQpzE,KAAM,MAQtBimG,yBAAyB7qH,UAAUu7F,kBAMnC,SAAU32E,KAAMgjB,OAAQ/d,KACpBA,IAAImuE,QAAQpzE,KAAM,yBAA2BA,KAAK1jB,KAAO,gBAAkB0mC,OAAO1mC,KAAO,0BACzF2oB,IAAI2uE,YACA5wD,OAAOphB,KAAKjlB,OAAS,IACrBsoB,IAAImuE,QAAQpzE,KAAM,oBAClBnlB,KAAK6kB,mBAAmBsjB,OAAOphB,KAAMqD,MAEzCA,IAAI4uE,YACJ5uE,IAAImuE,QAAQpzE,KAAM,SAQtBimG,yBAAyB7qH,UAAUw7F,kBAMnC,SAAU52E,KAAMmjB,OAAQle,KACpBA,IAAIquE,MAAMtzE,KAAMA,KAAK1jB,KAAO,cAAgB6mC,OAAO7mC,KAAO,gBAC1DzB,KAAKg8F,aAAa1zD,OAAOxhB,OAAQsD,KACjCA,IAAImuE,QAAQpzE,KAAM,OAClBiF,IAAI2uE,YACAzwD,OAAOvhB,KAAKjlB,OAAS,IACrBsoB,IAAImuE,QAAQpzE,KAAM,oBAClBnlB,KAAK6kB,mBAAmByjB,OAAOvhB,KAAMqD,MAEzCA,IAAI4uE,YACJ5uE,IAAImuE,QAAQpzE,KAAM,OAOtBimG,yBAAyB7qH,UAAU4tF,iBAKnC,SAAUxnF,IAAKyjB,KACX,GAAIzjB,IAAIunF,UAAYL,WAAWC,KAC3B1jE,IAAIquE,MAAM9xF,IAAK,YAEd,CAAA,GAAIA,IAAIunF,UAAYL,WAAWE,MAChC,KAAM,IAAIxpF,OAAM,+EAGhBkG,QAAOlK,UAAU4tF,iBAAiBhhD,KAAKntC,KAAM2G,IAAKyjB,KAEtD,MAAO,OAOXghG,yBAAyB7qH,UAAU6vF,oBAKnC,SAAUjrE,KAAMiF,KAIZ,MAHAA,KAAIquE,MAAMtzE,KAAM,OAASA,KAAK1jB,KAAO,OACrC0jB,KAAK9hB,MAAMoiB,gBAAgBzlB,KAAMoqB,KACjCA,IAAImuE,QAAQpzE,KAAM,KACX,MAOXimG,yBAAyB7qH,UAAUivF,cAKnC,SAAU7oF,IAAKyjB,KAEX,MADAzjB,KAAItD,MAAMoiB,gBAAgBzlB,KAAMoqB,KACzB,MAOXghG,yBAAyB7qH,UAAUwuF,wBAKnC,SAAUvpE,KAAM4E,KACZ,GAAqB+gG,QAAS3lG,KAAKqB,EAanC,OAZIskG,kBAAkBxlG,cAAewlG,OAAOj9B,UAAYL,WAAWE,OACzB3jE,IAAiB,aAAS,OAAE3E,gBAAgBzlB,KAAMoqB,KACxFA,IAAIquE,MAAMjzE,KAAM,cACZA,KAAK7jB,KAAKG,OAAS,IACnBsoB,IAAIquE,MAAMjzE,KAAM,MAChBxlB,KAAK2xF,oBAAoBnsE,KAAK7jB,KAAMyoB,IAAK,MAE7CA,IAAIquE,MAAMjzE,KAAM,MAGhB/a,OAAOlK,UAAUwuF,wBAAwB5hD,KAAKntC,KAAMwlB,KAAM4E,KAEvD,MAOXghG,yBAAyB7qH,UAAUkvF,kBAKnC,SAAU9oF,IAAKyjB,KAQX,MAPAA,KAAIquE,MAAM9xF,IAAK,aACf3G,KAAKg8F,aAAar1F,IAAImgB,OAAQsD,KAC9BA,IAAImuE,QAAQ5xF,IAAK,OACjByjB,IAAI2uE,YACJ/4F,KAAK6kB,mBAAmBle,IAAIuyB,WAAY9O,KACxCA,IAAI4uE,YACJ5uE,IAAIquE,MAAM9xF,IAAK,KACR,MAOXykH,yBAAyB7qH,UAAU8vF,yBAKnC,SAAUlrE,KAAMiF,KAQZ,MAPAA,KAAIquE,MAAMtzE,KAAM,YAAcA,KAAK1jB,KAAO,KAC1CzB,KAAKg8F,aAAa72E,KAAK2B,OAAQsD,KAC/BA,IAAImuE,QAAQpzE,KAAM,OAClBiF,IAAI2uE,YACJ/4F,KAAK6kB,mBAAmBM,KAAK+T,WAAY9O,KACzCA,IAAI4uE,YACJ5uE,IAAImuE,QAAQpzE,KAAM,KACX,MAOXimG,yBAAyB7qH,UAAU8wF,kBAKnC,SAAUlsE,KAAMiF,KACZA,IAAImuE,QAAQpzE,KAAM,SAClBiF,IAAI2uE,YACJ/4F,KAAK6kB,mBAAmBM,KAAKgsE,UAAW/mE,KACxCA,IAAI4uE,YACJ5uE,IAAImuE,QAAQpzE,KAAM,YAAc0yE,kBAAkBp2F,KAAO,OACzD2oB,IAAI2uE,WACJ,IAAqB3H,aAAgC0G,kBAAkBp3E,IAAIm3E,kBAAkBzoE,KAAK,UAAU6I,WAAW,MAC/GC,aAAaC,SACZxvB,OAAOwc,KAAKisE,WAIrB,OAHApxF,MAAK6kB,mBAAmBusE,WAAYhnE,KACpCA,IAAI4uE,YACJ5uE,IAAImuE,QAAQpzE,KAAM,KACX,MAOXimG,yBAAyB7qH,UAAUy7F,aAKnC,SAAUl1E,OAAQsD,KACdpqB,KAAKu6F,gBAAgB,SAAU/xD,OAAS,MAAOpe,KAAIquE,MAAM,KAAMjwD,MAAM/mC,OAAUqlB,OAAQsD,IAAK,MAMhGghG,yBAAyB7qH,UAAU85F,qBAInC,SAAU/xD,QACN,GAAqB7mC,KACrB,QAAQ6mC,QACJ,IAAKomD,eAAcC,YACfltF,KAAO,QACP,MACJ,KAAKitF,eAAcE,oBACfntF,KAAO,WACP,MACJ,KAAKitF,eAAcG,KACfptF,KAAO,MACP,MACJ,SACI,KAAM,IAAI8C,OAAM,2BAA6B+jC,QAErD,MAAO7mC,OAEJ2pH,0BACTnxB,wBAsDEhwD,kBAAqB,SAAUx/B,QAE/B,QAASw/B,mBAAkBxnB,WACvB,GAAIigB,OAAQj4B,OAAO0iC,KAAKntC,OAASA,IAKjC,OAJA0iC,OAAMjgB,UAAYA,UAClBigB,MAAM2oF,iBACN3oF,MAAM4oF,kBACN5oF,MAAM6oF,qBACC7oF,MAiGX,MAxGAziC,WAAUgqC,kBAAmBx/B,QAa7Bw/B,kBAAkB1pC,UAAU2pC,iBAI5B,SAAU9f,KACN,GAAqBjF,MAAO,GAAI6G,iBAAgB,GAAI1F,gBAAetmB,KAAKurH,kBAAkB5lH,IAAI,SAAU6lH,WAAa,MAAO,IAAIjlG,iBAAgBilG,UAAW9lG,SAAS8lG,aAAY,OAChLrmG,MAAKG,eAAetlB,KAAMoqB,MAK9B6f,kBAAkB1pC,UAAU4pC,QAG5B,WAEI,IAAK,GADgB1jC,WACKsE,EAAI,EAAGA,EAAI/K,KAAKqrH,cAAcvpH,OAAQiJ,IAC5DtE,OAAOzG,KAAKqrH,cAActgH,IAAM/K,KAAKsrH,eAAevgH,EAExD,OAAOtE,SAOXwjC,kBAAkB1pC,UAAU4uF,kBAK5B,SAAUxoF,IAAKyjB,KACX,GAAqB/mB,OAAQrD,KAAKyiB,UAAUC,yBAAyB/b,IAAItD,OACpDgG,GAAKrJ,KAAKsrH,eAAeroH,QAAQI,MACtD,IAAIgG,MAAO,EAAI,CACXA,GAAKrJ,KAAKsrH,eAAexpH,OACzB9B,KAAKsrH,eAAexkH,KAAKzD,MACzB,IAAqB0sD,QAAS5oD,gBAAiBE,UAAWhE,SAAY,KACtErD,MAAKqrH,cAAcvkH,KAAK,OAASipD,OAAS,IAAM1mD,IAGpD,MADA+gB,KAAIquE,MAAM9xF,IAAK3G,KAAKqrH,cAAchiH,KAC3B,MAOX4gC,kBAAkB1pC,UAAU6vF,oBAK5B,SAAUjrE,KAAMiF,KAIZ,MAHIjF,MAAKklE,YAAYnyD,aAAasH,WAC9Bx/B,KAAKurH,kBAAkBzkH,KAAKqe,KAAK1jB,MAE9BgJ,OAAOlK,UAAU6vF,oBAAoBjjD,KAAKntC,KAAMmlB,KAAMiF,MAOjE6f,kBAAkB1pC,UAAU8vF,yBAK5B,SAAUlrE,KAAMiF,KAIZ,MAHIjF,MAAKklE,YAAYnyD,aAAasH,WAC9Bx/B,KAAKurH,kBAAkBzkH,KAAKqe,KAAK1jB,MAE9BgJ,OAAOlK,UAAU8vF,yBAAyBljD,KAAKntC,KAAMmlB,KAAMiF,MAOtE6f,kBAAkB1pC,UAAUswF,sBAK5B,SAAU1rE,KAAMiF,KAIZ,MAHIjF,MAAKklE,YAAYnyD,aAAasH,WAC9Bx/B,KAAKurH,kBAAkBzkH,KAAKqe,KAAK1jB,MAE9BgJ,OAAOlK,UAAUswF,sBAAsB1jD,KAAKntC,KAAMmlB,KAAMiF,MAE5D6f,mBACTmhF,0BA0BEK,YAAe,WACf,QAASA,aAAYnQ,kBAAmBC,gBAAiBC,eAAgBC,cAAeE,kBAAmBh6B,iBAAkBjzB,WAAYg9D,gBAAiB9vC,SAAU+vC,2BAChK3rH,KAAKs7G,kBAAoBA,kBACzBt7G,KAAKu7G,gBAAkBA,gBACvBv7G,KAAKw7G,eAAiBA,eACtBx7G,KAAKy7G,cAAgBA,cACrBz7G,KAAK27G,kBAAoBA,kBACzB37G,KAAK2hF,iBAAmBA,iBACxB3hF,KAAK0uD,WAAaA,WAClB1uD,KAAK0rH,gBAAkBA,gBACvB1rH,KAAK47E,SAAWA,SAChB57E,KAAK2rH,0BAA4BA,0BACjC3rH,KAAK4rH,uBAAyB,GAAItjG,KAClCtoB,KAAK6rH,2BAA6B,GAAIvjG,KACtCtoB,KAAK8rH,+BAAiC,GAAIxjG,KAC1CtoB,KAAK+rH,uBAAyB,GAAIzjG,KAClCtoB,KAAKgsH,uBAAyB,EA4alC,MAtaAP,aAAYlrH,UAAU0rH,kBAItB,SAAU9mC,YACN,MAAO5xC,WAAUC,WAAWxzC,KAAKksH,4BAA4B/mC,YAAY,KAM7EsmC,YAAYlrH,UAAU4rH,mBAItB,SAAUhnC,YACN,MAAOvxC,SAAQ1nC,QAAQlM,KAAKksH,4BAA4B/mC,YAAY,KAMxEsmC,YAAYlrH,UAAU6rH,kCAItB,SAAUjnC,YACN,MAAO5xC,WAAUC,WAAWxzC,KAAKqsH,+BAA+BlnC,YAAY,KAMhFsmC,YAAYlrH,UAAU+rH,mCAItB,SAAUnnC,YACN,MAAOvxC,SAAQ1nC,QAAQlM,KAAKqsH,+BAA+BlnC,YAAY,KAM3EsmC,YAAYlrH,UAAUgsH,sBAItB,SAAUjjG,WACNtpB,KAAK47E,SAASvL,KAAK,iGACnB,IAAqB73B,UAAWx4C,KAAK4rH,uBAAuBnrG,IAAI6I,UAChE,KAAKkvB,SACD,KAAM,IAAIj0C,OAAM,iBAAmBkB,UAAU6jB,WAAa,wBAE9D,OAA0BkvB,UAASxvC,SAAkB,SAAE6vC,oBAM3D4yE,YAAYlrH,UAAU6iF,oBAItB,SAAU95D,WACN,GAAqBiV,SAAUv+B,KAAKs7G,kBAAkBv2B,oBAAoBz7D,UAC1E,OAAyBiV,SAAwB,kBAMrDktF,YAAYlrH,UAAUisH,iBAItB,SAAUxS,WACN,GAAIt3E,OAAQ1iC,IACZA,MAAKssD,aACLjiB,iBAAiB2vE,WAAWpzG,QAAQ,SAAU23B,SAC1CmE,MAAMi/C,iBAAiBvjD,YAAaC,OAAQE,QAAQp4B,KAAKkB,UAAWi3B,SAAU,KAAMn4B,KAAMo4B,aAOlGktF,YAAYlrH,UAAUksH,cAItB,SAAUnlH,KAAO,QAAStH,KAAK2hF,iBAAiB8B,eAAen8E,MAK/DmkH,YAAYlrH,UAAUmsH,sBAItB,SAAUC,KACN,GAAIjqF,OAAQ1iC,IACZ,OAAO2sH,KAAIhnH,IAAI,SAAUqhF,KAAO,MAAOA,KAAI3/E,YAAc2b,OAAO,SAAU1b,KAAO,OAAQo7B,MAAM+pF,cAAcnlH,QAOjHmkH,YAAYlrH,UAAU2rH,4BAKtB,SAAU/mC,WAAYrB,QAClB,GAAIphD,OAAQ1iC,IACZ,OAAOuzC,WAAUjtC,KAAKtG,KAAK4sH,aAAaznC,WAAYrB,QAAS,WAEzD,MADAphD,OAAMmqF,mBAAmB1nC,WAAY,MAC9BziD,MAAMw7E,eAAe/4B,eAQpCsmC,YAAYlrH,UAAU8rH,+BAKtB,SAAUlnC,WAAYrB,QAClB,GAAIphD,OAAQ1iC,IACZ,OAAOuzC,WAAUjtC,KAAKtG,KAAK4sH,aAAaznC,WAAYrB,QAAS,WACzD,GAAqBgpC,sBAErB,OADApqF,OAAMmqF,mBAAmB1nC,WAAY2nC,qBAEjCC,gBAAiBrqF,MAAMw7E,eAAe/4B,YACtC2nC,mBAAoBA,uBAShCrB,YAAYlrH,UAAUqsH,aAKtB,SAAUI,WAAYlpC,QAClB,GAAIphD,OAAQ1iC,KACSslF,WACA2nC,aAAkCjtH,KAAKs7G,kBAAkB/4E,oBAAoByqF,WAelG,OAZAhtH,MAAK0sH,sBAAsBO,aAAazrF,iBAAiBC,SAAS76B,QAAQ,SAAUsmH,gBAEhF,GAAqBxjH,YAAgCg5B,MAAM44E,kBAAkB/4E,oBAAoB2qF,eACjGxqF,OAAMgqF,sBAAsBhjH,WAAWu5B,oBAAoBr8B,QAAQ,SAAUU,KACzE,GAAqBi+E,SAAU7iD,MAAM44E,kBAAkBz3B,sBAAsBn6E,WAAWvD,KAAKkB,UAAWC,IAAKw8E,OACzGyB,UACAD,QAAQx+E,KAAKy+E,WAGrB7iD,MAAMgqF,sBAAsBhjH,WAAWw5B,eAClCt8B,QAAQ,SAAUU,KAAO,MAAOo7B,OAAM44E,kBAAkBtzB,sBAAsB1gF,SAEhFisC,UAAUG,IAAI4xC,UAMzBmmC,YAAYlrH,UAAU29G,eAItB,SAAU/4B,YACN,GAAqB4nC,iBAAqC/sH,KAAK+rH,uBAAuBtrG,IAAI0kE,WAC1F,KAAK4nC,gBAAiB,CAClB,GAAqBrjH,YAAgC1J,KAAKs7G,kBAAkB/4E,oBAAoB4iD,YAE3EgQ,eAAiBn1F,KAAK2rH,0BAA0BjiH,WAAWvD,KAAKkB,WAChE+3B,UAAYmL,sBACZ3K,cAAgB5/B,KAAK27G,kBAAkB/lB,QAAQx2D,UAAW11B,WAAYyrF,eAC3F43B,iBAAkB/sH,KAAKmtH,gBAAgB1jH,eAAeC,YAAa01B,UAAUlG,YAAY0G,cAAc81D,oBACvG11F,KAAK+rH,uBAAuBrrG,IAAIhX,WAAWvD,KAAKkB,UAAW0lH,iBAE/D,MAAOA,kBAWXtB,YAAYlrH,UAAUssH,mBAMtB,SAAUG,WAAYI,uBAClB,GAAI1qF,OAAQ1iC,KACSuhC,SAA8BvhC,KAAKs7G,kBAAkB/4E,oBAAoByqF,YACzEK,qBAAuB,GAAI/kG,KAC3BglG,UAAY,GAAItpG,KAChBupG,gBAAkBvtH,KAAK0sH,sBAAsBnrF,SAASC,iBAAiBC,QAC5F8rF,iBAAgB3mH,QAAQ,SAAU4mH,UAC9B,GAAqBC,iBAAqC/qF,MAAM44E,kBAAkB/4E,oBAAoBirF,SACtG9qF,OAAMgqF,sBAAsBe,gBAAgBxqF,oBAAoBr8B,QAAQ,SAAU8mH,QAC9EL,qBAAqB3sG,IAAIgtG,OAAQD,gBACjC,IAAqBlrC,SAAU7/C,MAAM44E,kBAAkBx2B,qBAAqB4oC,OAC5E,IAAInrC,QAAQ75D,cACR4kG,UAAUjxF,IAAIqG,MAAMirF,wBAAwBprC,QAASkrC,kBACjDL,uBAAuB,CACvB,GAAqB50E,UAAW9V,MAAMkrF,4BAA4BrrC,QAAQp8E,KAAKkB,UAAWomH,gBAC1FH,WAAUjxF,IAAImc,UACd40E,sBAAsBtmH,KAAuBy7E,QAAwB,uBAKrFgrC,gBAAgB3mH,QAAQ,SAAU4mH,UAC9B,GAAqBC,iBAAqC/qF,MAAM44E,kBAAkB/4E,oBAAoBirF,SACtG9qF,OAAMgqF,sBAAsBe,gBAAgBxqF,oBAAoBr8B,QAAQ,SAAU8mH,QAC9E,GAAqBnrC,SAAU7/C,MAAM44E,kBAAkBx2B,qBAAqB4oC,OACxEnrC,SAAQ75D,aACR65D,QAAQ71D,gBAAgB9lB,QAAQ,SAAUinH,oBACtC,GAAqBnkH,YAAgC2jH,qBAAqB5sG,IAAIotG,mBAAmB3yE,cACjGoyE,WAAUjxF,IAAIqG,MAAMkrF,4BAA4BC,mBAAmB3yE,cAAexxC,iBAI9F+jH,gBAAgB/gG,gBAAgB9lB,QAAQ,SAAUinH,oBAC9C,IAAKnrF,MAAM+pF,cAAcoB,mBAAmB3yE,cAAc7zC,WAAY,CAClE,GAAqBqC,YAAgC2jH,qBAAqB5sG,IAAIotG,mBAAmB3yE,cACjGoyE,WAAUjxF,IAAIqG,MAAMkrF,4BAA4BC,mBAAmB3yE,cAAexxC,kBAI9F4jH,UAAU1mH,QAAQ,SAAU4xC,UAAY,MAAO9V,OAAMorF,iBAAiBt1E,aAM1EizE,YAAYlrH,UAAUisD,cAItB,SAAUrmD,MACNnG,KAAK+rH,uBAAuBzvF,OAAOn2B,MACnCnG,KAAKs7G,kBAAkB9uD,cAAcrmD,MACrCnG,KAAK6rH,2BAA2BvvF,OAAOn2B,KACvC,IAAqB4nH,kBAAmB/tH,KAAK4rH,uBAAuBnrG,IAAIta,KACpE4nH,mBACA/tH,KAAK4rH,uBAAuBtvF,OAAOn2B,OAM3CslH,YAAYlrH,UAAU+rD,WAGtB,WACItsD,KAAKs7G,kBAAkBhvD,aACvBtsD,KAAK4rH,uBAAuBr/D,QAC5BvsD,KAAK6rH,2BAA2Bt/D,QAChCvsD,KAAK+rH,uBAAuBx/D,SAOhCk/D,YAAYlrH,UAAUqtH,4BAKtB,SAAU/lH,SAAU05B,UAChB,IAAKA,SACD,KAAM,IAAIh9B,OAAM,aAAekB,UAAUoC,UAAY,qFAEzD,IAAqBkmH,kBAAmB/tH,KAAK6rH,2BAA2BprG,IAAI5Y,SAC5E,KAAKkmH,iBAAkB,CACnB,GAAqB/kH,UAAWhJ,KAAKs7G,kBAAkBx2B,qBAAqBj9E,SAC5EuiC,iBAAgBphC,SAChB,IAAqB+1G,UAAW/+G,KAAKs7G,kBAAkB53B,yBAAyB16E,SAA6BA,SAA0B,iBAAEglH,eACzID,kBACI,GAAIE,oBAAiB,GAAMjlH,SAAS7C,KAAM44G,SAAUx9E,UAAWv4B,SAAS7C,OAC5EnG,KAAK6rH,2BAA2BnrG,IAAI7Y,SAAUkmH,kBAElD,MAAOA,mBAOXtC,YAAYlrH,UAAUotH,wBAKtB,SAAU3kH,SAAUu4B,UAChB,GAAqBwsF,kBAAmB/tH,KAAK4rH,uBAAuBnrG,IAAIzX,SAAS7C,KAAKkB,UAMtF,OALK0mH,oBACD3jF,gBAAgBphC,UAChB+kH,iBAAmB,GAAIE,oBAAiB,GAAOjlH,SAAS7C,KAAM6C,SAAUu4B,SAAUA,SAASC,iBAAiBrZ,YAC5GnoB,KAAK4rH,uBAAuBlrG,IAAI1X,SAAS7C,KAAKkB,UAAW0mH,mBAEtDA,kBAMXtC,YAAYlrH,UAAUutH,iBAItB,SAAUt1E,UACN,GAAI9V,OAAQ1iC,IACZ,KAAIw4C,SAAS01E,WAAb,CAGA,GAAqBllH,UAAWwvC,SAASxvC,SACpBmlH,+BAAiC,GAAI7lG,KACrC8lG,cAAgB7jF,sBAChB4zE,oBAAsBn+G,KAAKw7G,eAAejY,iBAAiB6qB,cAAeplH,SAC7FA,UAAkB,SAAE2vC,oBAAoB/xC,QAAQ,SAAUw3G,gBACxD,GAAqBgC,oBAAqB19E,MAAM84E,eAAe/X,cAAcl5D,sBAAuBvhC,SAAUo1G,eAC9G+P,gCAA+BztG,IAAuB09F,eAAyB,UAAGgC,sBAEtFpgH,KAAKquH,4BAA4BlQ,oBAAqBgQ,+BACtD,IACI90G,KADyBm/B,SAASjX,SAASC,iBAAiBG,MAAMh8B,IAAI,SAAUu/F,MAAQ,MAAOxiE,OAAM44E,kBAAkBxzB,eAAeod,KAAK79F,aACtIrH,KAAKy9G,eAAez0G,SAAUwvC,SAASjX,SAAUiX,SAASrwB,aAAau1F,eAAiBrkG,GAAGm/B,SAAUuwD,UAAY1vF,GAAGsoB,MACxG/B,cAAgB5/B,KAAKy7G,cAAclY,iBAAiB6qB,cAAeplH,SAAU00G,eAAgBh4F,SAASy4F,oBAAoB/a,WAAY2F,WACtIulB,WAAatuH,KAAKmtH,gBAAgBxjH,eAAe6uC,SAASjX,SAASp7B,KAAMqyC,SAASxvC,UAAWolH,cAAcl1F,YAC3Gq1F,UAAYD,WAAW1uF,cAAcuzE,cACrC95D,aAAei1E,WAAW1uF,cAAcwzE,gBAC7D56D,UAASg2E,SAASD,UAAWl1E,gBAQjCoyE,YAAYlrH,UAAUk9G,eAMtB,SAAUz0G,SAAUu4B,SAAU69E,sBAC1B,GAAI18E,OAAQ1iC,KAES+lC,oBAAyC/8B,SAAkB,SAAE+8B,oBAC7D5d,WAAai3F,qBAAqBz5G,IAAI,SAAUkjB,KAAO,MAAO6Z,OAAM44E,kBAAkBv2B,oBAAoBl8D,IAAIxhB,aAC9Gs6B,MAAQJ,SAASC,iBAAiBG,MAAMh8B,IAAI,SAAUu/F,MAAQ,MAAOxiE,OAAM44E,kBAAkBxzB,eAAeod,KAAK79F,YACtI,OAAOrH,MAAKu7G,gBAAgBhoF,MAAMvqB,SAAgDA,SAAkB,SAAU,QAAGmf,WAAYwZ,MAAOJ,SAAS2Y,QAASpxC,kBAAkBy4B,SAASp7B,KAAM6C,SAA6BA,SAAkB,UAAI+8B,sBAO9O0lF,YAAYlrH,UAAU8tH,4BAKtB,SAAU5nH,OAAQ0nH,gCACd,GAAIzrF,OAAQ1iC,IACZyG,QAAOs5B,aAAan5B,QAAQ,SAAUukB,IAAKpgB,GACvC,GAAqB0jH,qBAAyCN,+BAA+B1tG,IAAI0K,IAAI3V,WAChFk5G,gBAAkBhsF,MAAMisF,mCAAmCF,oBAAqBN,+BACrGhjG,KAAI6U,SAAS0uF,oBAQrBjD,YAAYlrH,UAAUouH,mCAKtB,SAAUloH,OAAQ0nH,gCAEd,MADAnuH,MAAKquH,4BAA4B5nH,OAAQ0nH,gCAClCnuH,KAAKmtH,gBAAgBhkH,uBAAuB1C,OAAO2C,KAAMpJ,KAAKgsH,0BAA2BvlH,OAAO24B,UAAUlG,YAAYzyB,OAAO28F,YAOxIqoB,YAAYlrH,UAAU4sH,gBAKtB,SAAUhkF,aAAcjQ,YACpB,MAAKl5B,MAAK0rH,gBAAgB5lF,OAIfiE,cAAcZ,aAAcjQ,WAAYl5B,KAAK0uD,WAAY1uD,KAAK0rH,gBAAgBj1E,YAH9EpP,oBAAoBnO,WAAYl5B,KAAK0uD,aAM7C+8D,eAEPwC,iBAAoB,WACpB,QAASA,kBAAiB/0E,OAAQrxC,SAAUmB,SAAUu4B,SAAUpZ,YAC5DnoB,KAAKk5C,OAASA,OACdl5C,KAAK6H,SAAWA,SAChB7H,KAAKgJ,SAAWA,SAChBhJ,KAAKuhC,SAAWA,SAChBvhC,KAAKmoB,WAAaA,WAClBnoB,KAAK4uH,WAA8B,KACnC5uH,KAAKkuH,YAAa,EAoBtB,MAbAD,kBAAiB1tH,UAAUiuH,SAK3B,SAAUD,UAAWl1E,cACjBr5C,KAAK4uH,WAAaL,UACCvuH,KAAKgJ,SAA2B,kBAAE45E,YAAY2rC,UACjE,KAAK,GAAqBn/F,QAAQiqB,cACXr5C,KAAKgJ,SAAsB,aAAEomB,MAAQiqB,aAAajqB,KAEzEpvB,MAAKkuH,YAAa,GAEfD,oBA8CPY,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAwBPhkF,YAAe,WACf,QAASikF,iBAAgBC,gBACE,SAAnBA,iBAA6BA,eAAiB,MAClD/uH,KAAK+uH,eAAiBA,eAgD1B,MA3BAD,iBAAgBvuH,UAAU2L,QAW1B,SAAUN,QAAS/C,KACf,GAAqBmmH,aAAcnmH,GACpB,OAAX+C,SAAmBA,QAAQ9J,OAAS,IACpCktH,YAAcriF,YAAY/gC,QAASojH,aAEvC,IAAqBC,eAAgBjkF,OAAOgkF,aACvBliH,OAAS9M,KAAK+uH,cACnC,IAAc,MAAVjiH,QAAmC,MAAjBmiH,eACuB,WAAzCA,cAAchkF,gBAAgBC,QAAsB,CACpD,GAAqB1gC,MAAOykH,cAAchkF,gBAAgBoB,KAG1D,OAFAv/B,QAASA,OAAOvK,QAAQ,OAAQ,IAChCiI,KAAOA,KAAKjI,QAAQ,OAAQ,IACrBuK,OAAS,IAAMtC,KAE1B,MAAOwkH,cAEJF,mBAmHPljF,SAAW,GAAIv2B,QAAO,4HActB41B,iBACAC,OAAQ,EACRoB,SAAU,EACVC,OAAQ,EACRC,KAAM,EACNH,KAAM,EACNI,UAAW,EACXC,SAAU,EAEdzB,iBAAgBA,gBAAgBC,QAAU,SAC1CD,gBAAgBA,gBAAgBqB,UAAY,WAC5CrB,gBAAgBA,gBAAgBsB,QAAU,SAC1CtB,gBAAgBA,gBAAgBuB,MAAQ,OACxCvB,gBAAgBA,gBAAgBoB,MAAQ,OACxCpB,gBAAgBA,gBAAgBwB,WAAa,YAC7CxB,gBAAgBA,gBAAgByB,UAAY,UAiH5C,IAAIwiF,gBAAkB,WAClB,QAASA,mBAWT,MALAA,gBAAe3uH,UAAUkgB,IAIzB,SAAU5X,KAAO,MAAO,IACjBqmH,kBAuBPC,UAAa,WACb,QAASA,WAAU5uF,KAAMC,qBAAsBo9E,cAAen9E,kBAC1DzgC,KAAKugC,KAAOA,KACZvgC,KAAKwgC,qBAAuBA,qBAC5BxgC,KAAK49G,cAAgBA,cACrB59G,KAAKygC,iBAAmBA,iBAiE5B,MA3DA0uF,WAAU5uH,UAAU2d,QAIpB,SAAU89F,WACN,GAAIt5E,OAAQ1iC,KACRqZ,GAAKwnB,4BAA4Bm7E,UAAWh8G,KAAKugC,KAAMvgC,KAAKwgC,qBAAsBxgC,KAAKygC,kBAAmBC,MAAQrnB,GAAGqnB,MAAOY,UAAYjoB,GAAGioB,SAC/I,OAAOsS,SACFF,IAAIpS,UAAU37B,IAAI,SAAU47B,UAC7B,MAAOmB,OAAMjC,iBAAiB4kD,qCAAqC9jD,SAASp7B,KAAKkB,WAAW,MAE3Ff,KAAK,WACN,GAAqByrB,UAerB,IAdA2O,MAAM95B,QAAQ,SAAUs2B,MACpB,GAAqB2gF,aACrB3gF,MAAK/U,WAAWvhB,QAAQ,SAAUsoD,eAC9B,GAAqBqzB,SAAU7/C,MAAMjC,iBAAiBqkD,qBAAqB51B,cACvEqzB,UAAWA,QAAQ75D,aACnBm1F,UAAU/2G,KAAKy7E,WAGvBs7B,UAAUj3G,QAAQ,SAAUoC,UACxB,GAAqBwyE,MAA6CxyE,SAAkB,SAAW,SAC1EkN,oBAAsB6lC,oBAAoBC,UAA6BhzC,SAAkB,SAAE8vC,cAChH/mB,QAAOjrB,KAAK9E,MAAM+vB,OAA2B2Q,MAAMk7E,cAAclF,mBAAmBl9B,KAAMt+C,KAAKrb,SAAU3L,0BAG7G6b,OAAOjwB,OACP,KAAM,IAAIyC,OAAMwtB,OAAOpsB,IAAI,SAAU4T,GAAK,MAAOA,GAAExT,aAAeH,KAAK,MAE3E,OAAO88B,OAAMk7E,iBAQrBuR,UAAU1uH,OAKV,SAAU8/B,KAAMm0C,QACZ,GAAqBtvC,YAAa,GAAIE,YACjBR,YAAcN,qBAAqBjE,MACnCzB,YAAc,GAAIiG,mBAClBpH,gBAAkB,GAAIqH,oBAAmBzE,KAAMzB,aAC/C0B,qBAAuB,GAAIyE,sBAAqB1E,KAAMzB,YAAanB,iBACnEuH,gBAAkB,GAAIC,iBAAgBxH,gBAAiB6C,sBACvDrrB,OAAS,GAAIuwB,iBAAiBC,qBAAsBC,kBAAkBC,SAAUC,QAAQ,IACxFE,WAAa,GAAIC,sBAAsBxlB,IAAK,SAAU5X,KAAO,MAAO03B,MAAK2F,aAAar9B,OAAWi8B,YAAaM,WAAYjwB,QAC1HmxB,sBAAwB,GAAIC,0BAC5B56B,SAAW,GAAI+6B,yBAAwBvxB,OAAQiwB,WAAY,GAAIuB,kBAAiBzB,iBAAkB,GAAI0B,mBAAkB1B,iBAAkB,GAAI2B,cAAa3B,iBAAkBvH,gBAAiB2I,sBAAuBN,WAAYP,QAAS3G,YAAaoG,iBAEvP04E,cAAgB,GAAInF,eAAcrzE,iBAAoBsvC,QACtD06C,UAAY,GAAID,WAAU5uF,KAAMC,qBAAsBo9E,cAAejyG,SAC1F,QAASyjH,UAAWA,UAAWlqF,gBAAiBA,kBAE7CiqF,YAGXzvH,SAAQ0zC,KAAOA,KACf1zC,QAAQgmC,eAAiBA,eACzBhmC,QAAQqH,2BAA6BA,2BACrCrH,QAAQotB,YAAcA,YACtBptB,QAAQ+rH,YAAcA,YACtB/rH,QAAQknC,kBAAoBA,kBAC5BlnC,QAAQmnC,aAAeA,aACvBnnC,QAAQinC,iBAAmBA,iBAC3BjnC,QAAQyW,6BAA+BA,6BACvCzW,QAAQq8C,oBAAsBA,oBAC9Br8C,QAAQ0nC,iBAAmBA,iBAC3B1nC,QAAQknB,cAAgBA,cACxBlnB,QAAQ0rF,eAAiBA,eACzB1rF,QAAQstF,mBAAqBA,mBAC7BttF,QAAQgvF,cAAgBA,cACxBhvF,QAAQmuF,WAAaA,WACrBnuF,QAAQkuF,SAAWA,SACnBluF,QAAQkxF,UAAYA,UACpBlxF,QAAQuwF,UAAYA,UACpBvwF,QAAQsxF,YAAcA,YACtBtxF,QAAQmtF,gBAAkBA,gBAC1BntF,QAAQgwF,oBAAsBA,oBAC9BhwF,QAAQu5B,eAAiBA,eACzBv5B,QAAQi6B,oBAAsBA,oBAC9Bj6B,QAAQomB,aAAeA,aACvBpmB,QAAQ0vF,kBAAoBA,kBAC5B1vF,QAAQsnB,aAAeA,aACvBtnB,QAAQoxF,OAASA,OACjBpxF,QAAQ+sF,gBAAkBA,gBAC1B/sF,QAAQ8sF,mBAAqBA,mBAC7B9sF,QAAQ6sF,iBAAmBA,iBAC3B7sF,QAAQ0mB,iBAAmBA,iBAC3B1mB,QAAQwnB,YAAcA,YACtBxnB,QAAQ4mB,eAAiBA,eACzB5mB,QAAQgnB,QAAUA,QAClBhnB,QAAQ2sF,YAAcA,YACtB3sF,QAAQ0sF,aAAeA,aACvB1sF,QAAQimB,YAAcA,YACtBjmB,QAAQssB,gBAAkBA,gBAC1BtsB,QAAQ4xF,UAAYA,UACpB5xF,QAAQwxF,aAAeA,aACvBxxF,QAAQ4uF,aAAeA,aACvB5uF,QAAQ8uF,cAAgBA,cACxB9uF,QAAQ0uF,aAAeA,aACvB1uF,QAAQw4B,aAAeA,aACvBx4B,QAAQ+uB,UAAYA,UACpB/uB,QAAQqlB,0BAA4BA,0BACpCrlB,QAAQ6uB,sBAAwBA,sBAChC7uB,QAAQqnC,aAAeA,aACvBrnC,QAAQiF,eAAiBA,eACzBjF,QAAQgF,cAAgBA,cACxBhF,QAAQyE,YAAcA,YACtBzE,QAAQm0C,QAAUA,QAClBn0C,QAAQy0C,QAAUA,QAClBz0C,QAAQ00C,QAAUA,QAClB10C,QAAQ60C,aAAeA,aACvB70C,QAAQ+0C,QAAUA,QAClB/0C,QAAQi1C,wBAA0BA,wBAClCj1C,QAAQm1C,cAAgBA,cACxBn1C,QAAQu1C,aAAeA,aACvBv1C,QAAQy1C,YAAcA,YACtBz1C,QAAQu6B,WAAaA,WACrBv6B,QAAQq6B,oBAAsBA,oBAC9Br6B,QAAQi2C,0BAA4BA,0BACpCj2C,QAAQq2C,aAAeA,aACvBr2C,QAAQooB,YAAcA,YACtBpoB,QAAQipB,gBAAkBA,gBAC1BjpB,QAAQw6B,aAAeA,aACvBx6B,QAAQ46B,oBAAsBA,oBAC9B56B,QAAQ22C,oBAAsBA,oBAC9B32C,QAAQ42C,4BAA8BA,4BACtC52C,QAAQ6G,iBAAmBA,iBAC3B7G,QAAQu3C,8BAAgCA,8BACxCv3C,QAAQy3C,8BAAgCA,8BACxCz3C,QAAQ03C,yCAA2CA,yCACnD13C,QAAQ63C,wCAA0CA,wCAClD73C,QAAQg4C,yBAA2BA,yBACnCh4C,QAAQi4C,0CAA4CA,0CACpDj4C,QAAQk4C,8BAAgCA,8BACxCl4C,QAAQm4C,gCAAkCA,gCAC1Cn4C,QAAQq4C,kCAAoCA,kCAC5Cr4C,QAAQs4C,iCAAmCA,iCAC3Ct4C,QAAQu4C,8BAAgCA,8BACxCv4C,QAAQyH,eAAiBA,eACzBzH,QAAQgI,oBAAsBA,oBAC9BhI,QAAQkI,cAAgBA,cACxBlI,QAAQqI,iBAAmBA,iBAC3BrI,QAAQsI,kBAAoBA,kBAC5BtI,QAAQuI,qBAAuBA,qBAC/BvI,QAAQw4C,mBAAqBA,mBAC7Bx4C,QAAQwI,UAAYA,UACpBxI,QAAQyI,eAAiBA,eACzBzI,QAAQ04C,0BAA4BA,0BACpC14C,QAAQ44C,wBAA0BA,wBAClC54C,QAAQu5C,yBAA2BA,yBACnCv5C,QAAQi6C,oBAAsBA,oBAC9Bj6C,QAAQk6C,wBAA0BA,wBAClCl6C,QAAQy6C,kCAAoCA,kCAC5Cz6C,QAAQy7C,aAAeA,aACvBz7C,QAAQ2I,QAAUA,QAClB3I,QAAQkJ,UAAYA,UACpBlJ,QAAQoJ,kBAAoBA,kBAC5BpJ,QAAQyJ,uBAAyBA,uBACjCzJ,QAAQ+J,eAAiBA,eACzB/J,QAAQiK,eAAiBA,eACzBjK,QAAQ8kC,qBAAuBA,qBAC/B9kC,QAAQilC,kBAAoBA,kBAC5BjlC,QAAQwnC,YAAcA,YACtBxnC,QAAQ2gC,iBAAmBA,iBAC3B3gC,QAAQmhC,4BAA8BA,4BACtCnhC,QAAQ2hC,YAAcA,YACtB3hC,QAAQkhC,mBAAqBA,mBAC7BlhC,QAAQ05G,cAAgBA,cACxB15G,QAAQu9B,aAAeA,aACvBv9B,QAAQylC,gBAAkBA,gBAC1BzlC,QAAQ6H,aAAeA,aACvB7H,QAAQqlC,kBAAoBA,kBAC5BrlC,QAAQ2mH,qBAAuBA,qBAC/B3mH,QAAQulC,qBAAuBA,qBAC/BvlC,QAAQ4kC,mBAAqBA,mBAC7B5kC,QAAQslC,mBAAqBA,mBAC7BtlC,QAAQmL,QAAUA,QAClBnL,QAAQ+qH,gBAAkBA,gBAC1B/qH,QAAQgrH,mBAAqBA,mBAC7BhrH,QAAQmvH,iBAAmBA,iBAC3BnvH,QAAQkrC,sCAAwCA,sCAChDlrC,QAAQorC,gCAAkCA,gCAC1CprC,QAAQmrC,YAAcA,YACtBnrC,QAAQqrC,aAAeA,aACvBrrC,QAAQwvH,eAAiBA,eACzBxvH,QAAQ28F,sBAAwBA,sBAChC38F,QAAQyvH,UAAYA,UACpBzvH,QAAQ2lC,eAAiBA,eACzB3lC,QAAQ+4G,cAAgBA,cACxB/4G,QAAQwyE,WAAaA,WACrBxyE,QAAQuhB,MAAQA,MAChBvhB,QAAQshB,OAASA,OACjBthB,QAAQohB,IAAMA,IACdphB,QAAQqhB,IAAMA,IACdrhB,QAAQumC,oBAAsBA,oBAC9BvmC,QAAQw0D,YAAcA,YACtBx0D,QAAQ20D,UAAYA,UACpB30D,QAAQ40D,IAAMA,IACd50D,QAAQ60D,MAAQA,MAChB70D,QAAQm2B,UAAYA,UACpBn2B,QAAQg1D,iBAAmBA,iBAC3Bh1D,QAAQi1D,MAAQA,MAChBj1D,QAAQk1D,YAAcA,YACtBl1D,QAAQm1D,aAAeA,aACvBn1D,QAAQo1D,cAAgBA,cACxBp1D,QAAQq1D,iBAAmBA,iBAC3Br1D,QAAQs1D,UAAYA,UACpBt1D,QAAQu1D,WAAaA,WACrBv1D,QAAQw1D,YAAcA,YACtBx1D,QAAQy1D,iBAAmBA,iBAC3Bz1D,QAAQ01D,aAAeA,aACvB11D,QAAQ21D,WAAaA,WACrB31D,QAAQ41D,cAAgBA,cACxB51D,QAAQ81D,OAASA,OACjB91D,QAAQg2D,UAAYA,UACpBh2D,QAAQi2D,cAAgBA,cACxBj2D,QAAQk2D,WAAaA,WACrBl2D,QAAQm2D,eAAiBA,eACzBn2D,QAAQo2D,aAAeA,aACvBp2D,QAAQk2B,cAAgBA,cACxBl2B,QAAQq2D,gBAAkBA,gBAC1Br2D,QAAQu2D,eAAiBA,eACzBv2D,QAAQw2D,oBAAsBA,oBAC9Bx2D,QAAQy2D,eAAiBA,eACzBz2D,QAAQyT,iBAAmBA,iBAC3BzT,QAAQ0Q,UAAYA,UACpB1Q,QAAQ2mC,MAAQA,MAChB3mC,QAAQyQ,MAAQA,MAChBzQ,QAAQqzD,IAAMA,IACdrzD,QAAQ4R,aAAeA,aACvB5R,QAAQyS,QAAUA,QAClBzS,QAAQ02D,mBAAqBA,mBAC7B12D,QAAQ42D,2BAA6BA,2BACrC52D,QAAQ0mC,OAASA,OACjB1mC,QAAQm3D,UAAYA,UACpBn3D,QAAQ+kB,qBAAuBA,qBAC/B/kB,QAAQgnC,wBAA0BA,wBAClChnC,QAAQ81B,KAAOA,KACf91B,QAAQ47C,UAAYA,UACpB57C,QAAQ87C,cAAgBA,cACxB97C,QAAQiB,UAAYgyB,YACpBjzB,QAAQyK,QAAUA,QAClBzK,QAAQ6e,QAAUA,QAClB7e,QAAQkK,SAAWA,SACnBlK,QAAQkL,iBAAmBA,iBAC3BlL,QAAQ4K,SAAWA,SACnB5K,QAAQkyB,gBAAkBA,gBAC1BlyB,QAAQojE,UAAYA,UACpBpjE,QAAQ4lC,WAAaA,WACrB5lC,QAAQkoE,kBAAoBA,kBAC5BloE,QAAQ0d,qBAAuBA,qBAC/B1d,QAAQy8C,eAAiBA,eACzBz8C,QAAQ0M,YAAcA,YACtB1M,QAAQ6M,cAAgBA;AACxB7M,QAAQ+M,YAAcA,WACtB/M,SAAQgN,aAAeA,YACvBhN,SAAQiN,YAAcA,YACtBjN,QAAQmN,eAAiBA,eACzBnN,QAAQ68C,eAAiBA,eACzB78C,QAAQ+xB,aAAeA,aACvB/xB,QAAQ0uB,2BAA6BA,2BACrC1uB,QAAQ29B,kBAAoBA,kBAC5B39B,QAAQmW,cAAgBA,cACxBnW,QAAQiW,gBAAkBA,gBAC1BjW,QAAQkW,gBAAkBA,gBAC1BlW,QAAQs8D,gBAAkBA,gBAC1Bt8D,QAAQy8D,WAAaA,WACrBz8D,QAAQ4V,eAAiBA,eACzB5V,QAAQ6mC,yBAA2BA,yBACnC7mC,QAAQ4zB,YAAcA,YACtB5zB,QAAQy/E,gBAAkBA,gBAC1Bz/E,QAAQugF,oBAAsBA,oBAC9BvgF,QAAQ0gF,gBAAkBA,gBAC1B1gF,QAAQwjG,wBAA0BA,wBAClCxjG,QAAQyjG,mBAAqBA,mBAC7BzjG,QAAQynC,cAAgBA,cACxBznC,QAAQkpG,mBAAqBA,mBAC7BlpG,QAAQmpG,oBAAsBA,oBAC9BnpG,QAAQ+mC,eAAiBA,eACzB/mC,QAAQ80B,aAAeA,aACvB90B,QAAQg1B,yBAA2BA,yBACnCh1B,QAAQ+1B,wBAA0BA,wBAElCj1B,OAAO8f,eAAe5gB,QAAS,cAAgB2D,OAAO","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.7-9bbf009\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-beta.7-9bbf009\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-beta.7-9bbf009');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - emittedLine.indent;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isBlank = text.value.trim().length === 0;\n        if (!isBlank) {\n            return new Text(replaceNgsp(text.value).replace(/\\s\\s+/g, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build();\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + this.component.name + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount), providerExpr, depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n            });\n        });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([map])\n            });\n        });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n        if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n            forJitSerializer.addLibType(summary.type);\n        }\n    });\n    var _a = toJsonSerializer.serialize(srcFileName), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @param {?} srcFileName\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @param {?} srcFileName\n     * @return {?}\n     */\n    function (srcFileName) {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this.options = options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        return analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStubs = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return this._emitStubs(file, StubEmitFlags.Basic);\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStubs = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        var _this = this;\n        var /** @type {?} */ generatedFiles = [];\n        files.files.forEach(function (file) {\n            return _this._emitStubs(file, StubEmitFlags.TypeCheck)\n                .forEach(function (genFile) { return generatedFiles.push(genFile); });\n        });\n        return generatedFiles;\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        var _this = this;\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        var _this = this;\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._emitStubs = /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (file, emitFlags) {\n        return this._createNgFactoryStub(file, emitFlags).concat(this._createExternalStyleSheetNgFactoryStubs(file, emitFlags), this._createNgSummaryStub(file, emitFlags));\n    };\n    /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(calculateGenFileName(ngfactoryFilePath(file.fileName, true), this.options.rootDir));\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.declaredDirectives.map(function (d) { return d.reference; }).concat(ngModuleMeta.declaredPipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (outputCtx.statements.length === 0 && (emitFlags & StubEmitFlags.Basic) &&\n            (file.directives.length || file.pipes.length || file.injectables.length ||\n                file.ngModules.length || file.exportsNonSourceFiles)) {\n            _createEmptyStub(outputCtx);\n        }\n        if (outputCtx.statements.length > 0) {\n            generatedFiles.push(this._codegenSourceModule(file.fileName, outputCtx));\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createExternalStyleSheetNgFactoryStubs = /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ generatedFiles = [];\n        if (!(emitFlags & StubEmitFlags.Basic)) {\n            // note: stylesheet stubs don't change when we produce type check stubs\n            return generatedFiles;\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw new Error(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ encapsulation = /** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation;\n                var /** @type {?} */ outputCtx = _this._createOutputContext(calculateGenFileName(_stylesModuleUrl(normalizedUrl, encapsulation === ViewEncapsulation.Emulated, fileSuffix), _this.options.rootDir));\n                _createEmptyStub(outputCtx);\n                generatedFiles.push(_this._codegenSourceModule(normalizedUrl, outputCtx));\n            });\n        });\n        return generatedFiles;\n    };\n    /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgSummaryStub = /**\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (file, emitFlags) {\n        var /** @type {?} */ generatedFiles = [];\n        // note: .ngsummary.js stubs don't change when we produce type check stubs\n        if (!this.options.enableSummariesForJit || !(emitFlags & StubEmitFlags.Basic)) {\n            return generatedFiles;\n        }\n        if (file.directives.length || file.injectables.length || file.ngModules.length ||\n            file.pipes.length || file.exportsNonSourceFiles) {\n            var /** @type {?} */ outputCtx_1 = this._createOutputContext(calculateGenFileName(summaryForJitFileName(file.fileName, true), this.options.rootDir));\n            file.ngModules.forEach(function (ngModule) {\n                // create exports that user code can reference\n                createForJitStub(outputCtx_1, ngModule.type.reference);\n            });\n            if (outputCtx_1.statements.length === 0) {\n                _createEmptyStub(outputCtx_1);\n            }\n            generatedFiles.push(this._codegenSourceModule(file.fileName, outputCtx_1));\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(calculateGenFileName(ngfactoryFilePath(srcFileUrl, true), this.options.rootDir));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(calculateGenFileName(summaryForJitFileName(srcFileName, true), this.options.rootDir));\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        if (this.options.enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileName, forJitOutputCtx)];\n        }\n        \n        return [summaryJson];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this.options.locale) {\n            var /** @type {?} */ normalizedLocale = this.options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this.options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this.options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(calculateGenFileName(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix), this.options.rootDir));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n/**\n * @param {?} fileName\n * @param {?} rootDir\n * @return {?}\n */\nfunction calculateGenFileName(fileName, rootDir) {\n    if (!rootDir)\n        return fileName;\n    var /** @type {?} */ fileNameParts = fileName.split(/\\\\|\\//);\n    var /** @type {?} */ rootDirParts = rootDir.split(/\\\\|\\//);\n    if (!rootDirParts[rootDirParts.length - 1])\n        rootDirParts.pop();\n    var /** @type {?} */ i = 0;\n    while (i < Math.min(fileNameParts.length, rootDirParts.length) &&\n        fileNameParts[i] === rootDirParts[i])\n        i++;\n    var /** @type {?} */ result = rootDirParts.concat(fileNameParts.slice(i)).join('/');\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        references > 0) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + stringify(component) + \" is not yet compiled!\");\n        }\n        return /** @type {?} */ ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl$$1, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl$$1, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}