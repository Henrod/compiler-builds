{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","TemplateAst","QueryMatch","TemplateAstVisitor","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","TagDefinition","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","obj","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","Éµstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","ProxyClass","CompileIdentifierMetadata","CompileTypeSummary","CompileDiDependencyMetadata","CompileProviderMetadata","CompileFactoryMetadata","tokenName","token","tokenReference","CompileTokenMetadata","CompileTypeMetadata","CompileQueryMetadata","CompileTemplateSummary","CompileEntryComponentMetadata","CompileDirectiveSummary","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","preserveWhitespaces","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","CompilePipeSummary","CompileNgModuleSummary","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","AstVisitor","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","Node","Visitor","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","join","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createOfflineCompileUrlResolver","UrlResolver","UrlResolverCtor","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","PrenormalizedTemplateMetadata","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","Summary","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ÉµERROR_COMPONENT_TYPE","ExpressionVisitor","StatementVisitor","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","entries","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","symbol","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","deserializeSummaries","symbolCache","libraryFileName","deserializer","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createTypeReferenceStub","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","NgAnalyzedModules","NgAnalyzeModulesHost","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","StaticSymbolResolverHost","unescapeIdentifier","substr","AotSummaryResolverHost","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","console","ÉµConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","locale","enableSummariesForJit","AotCompilerOptions","AotCompilerHost","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","ExtractorHost","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","setPrototypeOf","__proto__","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","NGSP_UNICODE","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","MODULE_SUFFIX","ValueTransformer","SyncAsync","assertSync","ÉµisPromise","then","all","syncAsyncValues","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","CompileReflector","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ÉµCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","Éµcmf","moduleDef","Éµmod","moduleProviderDef","Éµmpd","RegisterModuleFactoryFn","ÉµregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ÉµinlineInterpolate","interpolate","Éµinterpolate","EMPTY_ARRAY","ÉµEMPTY_ARRAY","EMPTY_MAP","ÉµEMPTY_MAP","Renderer","viewDef","Éµvid","elementDef","Éµeld","anchorDef","Éµand","textDef","Éµted","directiveDef","Éµdid","Éµprd","queryDef","Éµqud","pureArrayDef","Éµpad","pureObjectDef","Éµpod","purePipeDef","Éµppd","pipeDef","Éµpid","nodeValue","Éµnov","ngContentDef","Éµncd","Éµunv","createRendererType2","Éµcrt","RendererType2","ViewDefinition","createComponentFactory","Éµccf","SKIP_WS_TRIM_TAGS","isBlank","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","getMappedPropName","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","validateAttribute","validateProperty","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","_reflector","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","hasElement","allDirectiveEvents","event","hasProperty","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizeTemplateOnly","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","assign","mergedQueries","moduleId","isNgModule","metas","annotation","SummaryResolver","JitSummaryResolver","_summaries","toSummaryFileName","fromSummaryFileName","getImportAs","addSummary","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","suppliedParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schemaMetas","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ÉµelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","tokenExpr_1","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_enableSummariesForJit","_symbolResolver","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","emitAllStubs","sourceModules","_compileStubFile","emitPartialStubs","emitAllImpls","_compileImplFile","partial","generatedFiles","ngFactoryOutputCtx","_createOutputContext","jitSummaryOutputCtx","partialJitStubRequired","partialFactoryStubRequired","stylesheetMeta","styleContext","_codegenSourceModule","_createSummary","_compileModule","componentStylesheet","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","arity","getTypeArity","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","ANGULAR_ROUTER","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","containingFile","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","ROUTES","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ÉµgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","JitReflector","reflectionCapabilities","ÉµReflectionCapabilities","cmpMetadata","scheme","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","parser","Ignore","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory"],"mappings":"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2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ18D,yBAA4B,SAAU71B,QAEtC,QAAS61B,4BACL,GAAIwC,OAAQr4B,OAAO88B,KAAK9xC,OAASA,IAqCjC,OApCAqtC,OAAMm6D,WACNR,OAAO3lG,QAAQ,SAAUomG,aACrB,GAAqB/+F,SACjBqQ,GAAK0uF,YAAY17F,MAAM,KAAM27F,QAAU3uF,GAAG,GAAI4uF,cAAgB5uF,GAAG,GAChD6uF,WAAaD,cAAc57F,MAAM,KAClDmN,GAAKwuF,QAAQ37F,MAAM,KAAM87F,UAAY3uF,GAAG,GAAI4uF,UAAY5uF,GAAG,EAC/D2uF,WAAU97F,MAAM,KAAK1K,QAAQ,SAAUke,KAAO,MAAO8tB,OAAMm6D,QAAQjoF,IAAI7c,eAAiBgG,MACxF,IAAqBq/F,WAAYD,WAAaz6D,MAAMm6D,QAAQM,UAAUplG,cAClEqlG,YACAtnG,OAAO06B,KAAK4sE,WAAW1mG,QAAQ,SAAUm3B,MAAQ9vB,KAAK8vB,MAAQuvE,UAAUvvE,QAE5EovE,WAAWvmG,QAAQ,SAAU2mG,UACzB,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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.4-43226cb\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license Angular v5.0.0-beta.4-43226cb\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.0.0-beta.4-43226cb');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\nfunction TemplateAst() { }\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\nfunction QueryMatch() { }\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\nfunction TemplateAstVisitor() { }\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\nfunction TagDefinition() { }\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\n/**\n * @record\n */\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (_angular_core.ÉµisPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return _angular_core.ÉµisPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(_angular_core.ÉµisPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        ((error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return ((error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.Éµstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + _angular_core.Éµstringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\nfunction ProxyClass() { }\n/**\n * @record\n */\nfunction CompileIdentifierMetadata() { }\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\nfunction CompileTypeSummary() { }\n/**\n * @record\n */\nfunction CompileDiDependencyMetadata() { }\n/**\n * @record\n */\nfunction CompileProviderMetadata() { }\n/**\n * @record\n */\nfunction CompileFactoryMetadata() { }\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\nfunction CompileTokenMetadata() { }\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\nfunction CompileTypeMetadata() { }\n/**\n * @record\n */\nfunction CompileQueryMetadata() { }\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\nfunction CompileTemplateSummary() { }\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\nfunction CompileEntryComponentMetadata() { }\n/**\n * @record\n */\nfunction CompileDirectiveSummary() { }\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null,\n            preserveWhitespaces: false,\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\n/**\n * @record\n */\nfunction CompilePipeSummary() { }\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\nfunction CompileNgModuleSummary() { }\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\nfunction AstVisitor() { }\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ function CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction Node() { }\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\nfunction Visitor() { }\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n/**\n * @record\n */\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n    runtime: _angular_core.Éµcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'Éµmod',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: _angular_core.ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: _angular_core.TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'Éµinterpolate', moduleName: CORE, runtime: _angular_core.Éµinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ÉµEMPTY_ARRAY', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ÉµEMPTY_MAP', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'Éµvid', moduleName: CORE, runtime: _angular_core.Éµvid };\nIdentifiers.elementDef = { name: 'Éµeld', moduleName: CORE, runtime: _angular_core.Éµeld };\nIdentifiers.anchorDef = { name: 'Éµand', moduleName: CORE, runtime: _angular_core.Éµand };\nIdentifiers.textDef = { name: 'Éµted', moduleName: CORE, runtime: _angular_core.Éµted };\nIdentifiers.directiveDef = { name: 'Éµdid', moduleName: CORE, runtime: _angular_core.Éµdid };\nIdentifiers.providerDef = { name: 'Éµprd', moduleName: CORE, runtime: _angular_core.Éµprd };\nIdentifiers.queryDef = { name: 'Éµqud', moduleName: CORE, runtime: _angular_core.Éµqud };\nIdentifiers.pureArrayDef = { name: 'Éµpad', moduleName: CORE, runtime: _angular_core.Éµpad };\nIdentifiers.pureObjectDef = { name: 'Éµpod', moduleName: CORE, runtime: _angular_core.Éµpod };\nIdentifiers.purePipeDef = { name: 'Éµppd', moduleName: CORE, runtime: _angular_core.Éµppd };\nIdentifiers.pipeDef = { name: 'Éµpid', moduleName: CORE, runtime: _angular_core.Éµpid };\nIdentifiers.nodeValue = { name: 'Éµnov', moduleName: CORE, runtime: _angular_core.Éµnov };\nIdentifiers.ngContentDef = { name: 'Éµncd', moduleName: CORE, runtime: _angular_core.Éµncd };\nIdentifiers.unwrapValue = { name: 'Éµunv', moduleName: CORE, runtime: _angular_core.Éµunv };\nIdentifiers.createRendererType2 = { name: 'Éµcrt', moduleName: CORE, runtime: _angular_core.Éµcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'Éµccf', moduleName: CORE, runtime: _angular_core.Éµccf };\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * The idea of using &ngsp; as a placeholder for non-removable space was originally introduced in\n * Angular Dart, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Becouse of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = function (text, context) {\n        var /** @type {?} */ isBlank = text.value.trim().length === 0;\n        if (!isBlank) {\n            // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n            return new Text(text.value.replace(NGSP_UNICODE, ' ').replace(/\\s\\s+/g, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component));\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ÉµConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * @record\n */\nfunction UrlResolverCtor() { }\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction PrenormalizedTemplateMetadata() { }\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.Éµstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.Éµstringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), function (result) { return _this.normalizeExternalStylesheets(result); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateOnly = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this.normalizeLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: [],\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n            preserveWhitespaces: templateMeta.preserveWhitespaces,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.Éµstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nPipeResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Summary() { }\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function () { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.Éµstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.Éµccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (_angular_core.ÉµisPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ÉµConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.Éµstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.Éµstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ÉµERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\nfunction ExpressionVisitor() { }\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    /**\n     * @param {?} comment\n     * @param {?=} sourceSpan\n     */\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\nfunction StatementVisitor() { }\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    /**\n     * @param {?} ctx\n     */\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    /**\n     * @param {?} reflector\n     */\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nNgModuleCompiler.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the âsourcesâ list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - emittedLine.indent;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor() {\n        var _this = _super.call(this, false) || this;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\n/**\n * @record\n */\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_config, _reflector, _schemaRegistry) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = (NULL_EXPR);\n        var /** @type {?} */ compView = (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr_1 = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr_1,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (Object.assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([map])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ÉµelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(srcFileName), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @param {?} srcFileName\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function (srcFileName) {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     * @param {?} summaryResolver\n     */\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _enableSummariesForJit\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _enableSummariesForJit, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._enableSummariesForJit = _enableSummariesForJit;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, false); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitPartialStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, true); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileImplFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} partial\n     * @return {?}\n     */\n    AotCompiler.prototype._compileStubFile = function (srcFileUrl, directives, pipes, ngModules, partial) {\n        var _this = this;\n        // partial is true when we only need the files we are certain will produce a factory and/or\n        // summary.\n        // This is the normal case for `ngc` but if we assume libraryies are generating their own\n        // factories\n        // then we might need a factory for a file that re-exports a module or factory which we cannot\n        // know\n        // ahead of time so we need a stub generate for all non-.d.ts files. The .d.ts files do not need\n        // to\n        // be excluded here because they are excluded when the modules are analyzed. If a factory ends\n        // up\n        // not being needed, the factory file is not written in writeFile callback.\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ ngFactoryOutputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        var /** @type {?} */ jitSummaryOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        // create exports that user code can reference\n        ngModules.forEach(function (ngModuleReference) {\n            _this._ngModuleCompiler.createStub(ngFactoryOutputCtx, ngModuleReference);\n            createForJitStub(jitSummaryOutputCtx, ngModuleReference);\n        });\n        var /** @type {?} */ partialJitStubRequired = false;\n        var /** @type {?} */ partialFactoryStubRequired = false;\n        // create stubs for external stylesheets (always empty, as users should not import anything from\n        // the generated code)\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            partialJitStubRequired = true;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                var /** @type {?} */ styleContext = _this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMeta.moduleUrl)), _this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n                _createTypeReferenceStub(styleContext, Identifiers.ComponentFactory);\n                generatedFiles.push(_this._codegenSourceModule(/** @type {?} */ ((stylesheetMeta.moduleUrl)), styleContext));\n            });\n            partialFactoryStubRequired = true;\n        });\n        // If we need all the stubs to be generated then insert an arbitrary reference into the stub\n        if ((partialFactoryStubRequired || !partial) && ngFactoryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(ngFactoryOutputCtx, Identifiers.ComponentFactory);\n        }\n        if ((partialJitStubRequired || !partial || (pipes && pipes.length > 0)) &&\n            jitSummaryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(jitSummaryOutputCtx, Identifiers.ComponentFactory);\n        }\n        // Note: we are creating stub ngfactory/ngsummary for all source files,\n        // as the real calculation requires almost the same logic as producing the real content for\n        // them. Our pipeline will filter out empty ones at the end. Because of this filter, however,\n        // stub references to the reference type needs to be generated even if the user cannot\n        // refer to type from the `.d.ts` file to prevent the file being elided from the emit.\n        generatedFiles.push(this._codegenSourceModule(srcFileUrl, ngFactoryOutputCtx));\n        if (this._enableSummariesForJit) {\n            generatedFiles.push(this._codegenSourceModule(srcFileUrl, jitSummaryOutputCtx));\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleType) { return _this._compileModule(outputCtx, ngModuleType); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileName, true));\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        if (this._enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileName, forJitOutputCtx)];\n        }\n        return [summaryJson];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModuleType) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ preserveWhitespaces = ((((compMeta)).template)).preserveWhitespaces;\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction _createTypeReferenceStub(outputCtx, reference) {\n    outputCtx.statements.push(importExpr(reference).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\nfunction NgAnalyzedModules() { }\n/**\n * @record\n */\nfunction NgAnalyzeModulesHost() { }\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = function (ref) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n        this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression) || references > 0) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\nfunction StaticSymbolResolverHost() { }\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction AotSummaryResolverHost() { }\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ console = new _angular_core.ÉµConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, options.enableSummariesForJit || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction AotCompilerOptions() { }\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The host of the AotCompiler disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nfunction AotCompilerHost() { }\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @return {?}\n */\nfunction interpretStatements(statements) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) { return ast.value.runtime; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.runtime;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.Éµstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.Éµstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ÉµgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n        var /** @type {?} */ preserveWhitespaces = ((((compMeta)).template)).preserveWhitespaces; /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template))), preserveWhitespaces), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ÉµConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) { return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol }); };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nfunction ExtractorHost() { }\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ÉµConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JitReflector = (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new _angular_core.ÉµReflectionCapabilities();\n    }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + _angular_core.Éµstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + _angular_core.Éµstringify(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitReflector.prototype.resolveExternalReference = function (ref) { return ref.runtime; };\n    return JitReflector;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = ([\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    { provide: JitSummaryResolver, deps: [] },\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    { provide: _angular_core.ÉµConsole, deps: [] },\n    { provide: Lexer, deps: [] },\n    { provide: Parser, deps: [Lexer] },\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n        deps: [],\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) {\n            translations = translations || '';\n            var /** @type {?} */ missingTranslation = translations ? ((config.missingTranslation)) : _angular_core.MissingTranslationStrategy.Ignore;\n            return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ÉµConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    {\n        provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n            Parser, ElementSchemaRegistry,\n            I18NHtmlParser, _angular_core.ÉµConsole, [_angular_core.Optional, TEMPLATE_TRANSFORMS]]\n    },\n    { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig] },\n    { provide: CompileMetadataResolver, deps: [CompilerConfig, NgModuleResolver,\n            DirectiveResolver, PipeResolver,\n            SummaryResolver,\n            ElementSchemaRegistry,\n            DirectiveNormalizer, _angular_core.ÉµConsole,\n            [_angular_core.Optional, StaticSymbolCache],\n            CompileReflector,\n            [_angular_core.Optional, ERROR_COLLECTOR_TOKEN]] },\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    { provide: StyleCompiler, deps: [UrlResolver] },\n    { provide: ViewCompiler, deps: [CompilerConfig, CompileReflector, ElementSchemaRegistry] },\n    { provide: NgModuleCompiler, deps: [CompileReflector] },\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    { provide: JitCompiler, deps: [_angular_core.Injector, CompileMetadataResolver,\n            TemplateParser, StyleCompiler,\n            ViewCompiler, NgModuleCompiler,\n            SummaryResolver, CompilerConfig,\n            _angular_core.ÉµConsole] },\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    { provide: DomElementSchemaRegistry, deps: [] },\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    { provide: UrlResolver, deps: [_angular_core.PACKAGE_ROOT_URL] },\n    { provide: DirectiveResolver, deps: [CompileReflector] },\n    { provide: PipeResolver, deps: [CompileReflector] },\n    { provide: NgModuleResolver, deps: [CompileReflector] },\n]);\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var /** @type {?} */ compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n            preserveWhitespaces: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.Injector.create([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory, deps: [_angular_core.COMPILER_OPTIONS] },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n        enableLegacyTemplate: _lastDefined(optionsArr.map(function (options) { return options.enableLegacyTemplate; })),\n        preserveWhitespaces: _lastDefined(optionsArr.map(function (options) { return options.preserveWhitespaces; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExpressionVisitor = ExpressionVisitor;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.StatementVisitor = StatementVisitor;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TemplateAst = TemplateAst;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.QueryMatch = QueryMatch;\nexports.TemplateAstVisitor = TemplateAstVisitor;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.ProxyClass = ProxyClass;\nexports.CompileIdentifierMetadata = CompileIdentifierMetadata;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.CompileTypeSummary = CompileTypeSummary;\nexports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\nexports.CompileProviderMetadata = CompileProviderMetadata;\nexports.CompileFactoryMetadata = CompileFactoryMetadata;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileTokenMetadata = CompileTokenMetadata;\nexports.CompileTypeMetadata = CompileTypeMetadata;\nexports.CompileQueryMetadata = CompileQueryMetadata;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateSummary = CompileTemplateSummary;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileEntryComponentMetadata = CompileEntryComponentMetadata;\nexports.CompileDirectiveSummary = CompileDirectiveSummary;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeSummary = CompilePipeSummary;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleSummary = CompileNgModuleSummary;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.NgAnalyzedModules = NgAnalyzedModules;\nexports.NgAnalyzeModulesHost = NgAnalyzeModulesHost;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.AotCompilerOptions = AotCompilerOptions;\nexports.AotCompilerHost = AotCompilerHost;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolverHost = StaticSymbolResolverHost;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolverHost = AotSummaryResolverHost;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.Summary = Summary;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.JitReflector = JitReflector;\nexports.CompileReflector = CompileReflector;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.UrlResolverCtor = UrlResolverCtor;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.ExtractorHost = ExtractorHost;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.PrenormalizedTemplateMetadata = PrenormalizedTemplateMetadata;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.AstVisitor = AstVisitor;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Node = Node;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.Visitor = Visitor;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.TagDefinition = TagDefinition;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}