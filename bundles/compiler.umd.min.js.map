{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","error","ERROR_SYNTAX_ERROR","isSyntaxError","escapeRegExp","s","obj","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","Éµstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","dirWrapperClassName","dirType","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","createI18nMessageFactory","_I18nVisitor","_expParser","meaning","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","_a","meaningAndDesc","_b","getXmlTagDefinition","_TAG_DEFINITION","digest","sha1","serializeNodes","join","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","c","e","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ÉµERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","quoted","LiteralMapExpr","LiteralMapEntry","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","symbol","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","_assertComponent","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","console","ÉµConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","locale","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","setPrototypeOf","__proto__","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","MODULE_SUFFIX","ValueTransformer","SyncAsync","assertSync","ÉµisPromise","then","all","syncAsyncValues","some","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","CompileReflector","parameters","typeOrFunc","annotations","propMetadata","lcProperty","componentModuleUrl","cmpMetadata","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextStr","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","visitContainer","Icu","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","icu","expressionPlaceholder","ph","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","_SerializerVisitor","strCases","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ÉµCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","Éµcmf","moduleDef","Éµmod","moduleProviderDef","Éµmpd","RegisterModuleFactoryFn","ÉµregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ÉµinlineInterpolate","interpolate","Éµinterpolate","EMPTY_ARRAY","ÉµEMPTY_ARRAY","EMPTY_MAP","ÉµEMPTY_MAP","Renderer","viewDef","Éµvid","elementDef","Éµeld","anchorDef","Éµand","textDef","Éµted","directiveDef","Éµdid","Éµprd","queryDef","Éµqud","pureArrayDef","Éµpad","pureObjectDef","Éµpod","purePipeDef","Éµppd","pipeDef","Éµpid","nodeValue","Éµnov","ngContentDef","Éµncd","Éµunv","createRendererType2","Éµcrt","RendererType2","ViewDefinition","createComponentFactory","Éµccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","_reflector","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizeTemplateOnly","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","typeMetadata","throwIfNotFound","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","assign","mergedQueries","moduleId","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","getImportAs","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","Exported","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","visitCommentStmt","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","ngModuleFactoryStmt","registerFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","srcFilePath","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","suppliedParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","outputCtx","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ÉµelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","tokenExpr_1","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","fnName","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_symbolResolver","compileAllAsync","rootFiles","sourceModules","_compileSrcFile","compileAllSync","generatedFiles","_createOutputContext","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","_codegenSourceModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","arity","getTypeArity","fileNameToModuleName","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","IGNORE","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","injectionToken","opaqueToken","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ÉµgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","JitReflector","reflectionCapabilities","ÉµReflectionCapabilities","scheme","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","parser","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory"],"mappings":"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CA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,gFACA,yBACA,+BAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ/7D,yBAA4B,SAAUj0B,QAEtC,QAASi0B,4BACL,GAAIqC,OAAQt2B,OAAO86B,KAAKpuC,OAASA,IAqCjC,OApCA4pC,OAAM25D,WACNR,OAAO7hG,QAAQ,SAAUsiG,aACrB,GAAI/7F,SACA0Q,GAAKqrF,YAAY74F,MAAM,KAAM84F,QAAUtrF,GAAG,GAAIurF,cAAgBvrF,GAAG,GACjEwrF,WAAaD,cAAc/4F,MAAM,KACjC0N,GAAKorF,QAAQ94F,MAAM,KAAMi5F,UAAYvrF,GAAG,GAAIwrF,UAAYxrF,GAAG,EAC/DurF,WAAUj5F,MAAM,KAAKzJ,QAAQ,SAAU2c,KAAO,MAAO+rB,OAAM25D,QAAQ1lF,IAAIvb,eAAiBmF,MACxF,IAAIq8F,WAAYD,WAAaj6D,MAAM25D,QAAQM,UAAUvhG,cACjDwhG,YACArjG,OAAOo4B,KAAKirE,WAAW5iG,QAAQ,SAAUg1B,MAAQzuB,KAAKyuB,MAAQ4tE,UAAU5tE,QAE5EytE,WAAWziG,QAAQ,SA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","file":"/home/travis/build/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.2.0-rc.0-fa809ec\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license Angular v4.2.0-rc.0-fa809ec\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.2.0-rc.0-fa809ec');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (_angular_core.ÉµisPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return _angular_core.ÉµisPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(_angular_core.ÉµisPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction syntaxError(msg) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.Éµstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + _angular_core.Éµstringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} dirType\n * @return {?}\n */\nfunction dirWrapperClassName(dirType) {\n    return \"Wrapper_\" + identifierName({ reference: dirType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.parameters = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.annotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.propMetadata = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    CompileReflector.prototype.hasLifecycleHook = function (type, lcProperty) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    CompileReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { };\n    /**\n     * @abstract\n     * @param {?} ref\n     * @return {?}\n     */\n    CompileReflector.prototype.resolveExternalReference = function (ref) { };\n    return CompileReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = ((this.expectIdentifierOrKeyword()));\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ key = ((this.expectIdentifierOrKeywordOrString()));\n                keys.push(key);\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = ((this.expectIdentifierOrKeyword()));\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        var /** @type {?} */ contextStr = ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG)].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: (this._nextPlaceholderId++).toString() })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (!this._translationBundle) {\n            // Do not enable i18n when no translation bundle is provided\n            return parseResult;\n        }\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n    runtime: _angular_core.Éµcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'Éµmod',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: _angular_core.ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: _angular_core.TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'Éµinterpolate', moduleName: CORE, runtime: _angular_core.Éµinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ÉµEMPTY_ARRAY', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ÉµEMPTY_MAP', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'Éµvid', moduleName: CORE, runtime: _angular_core.Éµvid };\nIdentifiers.elementDef = { name: 'Éµeld', moduleName: CORE, runtime: _angular_core.Éµeld };\nIdentifiers.anchorDef = { name: 'Éµand', moduleName: CORE, runtime: _angular_core.Éµand };\nIdentifiers.textDef = { name: 'Éµted', moduleName: CORE, runtime: _angular_core.Éµted };\nIdentifiers.directiveDef = { name: 'Éµdid', moduleName: CORE, runtime: _angular_core.Éµdid };\nIdentifiers.providerDef = { name: 'Éµprd', moduleName: CORE, runtime: _angular_core.Éµprd };\nIdentifiers.queryDef = { name: 'Éµqud', moduleName: CORE, runtime: _angular_core.Éµqud };\nIdentifiers.pureArrayDef = { name: 'Éµpad', moduleName: CORE, runtime: _angular_core.Éµpad };\nIdentifiers.pureObjectDef = { name: 'Éµpod', moduleName: CORE, runtime: _angular_core.Éµpod };\nIdentifiers.purePipeDef = { name: 'Éµppd', moduleName: CORE, runtime: _angular_core.Éµppd };\nIdentifiers.pipeDef = { name: 'Éµpid', moduleName: CORE, runtime: _angular_core.Éµpid };\nIdentifiers.nodeValue = { name: 'Éµnov', moduleName: CORE, runtime: _angular_core.Éµnov };\nIdentifiers.ngContentDef = { name: 'Éµncd', moduleName: CORE, runtime: _angular_core.Éµncd };\nIdentifiers.unwrapValue = { name: 'Éµunv', moduleName: CORE, runtime: _angular_core.Éµunv };\nIdentifiers.createRendererType2 = { name: 'Éµcrt', moduleName: CORE, runtime: _angular_core.Éµcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'Éµccf', moduleName: CORE, runtime: _angular_core.Éµccf };\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ÉµConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.Éµstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.Éµstringify(prenormData.componentType));\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), function (result) { return _this.normalizeExternalStylesheets(result); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateOnly = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this.normalizeLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.Éµstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.Éµstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.Éµccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (_angular_core.ÉµisPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ÉµConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.Éµstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.Éµstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ÉµERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} quoted\n * @return {?}\n */\nfunction literalMap(values, type, quoted) {\n    if (type === void 0) { type = null; }\n    if (quoted === void 0) { quoted = false; }\n    return new LiteralMapExpr(values.map(function (entry) { return new LiteralMapEntry(entry[0], entry[1], quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    /**\n     * @param {?} ctx\n     */\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    /**\n     * @param {?} reflector\n     */\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]))\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(ngModuleMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the âsourcesâ list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment();\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        return lines.join('\\n');\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor() {\n        var _this = _super.call(this, false) || this;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:cursor^:svg:|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (args) { return literalMap(/** @type {?} */ (keys.map(function (key, i) { return [key, args[i]]; }))); };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_config, _reflector, _schemaRegistry) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation)),\n                    new LiteralMapEntry('styles', styles),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData))\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            expressionType(outputCtx.importExpr(this.component.type.reference));\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = (NULL_EXPR);\n        var /** @type {?} */ compView = (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType))])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr_1 = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr_1,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // function pureObjectDef(propertyNames: string[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([literalArr(keys.map(function (key) { return literal(key); }))])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ÉµelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when teh current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                _this.outputCtx.statements.push(fn([], [new ReturnStatement(_this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))))], new ArrayType(DYNAMIC_TYPE))\n                    .toDeclStmt(fnName, [StmtModifier.Final, StmtModifier.Exported]));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context)); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAllAsync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        });\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.compileAllSync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n        ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleType) { return _this._compileModule(outputCtx, ngModuleType); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return Promise.resolve(null);\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            _assertComponent(compMeta);\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        var /** @type {?} */ forJitTargetFilePath = summaryForJitFileName(srcFileUrl, true);\n        var _a = serializeSummaries(forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        return [\n            new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json),\n            this._codegenSourceModule(srcFileUrl, forJitOutputCtx)\n        ];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModuleType) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ moduleName = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = function (ref) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ rootSymbol = this.findDeclaration(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyInContext(context, arg, depth + 1); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) { return simplify(value); });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value, depth) {\n            try {\n                return simplifyInContext(context, value, depth);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n            simplifyInContext(context, value, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        if (importedFilePath === containingFilePath) {\n            return null;\n        }\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ console = new _angular_core.ÉµConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @return {?}\n */\nfunction interpretStatements(statements) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) { return ast.value.runtime; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return ((result))[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar)); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.runtime;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.Éµstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.Éµstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ÉµgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ÉµConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) { return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol }); };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ÉµConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JitReflector = (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new _angular_core.ÉµReflectionCapabilities();\n    }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + _angular_core.Éµstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + _angular_core.Éµstringify(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitReflector.prototype.resolveExternalReference = function (ref) { return ref.runtime; };\n    return JitReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ÉµConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) { return new I18NHtmlParser(parser, translations, format, config.missingTranslation, console); },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ÉµConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.ViewCompiler = ViewCompiler;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.dirWrapperClassName = dirWrapperClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.JitReflector = JitReflector;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}