{"version":3,"file":"runtime_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/runtime_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AppModuleFactory, AppModuleMetadata, Compiler, ComponentFactory, ComponentResolver, ComponentStillLoadingError, Injectable, Injector, OptionalMetadata, Provider, SkipSelfMetadata} from '@angular/core';\nimport {Console} from '../core_private';\n\nimport {BaseException} from '../src/facade/exceptions';\nimport {ConcreteType, IS_DART, Type, isBlank, isString, stringify} from '../src/facade/lang';\n\nimport {ListWrapper,} from '../src/facade/collection';\nimport {PromiseWrapper} from '../src/facade/async';\nimport {createHostComponentMeta, CompileDirectiveMetadata, CompilePipeMetadata, CompileIdentifierMetadata} from './compile_metadata';\nimport {TemplateAst,} from './template_ast';\nimport {StyleCompiler, StylesCompileDependency, CompiledStylesheet} from './style_compiler';\nimport {ViewCompiler, ViewCompileResult, ViewFactoryDependency, ComponentFactoryDependency} from './view_compiler/view_compiler';\nimport {AppModuleCompiler} from './app_module_compiler';\nimport {TemplateParser} from './template_parser';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {CompilerConfig} from './config';\nimport * as ir from './output/output_ast';\nimport {jitStatements} from './output/output_jit';\nimport {interpretStatements} from './output/output_interpreter';\nimport {SyncAsyncResult} from './util';\nexport class RuntimeCompiler implements ComponentResolver, Compiler {\n  private _compiledTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledHostTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledAppModuleCache = new Map<Type, AppModuleFactory<any>>();\n\n  private _warnOnComponentResolver = true;\n\n  constructor(\n      private _injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      private _templateNormalizer: DirectiveNormalizer, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _appModuleCompiler: AppModuleCompiler, private _genConfig: CompilerConfig,\n      private _console: Console) {\n    const flatDeprecatedPlatformDirectives =\n        ListWrapper.flatten(_genConfig.deprecatedPlatformDirectives);\n    if (flatDeprecatedPlatformDirectives.length > 0) {\n      this._console.warn(\n          `Providing platform directives via the PLATFORM_DIRECTIVES provider or the \"CompilerConfig\" is deprecated. Provide platform directives via an @AppModule instead. Directives: ` +\n          flatDeprecatedPlatformDirectives.map(stringify));\n    }\n    const flatDeprecatedPlatformPipes = ListWrapper.flatten(_genConfig.deprecatedPlatformPipes);\n    if (flatDeprecatedPlatformPipes.length > 0) {\n      this._console.warn(\n          `Providing platform pipes via the PLATFORM_PIPES provider or the \"CompilerConfig\" is deprecated. Provide platform pipes via an @AppModule instead. Pipes: ` +\n          flatDeprecatedPlatformPipes.map(stringify));\n    }\n  }\n\n  get injector(): Injector { return this._injector; }\n\n  resolveComponent(component: Type|string): Promise<ComponentFactory<any>> {\n    if (isString(component)) {\n      return PromiseWrapper.reject(\n          new BaseException(`Cannot resolve component using '${component}'.`), null);\n    }\n    if (this._warnOnComponentResolver) {\n      this._console.warn(ComponentResolver.DynamicCompilationDeprecationMsg);\n      this._warnOnComponentResolver = false;\n    }\n    return this.compileComponentAsync(<ConcreteType<any>>component);\n  }\n\n  compileAppModuleSync<T>(moduleType: ConcreteType<T>, metadata: AppModuleMetadata = null):\n      AppModuleFactory<T> {\n    return this._compileAppModule(moduleType, true, metadata).syncResult;\n  }\n\n  compileAppModuleAsync<T>(moduleType: ConcreteType<T>, metadata: AppModuleMetadata = null):\n      Promise<AppModuleFactory<T>> {\n    return this._compileAppModule(moduleType, false, metadata).asyncResult;\n  }\n\n  private _compileAppModule<T>(\n      moduleType: ConcreteType<T>, isSync: boolean,\n      metadata: AppModuleMetadata = null): SyncAsyncResult<AppModuleFactory<T>> {\n    // Only cache if we read the metadata via the reflector,\n    // as we use the moduleType as cache key.\n    let useCache = !metadata;\n    let appModuleFactory = this._compiledAppModuleCache.get(moduleType);\n    let componentCompilePromises: Promise<any>[] = [];\n    if (!appModuleFactory || !useCache) {\n      var compileModuleMeta = this._metadataResolver.getAppModuleMetadata(moduleType, metadata);\n      let boundCompilerFactory = (parentResolver: ComponentResolver) => new BoundCompiler(\n          this, compileModuleMeta.directives.map(dir => dir.type.runtime),\n          compileModuleMeta.pipes.map((pipe) => pipe.type.runtime), parentResolver);\n      // Always provide a bound Compiler and ComponentResolver\n      compileModuleMeta.providers.push(\n          this._metadataResolver.getProviderMetadata(new Provider(Compiler, {\n            useFactory: boundCompilerFactory,\n            deps: [[new OptionalMetadata(), new SkipSelfMetadata(), ComponentResolver]]\n          })));\n      compileModuleMeta.providers.push(this._metadataResolver.getProviderMetadata(\n          new Provider(ComponentResolver, {useExisting: Compiler})));\n      var compileResult = this._appModuleCompiler.compile(compileModuleMeta);\n      compileResult.dependencies.forEach((dep) => {\n        let compileResult = this._compileComponent(\n            dep.comp.runtime, isSync,\n            compileModuleMeta.directives.map(compileType => <any>compileType.runtime),\n            compileModuleMeta.pipes.map(compileType => <any>compileType.runtime));\n        dep.placeholder.runtime = compileResult.syncResult;\n        componentCompilePromises.push(compileResult.asyncResult);\n        dep.placeholder.name = `compFactory_${dep.comp.name}`;\n      });\n      if (IS_DART || !this._genConfig.useJit) {\n        appModuleFactory =\n            interpretStatements(compileResult.statements, compileResult.appModuleFactoryVar);\n      } else {\n        appModuleFactory = jitStatements(\n            `${compileModuleMeta.type.name}.ngfactory.js`, compileResult.statements,\n            compileResult.appModuleFactoryVar);\n      }\n      if (useCache) {\n        this._compiledAppModuleCache.set(moduleType, appModuleFactory);\n      }\n    }\n    return new SyncAsyncResult(\n        appModuleFactory, Promise.all(componentCompilePromises).then(() => appModuleFactory));\n  }\n\n  compileComponentAsync<T>(compType: ConcreteType<T>): Promise<ComponentFactory<T>> {\n    return this._compileComponent(compType, false, [], []).asyncResult;\n  }\n\n  compileComponentSync<T>(compType: ConcreteType<T>): ComponentFactory<T> {\n    return this._compileComponent(compType, true, [], []).syncResult;\n  }\n\n  /**\n   * @internal\n   */\n  _compileComponent<T>(\n      compType: ConcreteType<T>, isSync: boolean, moduleDirectives: ConcreteType<any>[],\n      modulePipes: ConcreteType<any>[]): SyncAsyncResult<ComponentFactory<T>> {\n    var templates =\n        this._getTransitiveCompiledTemplates(compType, true, moduleDirectives, modulePipes);\n    var loadingPromises: Promise<any>[] = [];\n    templates.forEach((template) => {\n      if (template.loading) {\n        if (isSync) {\n          throw new ComponentStillLoadingError(template.compType.runtime);\n        } else {\n          loadingPromises.push(template.loading);\n        }\n      }\n    });\n    let compile = () => { templates.forEach((template) => { this._compileTemplate(template); }); };\n    if (isSync) {\n      compile();\n    }\n    let result = this._compiledHostTemplateCache.get(compType).proxyComponentFactory;\n    return new SyncAsyncResult(result, Promise.all(loadingPromises).then(() => {\n      compile();\n      return result;\n    }));\n  }\n\n  clearCacheFor(type: Type) {\n    this._compiledAppModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    var compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._templateNormalizer.clearCacheFor(compiledTemplate.normalizedCompMeta);\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n\n  clearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._templateNormalizer.clearCache();\n    this._compiledAppModuleCache.clear();\n  }\n\n  private _createCompiledHostTemplate(type: Type): CompiledTemplate {\n    var compiledTemplate = this._compiledHostTemplateCache.get(type);\n    if (isBlank(compiledTemplate)) {\n      var compMeta = this._metadataResolver.getDirectiveMetadata(type);\n      assertComponent(compMeta);\n      var hostMeta = createHostComponentMeta(compMeta.type, compMeta.selector);\n      compiledTemplate = new CompiledTemplate(\n          true, compMeta.selector, compMeta.type, [], [type], [], [],\n          this._templateNormalizer.normalizeDirective(hostMeta));\n      this._compiledHostTemplateCache.set(type, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _createCompiledTemplate(\n      type: Type, moduleDirectives: ConcreteType<any>[],\n      modulePipes: ConcreteType<any>[]): CompiledTemplate {\n    var compiledTemplate = this._compiledTemplateCache.get(type);\n    if (isBlank(compiledTemplate)) {\n      var compMeta = this._metadataResolver.getDirectiveMetadata(type);\n      assertComponent(compMeta);\n      var viewDirectives: CompileDirectiveMetadata[] = [];\n      moduleDirectives.forEach(\n          (type) => viewDirectives.push(this._metadataResolver.getDirectiveMetadata(type)));\n      var viewComponentTypes: Type[] = [];\n      this._metadataResolver.getViewDirectivesMetadata(type).forEach(dirOrComp => {\n        if (dirOrComp.isComponent) {\n          viewComponentTypes.push(dirOrComp.type.runtime);\n        } else {\n          viewDirectives.push(dirOrComp);\n        }\n      });\n      var precompileComponentTypes = compMeta.precompile.map((typeMeta) => typeMeta.runtime);\n      var pipes = [\n        ...modulePipes.map((type) => this._metadataResolver.getPipeMetadata(type)),\n        ...this._metadataResolver.getViewPipesMetadata(type)\n      ];\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.selector, compMeta.type, viewDirectives, viewComponentTypes,\n          precompileComponentTypes, pipes, this._templateNormalizer.normalizeDirective(compMeta));\n      this._compiledTemplateCache.set(type, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _getTransitiveCompiledTemplates(\n      compType: Type, isHost: boolean, moduleDirectives: ConcreteType<any>[],\n      modulePipes: ConcreteType<any>[],\n      target: Set<CompiledTemplate> = new Set<CompiledTemplate>()): Set<CompiledTemplate> {\n    var template = isHost ? this._createCompiledHostTemplate(compType) :\n                            this._createCompiledTemplate(compType, moduleDirectives, modulePipes);\n    if (!target.has(template)) {\n      target.add(template);\n      template.viewComponentTypes.forEach((compType) => {\n        this._getTransitiveCompiledTemplates(\n            compType, false, moduleDirectives, modulePipes, target);\n      });\n      template.precompileHostComponentTypes.forEach((compType) => {\n        this._getTransitiveCompiledTemplates(compType, true, moduleDirectives, modulePipes, target);\n      });\n    }\n    return target;\n  }\n\n  private _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    var compMeta = template.normalizedCompMeta;\n    var externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    var stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n    stylesCompileResult.externalStylesheets.forEach(\n        (r) => { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n    this._resolveStylesCompileResult(\n        stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n    var viewCompMetas = template.viewComponentTypes.map(\n        (compType) => this._compiledTemplateCache.get(compType).normalizedCompMeta);\n    var parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, template.viewDirectives.concat(viewCompMetas),\n        template.viewPipes, compMeta.type.name);\n    var compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, ir.variable(stylesCompileResult.componentStylesheet.stylesVar),\n        template.viewPipes);\n    var depTemplates = compileResult.dependencies.map((dep) => {\n      let depTemplate: CompiledTemplate;\n      if (dep instanceof ViewFactoryDependency) {\n        let vfd = <ViewFactoryDependency>dep;\n        depTemplate = this._compiledTemplateCache.get(vfd.comp.runtime);\n        vfd.placeholder.runtime = depTemplate.proxyViewFactory;\n        vfd.placeholder.name = `viewFactory_${vfd.comp.name}`;\n      } else if (dep instanceof ComponentFactoryDependency) {\n        let cfd = <ComponentFactoryDependency>dep;\n        depTemplate = this._compiledHostTemplateCache.get(cfd.comp.runtime);\n        cfd.placeholder.runtime = depTemplate.proxyComponentFactory;\n        cfd.placeholder.name = `compFactory_${cfd.comp.name}`;\n      }\n      return depTemplate;\n    });\n    var statements =\n        stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n    var factory: any;\n    if (IS_DART || !this._genConfig.useJit) {\n      factory = interpretStatements(statements, compileResult.viewFactoryVar);\n    } else {\n      factory = jitStatements(\n          `${template.compType.name}.ngfactory.js`, statements, compileResult.viewFactoryVar);\n    }\n    template.compiled(factory);\n  }\n\n  private _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n      var nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.valuePlaceholder.runtime = nestedStylesArr;\n      dep.valuePlaceholder.name = `importedStyles${i}`;\n    });\n  }\n\n  private _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (IS_DART || !this._genConfig.useJit) {\n      return interpretStatements(result.statements, result.stylesVar);\n    } else {\n      return jitStatements(`${result.meta.moduleUrl}.css.js`, result.statements, result.stylesVar);\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Injector, },\n{type: CompileMetadataResolver, },\n{type: DirectiveNormalizer, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: AppModuleCompiler, },\n{type: CompilerConfig, },\n{type: Console, },\n];\n}\n\nclass CompiledTemplate {\n  private _viewFactory: Function = null;\n  proxyViewFactory: Function;\n  proxyComponentFactory: ComponentFactory<any>;\n  loading: Promise<any> = null;\n  private _normalizedCompMeta: CompileDirectiveMetadata = null;\n  isCompiled = false;\n  isCompiledWithDeps = false;\n\n  constructor(\n      public isHost: boolean, selector: string, public compType: CompileIdentifierMetadata,\n      public viewDirectives: CompileDirectiveMetadata[], public viewComponentTypes: Type[],\n      public precompileHostComponentTypes: Type[], public viewPipes: CompilePipeMetadata[],\n      _normalizeResult: SyncAsyncResult<CompileDirectiveMetadata>) {\n    this.proxyViewFactory = (...args: any[]) => this._viewFactory.apply(null, args);\n    this.proxyComponentFactory = isHost ?\n        new ComponentFactory<any>(selector, this.proxyViewFactory, compType.runtime) :\n        null;\n    if (_normalizeResult.syncResult) {\n      this._normalizedCompMeta = _normalizeResult.syncResult;\n    } else {\n      this.loading = _normalizeResult.asyncResult.then((normalizedCompMeta) => {\n        this._normalizedCompMeta = normalizedCompMeta;\n        this.loading = null;\n      });\n    }\n  }\n\n  get normalizedCompMeta(): CompileDirectiveMetadata {\n    if (this.loading) {\n      throw new BaseException(`Template is still loading for ${this.compType.name}!`);\n    }\n    return this._normalizedCompMeta;\n  }\n\n  compiled(viewFactory: Function) {\n    this._viewFactory = viewFactory;\n    this.isCompiled = true;\n  }\n\n  depsCompiled() { this.isCompiledWithDeps = true; }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new BaseException(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n\n/**\n * A wrapper around `Compiler` and `ComponentResolver` that\n * provides default patform directives / pipes.\n */\nclass BoundCompiler implements Compiler, ComponentResolver {\n  constructor(\n      private _delegate: RuntimeCompiler, private _directives: any[], private _pipes: any[],\n      private _parentComponentResolver: ComponentResolver) {}\n\n  get injector(): Injector { return this._delegate.injector; }\n\n  resolveComponent(component: Type|string): Promise<ComponentFactory<any>> {\n    if (isString(component)) {\n      if (this._parentComponentResolver) {\n        return this._parentComponentResolver.resolveComponent(component);\n      } else {\n        return PromiseWrapper.reject(\n            new BaseException(`Cannot resolve component using '${component}'.`), null);\n      }\n    }\n    return this.compileComponentAsync(<ConcreteType<any>>component);\n  }\n\n  compileComponentAsync<T>(compType: ConcreteType<T>): Promise<ComponentFactory<T>> {\n    return this._delegate._compileComponent(compType, false, this._directives, this._pipes)\n        .asyncResult;\n  }\n\n  compileComponentSync<T>(compType: ConcreteType<T>): ComponentFactory<T> {\n    return this._delegate._compileComponent(compType, true, this._directives, this._pipes)\n        .syncResult;\n  }\n\n  compileAppModuleSync<T>(moduleType: ConcreteType<T>, metadata: AppModuleMetadata = null):\n      AppModuleFactory<T> {\n    return this._delegate.compileAppModuleSync(moduleType, metadata);\n  }\n\n  compileAppModuleAsync<T>(moduleType: ConcreteType<T>, metadata: AppModuleMetadata = null):\n      Promise<AppModuleFactory<T>> {\n    return this._delegate.compileAppModuleAsync(moduleType, metadata);\n  }\n\n  /**\n   * Clears all caches\n   */\n  clearCache(): void {\n    this._delegate.clearCache();\n    if (this._parentComponentResolver) {\n      this._parentComponentResolver.clearCache();\n    }\n  }\n\n  /**\n   * Clears the cache for the given component/appModule.\n   */\n  clearCacheFor(type: Type) { this._delegate.clearCacheFor(type); }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}