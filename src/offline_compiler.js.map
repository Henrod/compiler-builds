{"version":3,"file":"offline_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/offline_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AppModuleCompiler} from './app_module_compiler';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompilePipeMetadata, StaticSymbol, createHostComponentMeta} from './compile_metadata';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {ListWrapper} from './facade/collection';\nimport {BaseException} from './facade/exceptions';\nimport {Identifiers} from './identifiers';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {OutputEmitter} from './output/abstract_emitter';\nimport * as o from './output/output_ast';\nimport {CompiledStylesheet, StyleCompiler} from './style_compiler';\nimport {TemplateParser} from './template_parser';\nimport {ComponentFactoryDependency, ViewCompileResult, ViewCompiler, ViewFactoryDependency} from './view_compiler/view_compiler';\n\nexport class SourceModule {\n  constructor(public moduleUrl: string, public source: string) {}\n}\n\nexport class AppModulesSummary {\n  private _compAppModule = new Map<string, StaticSymbol>();\n  private _hashKey(type: StaticSymbol) { return `${type.filePath}#${type.name}`; }\n\n  hasComponent(component: StaticSymbol): boolean {\n    return this._compAppModule.has(this._hashKey(component));\n  }\n\n  addComponent(module: StaticSymbol, component: StaticSymbol) {\n    this._compAppModule.set(this._hashKey(component), module);\n  }\n\n  getModule(comp: StaticSymbol): StaticSymbol {\n    return this._compAppModule.get(this._hashKey(comp));\n  }\n}\nexport class OfflineCompiler {\n  constructor(\n      private _metadataResolver: CompileMetadataResolver,\n      private _directiveNormalizer: DirectiveNormalizer, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _appModuleCompiler: AppModuleCompiler, private _outputEmitter: OutputEmitter) {}\n\n  analyzeModules(appModules: StaticSymbol[]): AppModulesSummary {\n    let result = new AppModulesSummary();\n    appModules.forEach((appModule) => {\n      let appModuleMeta = this._metadataResolver.getAppModuleMetadata(appModule);\n      appModuleMeta.precompile.forEach(\n          (precompileComp) =>\n              this._getTransitiveComponents(appModule, <any>precompileComp.runtime, result));\n    });\n    return result;\n  }\n\n  private _getTransitiveComponents(\n      appModule: StaticSymbol, component: StaticSymbol,\n      target: AppModulesSummary = new AppModulesSummary()): AppModulesSummary {\n    var compMeta = this._metadataResolver.getDirectiveMetadata(<any>component);\n    // TODO(tbosch): preserve all modules per component, not just one.\n    // Then run the template parser with the union and the intersection of the modules (regarding\n    // directives/pipes)\n    // and report an error if some directives/pipes are only matched with the union but not with the\n    // intersection!\n    // -> this means that a component is used in the wrong way!\n    if (!compMeta.isComponent || target.hasComponent(component)) {\n      return target;\n    }\n    target.addComponent(appModule, component);\n    this._metadataResolver.getViewDirectivesMetadata(<any>component).forEach((dirMeta) => {\n      this._getTransitiveComponents(appModule, <any>dirMeta.type.runtime);\n    });\n    compMeta.precompile.forEach((precompileComp) => {\n      this._getTransitiveComponents(appModule, <any>precompileComp.type.runtime);\n    });\n    return target;\n  }\n\n  clearCache() {\n    this._directiveNormalizer.clearCache();\n    this._metadataResolver.clearCache();\n  }\n\n  compile(\n      moduleUrl: string, appModulesSummary: AppModulesSummary, components: StaticSymbol[],\n      appModules: StaticSymbol[]): Promise<SourceModule[]> {\n    let fileSuffix = _splitLastSuffix(moduleUrl)[1];\n    let statements: o.Statement[] = [];\n    let exportedVars: string[] = [];\n    let outputSourceModules: SourceModule[] = [];\n\n    // compile app modules\n    exportedVars.push(\n        ...appModules.map((appModule) => this._compileAppModule(appModule, statements)));\n\n    // compile components\n    return Promise\n        .all(components.map((compType) => {\n          let appModule = appModulesSummary.getModule(compType);\n          let appModuleDirectives: CompileDirectiveMetadata[] = [];\n          let appModulePipes: CompilePipeMetadata[] = [];\n          if (appModule) {\n            let appModuleMeta = this._metadataResolver.getAppModuleMetadata(appModule);\n            appModuleDirectives.push(...appModuleMeta.directives.map(\n                type => this._metadataResolver.getDirectiveMetadata(type.runtime)));\n            appModulePipes.push(...appModuleMeta.pipes.map(\n                type => this._metadataResolver.getPipeMetadata(type.runtime)));\n          }\n          return Promise\n              .all([\n                this._metadataResolver.getDirectiveMetadata(<any>compType), ...appModuleDirectives,\n                ...this._metadataResolver.getViewDirectivesMetadata(<any>compType)\n              ].map(dirMeta => this._directiveNormalizer.normalizeDirective(dirMeta).asyncResult))\n              .then((normalizedCompWithDirectives) => {\n                let compMeta = normalizedCompWithDirectives[0];\n                let dirMetas = normalizedCompWithDirectives.slice(1);\n                _assertComponent(compMeta);\n\n                // compile styles\n                let stylesCompileResults = this._styleCompiler.compileComponent(compMeta);\n                stylesCompileResults.externalStylesheets.forEach((compiledStyleSheet) => {\n                  outputSourceModules.push(this._codgenStyles(compiledStyleSheet, fileSuffix));\n                });\n\n                // compile components\n                exportedVars.push(this._compileComponentFactory(compMeta, fileSuffix, statements));\n                let pipeMetas = [\n                  ...appModulePipes,\n                  ...this._metadataResolver.getViewPipesMetadata(compMeta.type.runtime)\n                ];\n                exportedVars.push(this._compileComponent(\n                    compMeta, dirMetas, pipeMetas, stylesCompileResults.componentStylesheet,\n                    fileSuffix, statements));\n              });\n        }))\n        .then(() => {\n          if (statements.length > 0) {\n            outputSourceModules.unshift(this._codegenSourceModule(\n                _ngfactoryModuleUrl(moduleUrl), statements, exportedVars));\n          }\n          return outputSourceModules;\n        });\n  }\n\n  private _compileAppModule(appModuleType: StaticSymbol, targetStatements: o.Statement[]): string {\n    let appModuleMeta = this._metadataResolver.getAppModuleMetadata(appModuleType);\n    let appCompileResult = this._appModuleCompiler.compile(appModuleMeta);\n    appCompileResult.dependencies.forEach((dep) => {\n      dep.placeholder.name = _componentFactoryName(dep.comp);\n      dep.placeholder.moduleUrl = _ngfactoryModuleUrl(dep.comp.moduleUrl);\n    });\n    targetStatements.push(...appCompileResult.statements);\n    return appCompileResult.appModuleFactoryVar;\n  }\n\n  private _compileComponentFactory(\n      compMeta: CompileDirectiveMetadata, fileSuffix: string,\n      targetStatements: o.Statement[]): string {\n    var hostMeta = createHostComponentMeta(compMeta.type, compMeta.selector);\n    var hostViewFactoryVar =\n        this._compileComponent(hostMeta, [compMeta], [], null, fileSuffix, targetStatements);\n    var compFactoryVar = _componentFactoryName(compMeta.type);\n    targetStatements.push(\n        o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.ComponentFactory, [o.importType(compMeta.type)])\n                     .instantiate(\n                         [\n                           o.literal(compMeta.selector), o.variable(hostViewFactoryVar),\n                           o.importExpr(compMeta.type)\n                         ],\n                         o.importType(\n                             Identifiers.ComponentFactory, [o.importType(compMeta.type)],\n                             [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n    return compFactoryVar;\n  }\n\n  private _compileComponent(\n      compMeta: CompileDirectiveMetadata, directives: CompileDirectiveMetadata[],\n      pipes: CompilePipeMetadata[], componentStyles: CompiledStylesheet, fileSuffix: string,\n      targetStatements: o.Statement[]): string {\n    var parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, directives, pipes, compMeta.type.name);\n    var stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n    var viewResult =\n        this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, pipes);\n    if (componentStyles) {\n      ListWrapper.addAll(targetStatements, _resolveStyleStatements(componentStyles, fileSuffix));\n    }\n    ListWrapper.addAll(targetStatements, _resolveViewStatements(viewResult));\n    return viewResult.viewFactoryVar;\n  }\n\n  private _codgenStyles(stylesCompileResult: CompiledStylesheet, fileSuffix: string): SourceModule {\n    _resolveStyleStatements(stylesCompileResult, fileSuffix);\n    return this._codegenSourceModule(\n        _stylesModuleUrl(\n            stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix),\n        stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n  }\n\n  private _codegenSourceModule(\n      moduleUrl: string, statements: o.Statement[], exportedVars: string[]): SourceModule {\n    return new SourceModule(\n        moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n  }\n}\n\nfunction _resolveViewStatements(compileResult: ViewCompileResult): o.Statement[] {\n  compileResult.dependencies.forEach((dep) => {\n    if (dep instanceof ViewFactoryDependency) {\n      let vfd = <ViewFactoryDependency>dep;\n      vfd.placeholder.moduleUrl = _ngfactoryModuleUrl(vfd.comp.moduleUrl);\n    } else if (dep instanceof ComponentFactoryDependency) {\n      let cfd = <ComponentFactoryDependency>dep;\n      cfd.placeholder.name = _componentFactoryName(cfd.comp);\n      cfd.placeholder.moduleUrl = _ngfactoryModuleUrl(cfd.comp.moduleUrl);\n    }\n  });\n  return compileResult.statements;\n}\n\n\nfunction _resolveStyleStatements(\n    compileResult: CompiledStylesheet, fileSuffix: string): o.Statement[] {\n  compileResult.dependencies.forEach((dep) => {\n    dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix);\n  });\n  return compileResult.statements;\n}\n\nfunction _ngfactoryModuleUrl(compUrl: string): string {\n  var urlWithSuffix = _splitLastSuffix(compUrl);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n\nfunction _componentFactoryName(comp: CompileIdentifierMetadata): string {\n  return `${comp.name}NgFactory`;\n}\n\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return shim ? `${stylesheetUrl}.shim${suffix}` : `${stylesheetUrl}${suffix}`;\n}\n\nfunction _assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new BaseException(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n\nfunction _splitLastSuffix(path: string): string[] {\n  let lastDot = path.lastIndexOf('.');\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  } else {\n    return [path, ''];\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}