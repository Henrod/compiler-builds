{"version":3,"sources":["../../../../../modules/@angular/compiler/src/aot/util.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,MAAM,gBAAgB,CAAhB,uBAAA,GAA0B,kCAAA,CAAmC;AACnE,MAAM,gBAAgB,CAAhB,UAAA,GAAa,eAAA,CAAgB;AACnC;;;GAGG;AACH,MAHC,4BAAA,QAAA;IAIC,MAAM,gBAAgB,CAHhB,aAAA,GAAgB,qBAAA,CAAsB,QAAC,CAAQ,CAAC;IAItD,MAAM,CAHC,GAAA,aAAI,CAAa,CAAC,CAAC,aAAC,aAAa,CAAa,CAAC,CAAC,EAAC,CAAE;AAI5D,CAAC;AACD;;;GAGG;AACH,MANC,yBAAA,QAAA;IAOC,MAAM,CANC,QAAA,CAAS,OAAC,CAAO,UAAC,EAAW,GAAA,CAAI,CAAC;AAO3C,CAAC;AACD;;;GAGG;AACH,MATC,0BAAA,QAAA;IAUC,MAAM,CATC,UAAA,CAAW,IAAC,CAAI,QAAC,CAAQ,CAAC;AAUnC,CAAC;AACD;;;GAGG;AACH,MAZC,gCAAA,IAAA;IAaC,EAAE,CAAC,CAAC,IAZC,CAAI,QAAC,CAAQ,OAAC,CAAO,CAAC,CAAC,CAAA;QAa1B,MAAM,CAZC,CAAA,IAAE,CAAI,KAAC,CAAK,CAAC,EAAE,CAAA,CAAE,CAAC,EAAE,KAAA,CAAM,CAAC;IAapC,CAAC;IAED,MAAM,gBAAgB,CAZhB,OAAA,GAAU,IAAA,CAAK,WAAC,CAAW,GAAC,CAAG,CAAC;IActC,EAAE,CAAC,CAAC,OAZC,KAAW,CAAA,CAAE,CAAC,CAAC,CAAA;QAalB,MAAM,CAZC,CAAA,IAAE,CAAI,SAAC,CAAS,CAAC,EAAE,OAAA,CAAQ,EAAE,IAAA,CAAK,SAAC,CAAS,OAAC,CAAO,CAAC,CAAC;IAa/D,CAAC;IAED,MAAM,CAZC,CAAA,IAAE,EAAK,EAAA,CAAG,CAAC;AAapB,CAAC;AACD;;;GAGG;AACH,MAfC,0BAAA,QAAA;IAgBC,MAAM,gBAAgB,CAfhB,qBAAA,GAAwB,QAAA,CAAS,OAAC,CAAO,uBAAC,EAAwB,EAAA,CAAG,CAAC;IAgB5E,MAAM,CAfC,GAAA,qBAAI,iBAAqB,CAAiB;AAgBnD,CAAC","file":"util.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst /** @type {?} */ STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst /** @type {?} */ NG_FACTORY = /\\.ngfactory\\./;\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function ngfactoryFilePath(filePath: string): string {\n  const /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripNgFactory(filePath: string): string {\n  return filePath.replace(NG_FACTORY, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function isNgFactoryFile(filePath: string): boolean {\n  return NG_FACTORY.test(filePath);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nexport function splitTypescriptSuffix(path: string): string[] {\n  if (path.endsWith('.d.ts')) {\n    return [path.slice(0, -5), '.ts'];\n  }\n\n  const /** @type {?} */ lastDot = path.lastIndexOf('.');\n\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  }\n\n  return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nexport function summaryFileName(fileName: string): string {\n  const /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n  return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n"]}