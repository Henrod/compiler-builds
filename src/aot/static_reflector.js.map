{"version":3,"sources":["../../../../../modules/@angular/compiler/src/aot/static_reflector.ts"],"names":[],"mappings":"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","file":"static_reflector.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Component, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Inject, Injectable, Input, NgModule, Optional, Output, Pipe, Self, SkipSelf, ViewChild, ViewChildren, animate, group, keyframes, sequence, state, style, transition, trigger} from '@angular/core';\n\nimport {ReflectorReader} from '../private_import_core';\nimport {syntaxError} from '../util';\n\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst /** @type {?} */ ANGULAR_IMPORT_LOCATIONS = {\n  coreDecorators: '@angular/core/src/metadata',\n  diDecorators: '@angular/core/src/di/metadata',\n  diMetadata: '@angular/core/src/di/metadata',\n  diInjectionToken: '@angular/core/src/di/injection_token',\n  diOpaqueToken: '@angular/core/src/di/injection_token',\n  animationMetadata: '@angular/core/src/animation/metadata',\n  provider: '@angular/core/src/di/provider'\n};\n\nconst /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements ReflectorReader {\nprivate annotationCache = new Map<StaticSymbol, any[]>();\nprivate propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\nprivate parameterCache = new Map<StaticSymbol, any[]>();\nprivate methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\nprivate conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\nprivate injectionToken: StaticSymbol;\nprivate opaqueToken: StaticSymbol;\n/**\n * @param {?} symbolResolver\n * @param {?=} knownMetadataClasses\n * @param {?=} knownMetadataFunctions\n * @param {?=} errorRecorder\n */\nconstructor(\nprivate symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\nprivate errorRecorder?: (error: any, fileName: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nimportUri(typeOrFunc: StaticSymbol): string {\n    const /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return staticSymbol ? staticSymbol.filePath : null;\n  }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string): StaticSymbol {\n    return this.findDeclaration(moduleUrl, name);\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @param {?=} containingFile\n * @return {?}\n */\nfindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n/**\n * @param {?} symbol\n * @return {?}\n */\nfindSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      return this.findSymbolDeclaration(resolvedSymbol.metadata);\n    } else {\n      return symbol;\n    }\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any {\n    const /** @type {?} */ staticSymbol: StaticSymbol = enumIdentifier;\n    return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, [name]);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic annotations(type: StaticSymbol): any[] {\n    let /** @type {?} */ annotations = this.annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType && (parentType instanceof StaticSymbol)) {\n          const /** @type {?} */ parentAnnotations = this.annotations(parentType);\n          annotations.push(...parentAnnotations);\n        }\n      }\n      if (classMetadata['decorators']) {\n        const /** @type {?} */ ownAnnotations: any[] = this.simplify(type, classMetadata['decorators']);\n        annotations.push(...ownAnnotations);\n      }\n      this.annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let /** @type {?} */ propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n          const /** @type {?} */ parentPropMetadata = this.propMetadata(parentType);\n          Object.keys(parentPropMetadata).forEach((parentProp) => {\n            propMetadata[parentProp] = parentPropMetadata[parentProp];\n          });\n        }\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ prop = ( /** @type {?} */((<any[]>propData)))\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata[propName]) {\n          decorators.push(...propMetadata[propName]);\n        }\n        propMetadata[propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let /** @type {?} */ parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n        const /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n        const /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const /** @type {?} */ ctor = ( /** @type {?} */((<any[]>ctorData))).find(a => a['__symbolic'] == 'constructor');\n          const /** @type {?} */ parameterTypes = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameters'] || [])));\n          const /** @type {?} */ parameterDecorators = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameterDecorators'] || [])));\n          parameters = [];\n          parameterTypes.forEach((paramType, index) => {\n            const /** @type {?} */ nestedResult: any[] = [];\n            if (paramType) {\n              nestedResult.push(paramType);\n            }\n            const /** @type {?} */ decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            }\n            parameters.push(nestedResult);\n          });\n        } else if (classMetadata['extends']) {\n          const /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n          if (parentType instanceof StaticSymbol) {\n            parameters = this.parameters(parentType);\n          }\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _methodNames(type: any): {[key: string]: boolean} {\n    let /** @type {?} */ methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n          const /** @type {?} */ parentMethodNames = this._methodNames(parentType);\n          Object.keys(parentMethodNames).forEach((parentProp) => {\n            methodNames[parentProp] = parentMethodNames[parentProp];\n          });\n        }\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ isMethod = ( /** @type {?} */((<any[]>propData))).some(a => a['__symbolic'] == 'method');\n        methodNames[propName] = methodNames[propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctor\n * @return {?}\n */\nprivate _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n/**\n * @param {?} type\n * @param {?} fn\n * @return {?}\n */\nprivate _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n/**\n * @return {?}\n */\nprivate initializeConversionMap(): void {\n    const {coreDecorators, diDecorators,      diMetadata, diInjectionToken,\n           diOpaqueToken,  animationMetadata, provider} = ANGULAR_IMPORT_LOCATIONS;\n    this.injectionToken = this.findDeclaration(diInjectionToken, 'InjectionToken');\n    this.opaqueToken = this.findDeclaration(diInjectionToken, 'OpaqueToken');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Host'), Host);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(diDecorators, 'Injectable'), Injectable);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Inject'), Inject);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Optional'), Optional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Attribute'), Attribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ContentChild'), ContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ContentChildren'), ContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ViewChild'), ViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ViewChildren'), ViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Input'), Input);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Output'), Output);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Pipe'), Pipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'HostBinding'), HostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'HostListener'), HostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Directive'), Directive);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Component'), Component);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'NgModule'), NgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Host'), Host);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Optional'), Optional);\n\n    this._registerFunction(this.findDeclaration(animationMetadata, 'trigger'), trigger);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'state'), state);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'transition'), transition);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'style'), style);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'animate'), animate);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'keyframes'), keyframes);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'sequence'), sequence);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'group'), group);\n  }\n/**\n * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n * All types passed to the StaticResolver should be pseudo-types returned by this method.\n * \n * @param {?} declarationFile the absolute path of the file where the symbol is declared\n * @param {?} name the name of the type.\n * @param {?=} members\n * @return {?}\n */\ngetStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n/**\n * @param {?} error\n * @param {?} context\n * @param {?=} path\n * @return {?}\n */\nprivate reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n/**\n * Simplify but discard any errors\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nprivate trySimplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName: string) => {};\n    const /** @type {?} */ result = this.simplify(context, value);\n    this.errorRecorder = originalRecorder;\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\npublic simplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ self = this;\n    let /** @type {?} */ scope = BindingScope.empty;\n    const /** @type {?} */ calling = new Map<StaticSymbol, boolean>();\n/**\n * @param {?} context\n * @param {?} value\n * @param {?} depth\n * @return {?}\n */\nfunction simplifyInContext(context: StaticSymbol, value: any, depth: number): any {\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nfunction resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n/**\n * @param {?} functionSymbol\n * @param {?} targetFunction\n * @param {?} args\n * @return {?}\n */\nfunction simplifyCall(functionSymbol: StaticSymbol, targetFunction: any, args: any[]) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            throw new Error('Recursion not supported');\n          }\n          calling.set(functionSymbol, true);\n          try {\n            const /** @type {?} */ value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const /** @type {?} */ parameters: string[] = targetFunction['parameters'];\n              const /** @type {?} */ defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyInContext(context, arg, depth + 1));\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              const /** @type {?} */ functionScope = BindingScope.build();\n              for (let /** @type {?} */ i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const /** @type {?} */ oldScope = scope;\n              let /** @type {?} */ result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyInContext(functionSymbol, value, depth + 1);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return {__symbolic: 'ignore'};\n        }\n        return simplify(\n            {__symbolic: 'error', message: 'Function call not supported', context: functionSymbol});\n      }\n/**\n * @param {?} expression\n * @return {?}\n */\nfunction simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const /** @type {?} */ result: any[] = [];\n          for (const /** @type {?} */ item of ( /** @type {?} */((<any>expression)))) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              const /** @type {?} */ spreadArray = simplify(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const /** @type {?} */ spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const /** @type {?} */ value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols\n          if (expression === self.injectionToken || expression === self.opaqueToken ||\n              self.conversionMap.has(expression)) {\n            return expression;\n          } else {\n            const /** @type {?} */ staticSymbol = expression;\n            const /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue) {\n              return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let /** @type {?} */ staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let /** @type {?} */ left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let /** @type {?} */ right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let /** @type {?} */ condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let /** @type {?} */ operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let /** @type {?} */ indexTarget = simplify(expression['expression']);\n                let /** @type {?} */ index = simplify(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const /** @type {?} */ member = expression['member'];\n                let /** @type {?} */ selectContext = context;\n                let /** @type {?} */ selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const /** @type {?} */ members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue) {\n                    return simplifyInContext(selectContext, declarationValue, depth + 1);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references,\n                // as symbol references have been converted into StaticSymbols already\n                // in the StaticSymbolResolver!\n                const /** @type {?} */ name: string = expression['name'];\n                const /** @type {?} */ localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                    // if somebody calls new InjectionToken, don't create an InjectionToken,\n                    // but rather return the symbol to which the InjectionToken is assigned to.\n                    return context;\n                  }\n                  const /** @type {?} */ argExpressions: any[] = expression['arguments'] || [];\n                  let /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const /** @type {?} */ args =\n                        argExpressions.map(arg => simplifyInContext(context, arg, depth + 1));\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                  }\n                }\n                break;\n              case 'error':\n                let /** @type {?} */ message = produceErrorMessage(expression);\n                if (expression['line']) {\n                  message =\n                      `${message} (position ${expression['line']+1}:${expression['character']+1} in the original .ts file)`;\n                  throw positionalError(\n                      message, context.filePath, expression['line'], expression['character']);\n                }\n                throw new Error(message);\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => simplify(value));\n        }\n        return null;\n      }\n\n      try {\n        return simplify(value);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ members = context.members.length ? `.${context.members.join('.')}` : '';\n        const /** @type {?} */ message =\n            `${e.message}, resolving symbol ${context.name}${members} in ${context.filePath}`;\n        if (e.fileName) {\n          throw positionalError(message, e.fileName, e.line, e.column);\n        }\n        throw syntaxError(message);\n      }\n    }\n\n    const /** @type {?} */ recordedSimplifyInContext = (context: StaticSymbol, value: any, depth: number) => {\n      try {\n        return simplifyInContext(context, value, depth);\n      } catch ( /** @type {?} */e) {\n        this.reportError(e, context);\n      }\n    };\n\n    const /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n                                        simplifyInContext(context, value, 0);\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n}\n\nfunction StaticReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticReflector.prototype.annotationCache;\n/** @type {?} */\nStaticReflector.prototype.propertyCache;\n/** @type {?} */\nStaticReflector.prototype.parameterCache;\n/** @type {?} */\nStaticReflector.prototype.methodCache;\n/** @type {?} */\nStaticReflector.prototype.conversionMap;\n/** @type {?} */\nStaticReflector.prototype.injectionToken;\n/** @type {?} */\nStaticReflector.prototype.opaqueToken;\n/** @type {?} */\nStaticReflector.prototype.symbolResolver;\n/** @type {?} */\nStaticReflector.prototype.errorRecorder;\n}\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let /** @type {?} */ prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n      break;\n  }\n  return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error: any): string {\n  return `Error encountered resolving symbol values statically. ${expandedMessage(error)}`;\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const /** @type {?} */ result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const /** @type {?} */ value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n/**\n * @abstract\n */\nabstract class BindingScope {\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nresolve(name: string) {}\npublic static missing = {};\npublic static empty: BindingScope = {resolve: name => BindingScope.missing};\n/**\n * @return {?}\n */\npublic static build(): BindingScopeBuilder {\n    const /** @type {?} */ current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nfunction BindingScope_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScope.missing;\n/** @type {?} */\nBindingScope.empty;\n}\n\nclass PopulatedScope extends BindingScope {\n/**\n * @param {?} bindings\n */\nconstructor(private bindings: Map<string, any>) { super(); }\n/**\n * @param {?} name\n * @return {?}\n */\nresolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction PopulatedScope_tsickle_Closure_declarations() {\n/** @type {?} */\nPopulatedScope.prototype.bindings;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message: string, fileName: string, line: number, column: number): Error {\n  const /** @type {?} */ result = new Error(message);\n  ( /** @type {?} */((result as any))).fileName = fileName;\n  ( /** @type {?} */((result as any))).line = line;\n  ( /** @type {?} */((result as any))).column = column;\n  return result;\n}\n"]}