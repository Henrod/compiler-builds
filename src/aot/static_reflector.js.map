{"version":3,"sources":["../../../../../modules/@angular/compiler/src/aot/static_reflector.ts"],"names":[],"mappings":"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","file":"static_reflector.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Component, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Inject, Injectable, Input, NgModule, Optional, Output, Pipe, Self, SkipSelf, ViewChild, ViewChildren, animate, group, keyframes, sequence, state, style, transition, trigger} from '@angular/core';\n\nimport {ReflectorReader} from '../private_import_core';\nimport {syntaxError} from '../util';\n\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst /** @type {?} */ ANGULAR_IMPORT_LOCATIONS = {\n  coreDecorators: '@angular/core/src/metadata',\n  diDecorators: '@angular/core/src/di/metadata',\n  diMetadata: '@angular/core/src/di/metadata',\n  diInjectionToken: '@angular/core/src/di/injection_token',\n  diOpaqueToken: '@angular/core/src/di/injection_token',\n  animationMetadata: '@angular/core/src/animation/metadata',\n  provider: '@angular/core/src/di/provider'\n};\n\nconst /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements ReflectorReader {\nprivate annotationCache = new Map<StaticSymbol, any[]>();\nprivate propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\nprivate parameterCache = new Map<StaticSymbol, any[]>();\nprivate methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\nprivate conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\nprivate injectionToken: StaticSymbol;\nprivate opaqueToken: StaticSymbol;\n/**\n * @param {?} symbolResolver\n * @param {?=} knownMetadataClasses\n * @param {?=} knownMetadataFunctions\n * @param {?=} errorRecorder\n */\nconstructor(\nprivate symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\nprivate errorRecorder?: (error: any, fileName: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nimportUri(typeOrFunc: StaticSymbol): string {\n    const /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return staticSymbol ? staticSymbol.filePath : null;\n  }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[]): StaticSymbol {\n    const /** @type {?} */ importSymbol = this.getStaticSymbol(moduleUrl, name);\n    const /** @type {?} */ rootSymbol = this.findDeclaration(moduleUrl, name);\n    if (importSymbol != rootSymbol) {\n      this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n    }\n    if (members && members.length) {\n      return this.getStaticSymbol(rootSymbol.filePath, rootSymbol.name, members);\n    }\n    return rootSymbol;\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @param {?=} containingFile\n * @return {?}\n */\nfindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n/**\n * @param {?} symbol\n * @return {?}\n */\nfindSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      return this.findSymbolDeclaration(resolvedSymbol.metadata);\n    } else {\n      return symbol;\n    }\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any {\n    const /** @type {?} */ staticSymbol: StaticSymbol = enumIdentifier;\n    const /** @type {?} */ members = (staticSymbol.members || []).concat(name);\n    return this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name, members);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic annotations(type: StaticSymbol): any[] {\n    let /** @type {?} */ annotations = this.annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType && (parentType instanceof StaticSymbol)) {\n          const /** @type {?} */ parentAnnotations = this.annotations(parentType);\n          annotations.push(...parentAnnotations);\n        }\n      }\n      if (classMetadata['decorators']) {\n        const /** @type {?} */ ownAnnotations: any[] = this.simplify(type, classMetadata['decorators']);\n        annotations.push(...ownAnnotations);\n      }\n      this.annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let /** @type {?} */ propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n          const /** @type {?} */ parentPropMetadata = this.propMetadata(parentType);\n          Object.keys(parentPropMetadata).forEach((parentProp) => {\n            propMetadata[parentProp] = parentPropMetadata[parentProp];\n          });\n        }\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ prop = ( /** @type {?} */((<any[]>propData)))\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata[propName]) {\n          decorators.push(...propMetadata[propName]);\n        }\n        propMetadata[propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let /** @type {?} */ parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n        const /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n        const /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const /** @type {?} */ ctor = ( /** @type {?} */((<any[]>ctorData))).find(a => a['__symbolic'] == 'constructor');\n          const /** @type {?} */ parameterTypes = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameters'] || [])));\n          const /** @type {?} */ parameterDecorators = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameterDecorators'] || [])));\n          parameters = [];\n          parameterTypes.forEach((paramType, index) => {\n            const /** @type {?} */ nestedResult: any[] = [];\n            if (paramType) {\n              nestedResult.push(paramType);\n            }\n            const /** @type {?} */ decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            }\n            parameters.push(nestedResult);\n          });\n        } else if (classMetadata['extends']) {\n          const /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n          if (parentType instanceof StaticSymbol) {\n            parameters = this.parameters(parentType);\n          }\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _methodNames(type: any): {[key: string]: boolean} {\n    let /** @type {?} */ methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      if (classMetadata['extends']) {\n        const /** @type {?} */ parentType = this.simplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n          const /** @type {?} */ parentMethodNames = this._methodNames(parentType);\n          Object.keys(parentMethodNames).forEach((parentProp) => {\n            methodNames[parentProp] = parentMethodNames[parentProp];\n          });\n        }\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ isMethod = ( /** @type {?} */((<any[]>propData))).some(a => a['__symbolic'] == 'method');\n        methodNames[propName] = methodNames[propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctor\n * @return {?}\n */\nprivate _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n/**\n * @param {?} type\n * @param {?} fn\n * @return {?}\n */\nprivate _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n/**\n * @return {?}\n */\nprivate initializeConversionMap(): void {\n    const {coreDecorators, diDecorators,      diMetadata, diInjectionToken,\n           diOpaqueToken,  animationMetadata, provider} = ANGULAR_IMPORT_LOCATIONS;\n    this.injectionToken = this.findDeclaration(diInjectionToken, 'InjectionToken');\n    this.opaqueToken = this.findDeclaration(diInjectionToken, 'OpaqueToken');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Host'), Host);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(diDecorators, 'Injectable'), Injectable);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Inject'), Inject);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diDecorators, 'Optional'), Optional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Attribute'), Attribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ContentChild'), ContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ContentChildren'), ContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ViewChild'), ViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'ViewChildren'), ViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Input'), Input);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Output'), Output);\n    this._registerDecoratorOrConstructor(this.findDeclaration(coreDecorators, 'Pipe'), Pipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'HostBinding'), HostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'HostListener'), HostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Directive'), Directive);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'Component'), Component);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(coreDecorators, 'NgModule'), NgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Host'), Host);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(diMetadata, 'Optional'), Optional);\n\n    this._registerFunction(this.findDeclaration(animationMetadata, 'trigger'), trigger);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'state'), state);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'transition'), transition);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'style'), style);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'animate'), animate);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'keyframes'), keyframes);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'sequence'), sequence);\n    this._registerFunction(this.findDeclaration(animationMetadata, 'group'), group);\n  }\n/**\n * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n * All types passed to the StaticResolver should be pseudo-types returned by this method.\n * \n * @param {?} declarationFile the absolute path of the file where the symbol is declared\n * @param {?} name the name of the type.\n * @param {?=} members\n * @return {?}\n */\ngetStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n/**\n * @param {?} error\n * @param {?} context\n * @param {?=} path\n * @return {?}\n */\nprivate reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n/**\n * Simplify but discard any errors\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nprivate trySimplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName: string) => {};\n    const /** @type {?} */ result = this.simplify(context, value);\n    this.errorRecorder = originalRecorder;\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\npublic simplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ self = this;\n    let /** @type {?} */ scope = BindingScope.empty;\n    const /** @type {?} */ calling = new Map<StaticSymbol, boolean>();\n/**\n * @param {?} context\n * @param {?} value\n * @param {?} depth\n * @return {?}\n */\nfunction simplifyInContext(context: StaticSymbol, value: any, depth: number): any {\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nfunction resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n/**\n * @param {?} functionSymbol\n * @param {?} targetFunction\n * @param {?} args\n * @return {?}\n */\nfunction simplifyCall(functionSymbol: StaticSymbol, targetFunction: any, args: any[]) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            throw new Error('Recursion not supported');\n          }\n          calling.set(functionSymbol, true);\n          try {\n            const /** @type {?} */ value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const /** @type {?} */ parameters: string[] = targetFunction['parameters'];\n              const /** @type {?} */ defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyInContext(context, arg, depth + 1));\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              const /** @type {?} */ functionScope = BindingScope.build();\n              for (let /** @type {?} */ i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const /** @type {?} */ oldScope = scope;\n              let /** @type {?} */ result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyInContext(functionSymbol, value, depth + 1);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return {__symbolic: 'ignore'};\n        }\n        return simplify(\n            {__symbolic: 'error', message: 'Function call not supported', context: functionSymbol});\n      }\n/**\n * @param {?} expression\n * @return {?}\n */\nfunction simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const /** @type {?} */ result: any[] = [];\n          for (const /** @type {?} */ item of ( /** @type {?} */((<any>expression)))) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              const /** @type {?} */ spreadArray = simplify(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const /** @type {?} */ spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const /** @type {?} */ value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols\n          if (expression === self.injectionToken || expression === self.opaqueToken ||\n              self.conversionMap.has(expression)) {\n            return expression;\n          } else {\n            const /** @type {?} */ staticSymbol = expression;\n            const /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue) {\n              return simplifyInContext(staticSymbol, declarationValue, depth + 1);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let /** @type {?} */ staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let /** @type {?} */ left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let /** @type {?} */ right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let /** @type {?} */ condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let /** @type {?} */ operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let /** @type {?} */ indexTarget = simplify(expression['expression']);\n                let /** @type {?} */ index = simplify(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const /** @type {?} */ member = expression['member'];\n                let /** @type {?} */ selectContext = context;\n                let /** @type {?} */ selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const /** @type {?} */ members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue) {\n                    return simplifyInContext(selectContext, declarationValue, depth + 1);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyInContext(selectContext, selectTarget[member], depth + 1);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references,\n                // as symbol references have been converted into StaticSymbols already\n                // in the StaticSymbolResolver!\n                const /** @type {?} */ name: string = expression['name'];\n                const /** @type {?} */ localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                    // if somebody calls new InjectionToken, don't create an InjectionToken,\n                    // but rather return the symbol to which the InjectionToken is assigned to.\n                    return context;\n                  }\n                  const /** @type {?} */ argExpressions: any[] = expression['arguments'] || [];\n                  let /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const /** @type {?} */ args =\n                        argExpressions.map(arg => simplifyInContext(context, arg, depth + 1));\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                  }\n                }\n                break;\n              case 'error':\n                let /** @type {?} */ message = produceErrorMessage(expression);\n                if (expression['line']) {\n                  message =\n                      `${message} (position ${expression['line']+1}:${expression['character']+1} in the original .ts file)`;\n                  throw positionalError(\n                      message, context.filePath, expression['line'], expression['character']);\n                }\n                throw new Error(message);\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => simplify(value));\n        }\n        return null;\n      }\n\n      try {\n        return simplify(value);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ members = context.members.length ? `.${context.members.join('.')}` : '';\n        const /** @type {?} */ message =\n            `${e.message}, resolving symbol ${context.name}${members} in ${context.filePath}`;\n        if (e.fileName) {\n          throw positionalError(message, e.fileName, e.line, e.column);\n        }\n        throw syntaxError(message);\n      }\n    }\n\n    const /** @type {?} */ recordedSimplifyInContext = (context: StaticSymbol, value: any, depth: number) => {\n      try {\n        return simplifyInContext(context, value, depth);\n      } catch ( /** @type {?} */e) {\n        this.reportError(e, context);\n      }\n    };\n\n    const /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value, 0) :\n                                        simplifyInContext(context, value, 0);\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n}\n\nfunction StaticReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticReflector.prototype.annotationCache;\n/** @type {?} */\nStaticReflector.prototype.propertyCache;\n/** @type {?} */\nStaticReflector.prototype.parameterCache;\n/** @type {?} */\nStaticReflector.prototype.methodCache;\n/** @type {?} */\nStaticReflector.prototype.conversionMap;\n/** @type {?} */\nStaticReflector.prototype.injectionToken;\n/** @type {?} */\nStaticReflector.prototype.opaqueToken;\n/** @type {?} */\nStaticReflector.prototype.symbolResolver;\n/** @type {?} */\nStaticReflector.prototype.errorRecorder;\n}\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let /** @type {?} */ prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n      break;\n  }\n  return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error: any): string {\n  return `Error encountered resolving symbol values statically. ${expandedMessage(error)}`;\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const /** @type {?} */ result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const /** @type {?} */ value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n/**\n * @abstract\n */\nabstract class BindingScope {\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nresolve(name: string) {}\npublic static missing = {};\npublic static empty: BindingScope = {resolve: name => BindingScope.missing};\n/**\n * @return {?}\n */\npublic static build(): BindingScopeBuilder {\n    const /** @type {?} */ current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nfunction BindingScope_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScope.missing;\n/** @type {?} */\nBindingScope.empty;\n}\n\nclass PopulatedScope extends BindingScope {\n/**\n * @param {?} bindings\n */\nconstructor(private bindings: Map<string, any>) { super(); }\n/**\n * @param {?} name\n * @return {?}\n */\nresolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction PopulatedScope_tsickle_Closure_declarations() {\n/** @type {?} */\nPopulatedScope.prototype.bindings;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message: string, fileName: string, line: number, column: number): Error {\n  const /** @type {?} */ result = new Error(message);\n  ( /** @type {?} */((result as any))).fileName = fileName;\n  ( /** @type {?} */((result as any))).line = line;\n  ( /** @type {?} */((result as any))).column = column;\n  return result;\n}\n"]}