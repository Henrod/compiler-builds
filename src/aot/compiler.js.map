{"version":3,"sources":["../../../../../modules/@angular/compiler/src/aot/compiler.ts"],"names":[],"mappings":"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","file":"compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationCompiler} from '../animation/animation_compiler';\nimport {AnimationParser} from '../animation/animation_parser';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileProviderMetadata, componentFactoryName, createHostComponentMeta, identifierName} from '../compile_metadata';\nimport {DirectiveWrapperCompiler} from '../directive_wrapper_compiler';\nimport {ListWrapper} from '../facade/collection';\nimport {Identifiers, createIdentifier, createIdentifierToken} from '../identifiers';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {OutputEmitter} from '../output/abstract_emitter';\nimport * as o from '../output/output_ast';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {AotCompilerHost} from './compiler_host';\nimport {GeneratedFile} from './generated_file';\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\nimport {serializeSummaries} from './summary_serializer';\nimport {ngfactoryFilePath, splitTypescriptSuffix, summaryFileName} from './util';\nexport class AotCompiler {\nprivate _animationCompiler = new AnimationCompiler();\n/**\n * @param {?} _host\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _dirWrapperCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _outputEmitter\n * @param {?} _summaryResolver\n * @param {?} _localeId\n * @param {?} _translationFormat\n * @param {?} _animationParser\n * @param {?} _symbolResolver\n */\nconstructor(\nprivate _host: AotCompilerHost,\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _dirWrapperCompiler: DirectiveWrapperCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _outputEmitter: OutputEmitter,\nprivate _summaryResolver: SummaryResolver<StaticSymbol>,\nprivate _localeId: string,\nprivate _translationFormat: string,\nprivate _animationParser: AnimationParser,\nprivate _symbolResolver: StaticSymbolResolver) {}\n/**\n * @return {?}\n */\nclearCache() { this._metadataResolver.clearCache(); }\n/**\n * @param {?} rootFiles\n * @return {?}\n */\ncompileAll(rootFiles: string[]): Promise<GeneratedFile[]> {\n    const /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n    const {ngModuleByPipeOrDirective, files, ngModules} =\n        analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n    return Promise\n        .all(ngModules.map(\n            ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => {\n          const /** @type {?} */ sourceModules = files.map(\n              file => this._compileSrcFile(\n                  file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes,\n                  file.ngModules, file.injectables));\n          return ListWrapper.flatten(sourceModules);\n        });\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} ngModuleByPipeOrDirective\n * @param {?} directives\n * @param {?} pipes\n * @param {?} ngModules\n * @param {?} injectables\n * @return {?}\n */\nprivate _compileSrcFile(\n      srcFileUrl: string, ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>,\n      directives: StaticSymbol[], pipes: StaticSymbol[], ngModules: StaticSymbol[],\n      injectables: StaticSymbol[]): GeneratedFile[] {\n    const /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl)[1];\n    const /** @type {?} */ statements: o.Statement[] = [];\n    const /** @type {?} */ exportedVars: string[] = [];\n    const /** @type {?} */ generatedFiles: GeneratedFile[] = [];\n\n    generatedFiles.push(this._createSummary(\n        srcFileUrl, directives, pipes, ngModules, injectables, statements, exportedVars));\n\n    // compile all ng modules\n    exportedVars.push(\n        ...ngModules.map((ngModuleType) => this._compileModule(ngModuleType, statements)));\n\n    // compile directive wrappers\n    exportedVars.push(...directives.map(\n        (directiveType) => this._compileDirectiveWrapper(directiveType, statements)));\n\n    // compile components\n    directives.forEach((dirType) => {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata( /** @type {?} */((<any>dirType)));\n      if (!compMeta.isComponent) {\n        return Promise.resolve(null);\n      }\n      const /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n      if (!ngModule) {\n        throw new Error(\n            `Internal Error: cannot determine the module for component ${identifierName(compMeta.type)}!`);\n      }\n\n      _assertComponent(compMeta);\n\n      // compile styles\n      const /** @type {?} */ stylesCompileResults = this._styleCompiler.compileComponent(compMeta);\n      stylesCompileResults.externalStylesheets.forEach((compiledStyleSheet) => {\n        generatedFiles.push(this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n      });\n\n      // compile components\n      exportedVars.push(\n          this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements),\n          this._compileComponent(\n              compMeta, ngModule, ngModule.transitiveModule.directives,\n              stylesCompileResults.componentStylesheet, fileSuffix, statements));\n    });\n    if (statements.length > 0) {\n      const /** @type {?} */ srcModule = this._codegenSourceModule(\n          srcFileUrl, ngfactoryFilePath(srcFileUrl), statements, exportedVars);\n      generatedFiles.unshift(srcModule);\n    }\n    return generatedFiles;\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} directives\n * @param {?} pipes\n * @param {?} ngModules\n * @param {?} injectables\n * @param {?} targetStatements\n * @param {?} targetExportedVars\n * @return {?}\n */\nprivate _createSummary(\n      srcFileUrl: string, directives: StaticSymbol[], pipes: StaticSymbol[],\n      ngModules: StaticSymbol[], injectables: StaticSymbol[], targetStatements: o.Statement[],\n      targetExportedVars: string[]): GeneratedFile {\n    const /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n                                .map(symbol => this._symbolResolver.resolveSymbol(symbol));\n    const /** @type {?} */ typeSummaries = [\n      ...ngModules.map(ref => this._metadataResolver.getNgModuleSummary(ref)),\n      ...directives.map(ref => this._metadataResolver.getDirectiveSummary(ref)),\n      ...pipes.map(ref => this._metadataResolver.getPipeSummary(ref)),\n      ...injectables.map(ref => this._metadataResolver.getInjectableSummary(ref))\n    ];\n    const {json, exportAs} = serializeSummaries(\n        this._summaryResolver, this._symbolResolver, symbolSummaries, typeSummaries);\n    exportAs.forEach((entry) => {\n      targetStatements.push(\n          o.variable(entry.exportAs).set(o.importExpr({reference: entry.symbol})).toDeclStmt());\n      targetExportedVars.push(entry.exportAs);\n    });\n    return new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n  }\n/**\n * @param {?} ngModuleType\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileModule(ngModuleType: StaticSymbol, targetStatements: o.Statement[]): string {\n    const /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n    const /** @type {?} */ providers: CompileProviderMetadata[] = [];\n\n    if (this._localeId) {\n      providers.push({\n        token: createIdentifierToken(Identifiers.LOCALE_ID),\n        useValue: this._localeId,\n      });\n    }\n\n    if (this._translationFormat) {\n      providers.push({\n        token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n        useValue: this._translationFormat\n      });\n    }\n\n    const /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n    targetStatements.push(...appCompileResult.statements);\n    return appCompileResult.ngModuleFactoryVar;\n  }\n/**\n * @param {?} directiveType\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileDirectiveWrapper(directiveType: StaticSymbol, targetStatements: o.Statement[]):\n      string {\n    const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n    const /** @type {?} */ dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n\n    targetStatements.push(...dirCompileResult.statements);\n    return dirCompileResult.dirWrapperClassVar;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} fileSuffix\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileComponentFactory(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata, fileSuffix: string,\n      targetStatements: o.Statement[]): string {\n    const /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n    const /** @type {?} */ hostMeta = createHostComponentMeta(\n        hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n    const /** @type {?} */ hostViewFactoryVar = this._compileComponent(\n        hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements);\n    const /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n    targetStatements.push(\n        o.variable(compFactoryVar)\n            .set(o.importExpr(\n                      createIdentifier(Identifiers.ComponentFactory), [o.importType(compMeta.type)])\n                     .instantiate(\n                         [\n                           o.literal(compMeta.selector),\n                           o.variable(hostViewFactoryVar),\n                           o.importExpr(compMeta.type),\n                         ],\n                         o.importType(\n                             createIdentifier(Identifiers.ComponentFactory),\n                             [o.importType(compMeta.type)], [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n    return compFactoryVar;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directiveIdentifiers\n * @param {?} componentStyles\n * @param {?} fileSuffix\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileComponent(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata,\n      directiveIdentifiers: CompileIdentifierMetadata[], componentStyles: CompiledStylesheet,\n      fileSuffix: string, targetStatements: o.Statement[]): string {\n    const /** @type {?} */ parsedAnimations = this._animationParser.parseComponent(compMeta);\n    const /** @type {?} */ directives =\n        directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n\n    const /** @type {?} */ parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, directives, pipes, ngModule.schemas,\n        identifierName(compMeta.type));\n    const /** @type {?} */ stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n    const /** @type {?} */ compiledAnimations =\n        this._animationCompiler.compile(identifierName(compMeta.type), parsedAnimations);\n    const /** @type {?} */ viewResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n    if (componentStyles) {\n      targetStatements.push(\n          ..._resolveStyleStatements(this._symbolResolver, componentStyles, fileSuffix));\n    }\n    compiledAnimations.forEach(entry => targetStatements.push(...entry.statements));\n    targetStatements.push(...viewResult.statements);\n    return viewResult.viewClassVar;\n  }\n/**\n * @param {?} fileUrl\n * @param {?} stylesCompileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nprivate _codgenStyles(\n      fileUrl: string, stylesCompileResult: CompiledStylesheet, fileSuffix: string): GeneratedFile {\n    _resolveStyleStatements(this._symbolResolver, stylesCompileResult, fileSuffix);\n    return this._codegenSourceModule(\n        fileUrl, _stylesModuleUrl(\n                     stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix),\n        stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} genFileUrl\n * @param {?} statements\n * @param {?} exportedVars\n * @return {?}\n */\nprivate _codegenSourceModule(\n      srcFileUrl: string, genFileUrl: string, statements: o.Statement[],\n      exportedVars: string[]): GeneratedFile {\n    return new GeneratedFile(\n        srcFileUrl, genFileUrl,\n        this._outputEmitter.emitStatements(genFileUrl, statements, exportedVars));\n  }\n}\n\nfunction AotCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nAotCompiler.prototype._animationCompiler;\n/** @type {?} */\nAotCompiler.prototype._host;\n/** @type {?} */\nAotCompiler.prototype._metadataResolver;\n/** @type {?} */\nAotCompiler.prototype._templateParser;\n/** @type {?} */\nAotCompiler.prototype._styleCompiler;\n/** @type {?} */\nAotCompiler.prototype._viewCompiler;\n/** @type {?} */\nAotCompiler.prototype._dirWrapperCompiler;\n/** @type {?} */\nAotCompiler.prototype._ngModuleCompiler;\n/** @type {?} */\nAotCompiler.prototype._outputEmitter;\n/** @type {?} */\nAotCompiler.prototype._summaryResolver;\n/** @type {?} */\nAotCompiler.prototype._localeId;\n/** @type {?} */\nAotCompiler.prototype._translationFormat;\n/** @type {?} */\nAotCompiler.prototype._animationParser;\n/** @type {?} */\nAotCompiler.prototype._symbolResolver;\n}\n\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(\n    reflector: StaticSymbolResolver, compileResult: CompiledStylesheet,\n    fileSuffix: string): o.Statement[] {\n  compileResult.dependencies.forEach((dep) => {\n    dep.valuePlaceholder.reference = reflector.getStaticSymbol(\n        _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n  });\n  return compileResult.statements;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return `${stylesheetUrl}${shim ? '.shim' : ''}.ngstyle${suffix}`;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n\nexport interface NgAnalyzedModules {\n  ngModules: CompileNgModuleMetadata[];\n  ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>;\n  files: Array<{\n    srcUrl: string,\n    directives: StaticSymbol[],\n    pipes: StaticSymbol[],\n    ngModules: StaticSymbol[],\n    injectables: StaticSymbol[]\n  }>;\n  symbolsMissingModule?: StaticSymbol[];\n}\n\nexport interface NgAnalyzeModulesHost { isSourceFile(filePath: string): boolean; }\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeNgModules(\n    programStaticSymbols: StaticSymbol[], host: NgAnalyzeModulesHost,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const {ngModules, symbolsMissingModule} =\n      _createNgModules(programStaticSymbols, host, metadataResolver);\n  return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeAndValidateNgModules(\n    programStaticSymbols: StaticSymbol[], host: NgAnalyzeModulesHost,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n  if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n    const /** @type {?} */ messages = result.symbolsMissingModule.map(\n        s => `Cannot determine the module for class ${s.name} in ${s.filePath}!`);\n    throw new Error(messages.join('\\n'));\n  }\n  return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(\n    programSymbols: StaticSymbol[], ngModuleMetas: CompileNgModuleMetadata[],\n    symbolsMissingModule: StaticSymbol[],\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const /** @type {?} */ moduleMetasByRef = new Map<any, CompileNgModuleMetadata>();\n  ngModuleMetas.forEach((ngModule) => moduleMetasByRef.set(ngModule.type.reference, ngModule));\n  const /** @type {?} */ ngModuleByPipeOrDirective = new Map<StaticSymbol, CompileNgModuleMetadata>();\n  const /** @type {?} */ ngModulesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngDirectivesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngPipesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngInjectablesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ filePaths = new Set<string>();\n\n  // Make sure we produce an analyzed file for each input file\n  programSymbols.forEach((symbol) => {\n    const /** @type {?} */ filePath = symbol.filePath;\n    filePaths.add(filePath);\n    if (metadataResolver.isInjectable(symbol)) {\n      ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n    }\n  });\n\n  // Looping over all modules to construct:\n  // - a map from file to modules `ngModulesByFile`,\n  // - a map from file to directives `ngDirectivesByFile`,\n  // - a map from file to pipes `ngPipesByFile`,\n  // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n  ngModuleMetas.forEach((ngModuleMeta) => {\n    const /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n    filePaths.add(srcFileUrl);\n    ngModulesByFile.set(\n        srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n\n    ngModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n      const /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n      filePaths.add(fileUrl);\n      ngDirectivesByFile.set(\n          fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n      ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n    });\n    ngModuleMeta.declaredPipes.forEach((pipeIdentifier) => {\n      const /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n      filePaths.add(fileUrl);\n      ngPipesByFile.set(\n          fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n      ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n    });\n  });\n\n  const /** @type {?} */ files: {\n    srcUrl: string,\n    directives: StaticSymbol[],\n    pipes: StaticSymbol[],\n    ngModules: StaticSymbol[],\n    injectables: StaticSymbol[]\n  }[] = [];\n\n  filePaths.forEach((srcUrl) => {\n    const /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n    const /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n    const /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n    const /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n    files.push({srcUrl, directives, pipes, ngModules, injectables});\n  });\n\n  return {\n    // map directive/pipe to module\n    ngModuleByPipeOrDirective,\n    // list modules and directives for every source file\n    files,\n    ngModules: ngModuleMetas, symbolsMissingModule\n  };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nexport function extractProgramSymbols(\n    staticSymbolResolver: StaticSymbolResolver, files: string[],\n    host: NgAnalyzeModulesHost): StaticSymbol[] {\n  const /** @type {?} */ staticSymbols: StaticSymbol[] = [];\n  files.filter(fileName => host.isSourceFile(fileName)).forEach(sourceFile => {\n    staticSymbolResolver.getSymbolsOf(sourceFile).forEach((symbol) => {\n      const /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n      const /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n      if (symbolMeta) {\n        if (symbolMeta.__symbolic != 'error') {\n          // Ignore symbols that are only included to record error information.\n          staticSymbols.push(resolvedSymbol.symbol);\n        }\n      }\n    });\n  });\n\n  return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(\n    programStaticSymbols: StaticSymbol[], host: NgAnalyzeModulesHost,\n    metadataResolver: CompileMetadataResolver):\n    {ngModules: CompileNgModuleMetadata[], symbolsMissingModule: StaticSymbol[]} {\n  const /** @type {?} */ ngModules = new Map<any, CompileNgModuleMetadata>();\n  const /** @type {?} */ programPipesAndDirectives: StaticSymbol[] = [];\n  const /** @type {?} */ ngModulePipesAndDirective = new Set<StaticSymbol>();\n\n  const /** @type {?} */ addNgModule = (staticSymbol: any) => {\n    if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n      return false;\n    }\n    const /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n    if (ngModule) {\n      ngModules.set(ngModule.type.reference, ngModule);\n      ngModule.declaredDirectives.forEach((dir) => ngModulePipesAndDirective.add(dir.reference));\n      ngModule.declaredPipes.forEach((pipe) => ngModulePipesAndDirective.add(pipe.reference));\n      // For every input module add the list of transitively included modules\n      ngModule.transitiveModule.modules.forEach(modMeta => addNgModule(modMeta.reference));\n    }\n    return !!ngModule;\n  };\n  programStaticSymbols.forEach((staticSymbol) => {\n    if (!addNgModule(staticSymbol) &&\n        (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n      programPipesAndDirectives.push(staticSymbol);\n    }\n  });\n\n  // Throw an error if any of the program pipe or directives is not declared by a module\n  const /** @type {?} */ symbolsMissingModule =\n      programPipesAndDirectives.filter(s => !ngModulePipesAndDirective.has(s));\n\n  return {ngModules: Array.from(ngModules.values()), symbolsMissingModule};\n}\n"]}