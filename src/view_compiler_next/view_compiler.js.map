{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler_next/view_compiler.ts"],"names":[],"mappings":"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","file":"view_compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core/index';\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileProviderMetadata, CompileTokenMetadata, CompileTypeMetadata, identifierModuleUrl, identifierName, rendererTypeName, tokenReference, viewClassName} from '../compile_metadata';\nimport {BuiltinConverter, BuiltinConverterFactory, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers, createIdentifier, createIdentifierToken, resolveIdentifier} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {LifecycleHooks, viewEngine} from '../private_import_core';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, ProviderAstType, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {ComponentFactoryDependency, ComponentViewDependency, DirectiveWrapperDependency, ViewCompileResult, ViewCompiler} from '../view_compiler/view_compiler';\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\nconst /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nconst /** @type {?} */ NG_CONTAINER_TAG = 'ng-container';\n@CompilerInjectable()\nexport class ViewCompilerNext extends ViewCompiler {\n/**\n * @param {?} _genConfigNext\n * @param {?} _schemaRegistryNext\n */\nconstructor(\nprivate _genConfigNext: CompilerConfig,\nprivate _schemaRegistryNext: ElementSchemaRegistry) {\n    super(_genConfigNext, _schemaRegistryNext);\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} styles\n * @param {?} usedPipes\n * @param {?} compiledAnimations\n * @return {?}\n */\ncompileComponent(\n      component: CompileDirectiveMetadata, template: TemplateAst[], styles: o.Expression,\n      usedPipes: CompilePipeSummary[],\n      compiledAnimations: AnimationEntryCompileResult[]): ViewCompileResult {\n    const /** @type {?} */ compName = identifierName(component.type) + (component.isHost ? `_Host` : '');\n\n    let /** @type {?} */ embeddedViewCount = 0;\n    const /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n\n    const /** @type {?} */ statements: o.Statement[] = [];\n\n    const /** @type {?} */ renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n    statements.push(\n        renderComponentVar\n            .set(o.importExpr(createIdentifier(Identifiers.createRendererTypeV2)).callFn([\n              new o.LiteralMapExpr([\n                new o.LiteralMapEntry('encapsulation', o.literal(component.template.encapsulation)),\n                new o.LiteralMapEntry('styles', styles),\n                // TODO: copy this from the @Component directive...\n                new o.LiteralMapEntry('data', o.literalMap([])),\n              ])\n            ]))\n            .toDeclStmt());\n\n    const /** @type {?} */ viewBuilderFactory = (parent: ViewBuilder): ViewBuilder => {\n      const /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n      const /** @type {?} */ viewName = viewClassName(component.type.reference, embeddedViewIndex);\n      return new ViewBuilder(\n          parent, component, viewName, usedPipes, staticQueryIds, viewBuilderFactory);\n    };\n\n    const /** @type {?} */ visitor = viewBuilderFactory(null);\n    visitor.visitAll([], template);\n\n    statements.push(...visitor.build());\n\n    return new ViewCompileResult(statements, visitor.viewName, renderComponentVar.name, []);\n  }\n}\n\nfunction ViewCompilerNext_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompilerNext.prototype._genConfigNext;\n/** @type {?} */\nViewCompilerNext.prototype._schemaRegistryNext;\n}\n\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder): ViewBuilder;\n}\n\ninterface UpdateExpression {\n  nodeIndex: number;\n  expressions: {context: o.Expression, value: AST}[];\n}\n\ninterface HandleEventExpression {\n  nodeIndex: number;\n  context: o.Expression;\n  eventName: string;\n  expression: AST;\n}\n\nconst /** @type {?} */ VIEW_VAR = o.variable('view');\nconst /** @type {?} */ CHECK_VAR = o.variable('check');\nconst /** @type {?} */ COMP_VAR = o.variable('comp');\nconst /** @type {?} */ NODE_INDEX_VAR = o.variable('nodeIndex');\nconst /** @type {?} */ EVENT_NAME_VAR = o.variable('eventName');\nconst /** @type {?} */ ALLOW_DEFAULT_VAR = o.variable(`allowDefault`);\nclass ViewBuilder implements TemplateAstVisitor, LocalResolver, BuiltinConverterFactory {\nprivate nodeDefs: o.Expression[] = [];\nprivate purePipeNodeIndices: {[pipeName: string]: number} = {};\nprivate refNodeIndices: {[refName: string]: number} = {};\nprivate variables: VariableAst[] = [];\nprivate children: ViewBuilder[] = [];\nprivate updateDirectivesExpressions: UpdateExpression[] = [];\nprivate updateRendererExpressions: UpdateExpression[] = [];\nprivate handleEventExpressions: HandleEventExpression[] = [];\n/**\n * @param {?} parent\n * @param {?} component\n * @param {?} viewName\n * @param {?} usedPipes\n * @param {?} staticQueryIds\n * @param {?} viewBuilderFactory\n */\nconstructor(\nprivate parent: ViewBuilder,\nprivate component: CompileDirectiveMetadata,\npublic viewName: string,\nprivate usedPipes: CompilePipeSummary[],\nprivate staticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>,\nprivate viewBuilderFactory: ViewBuilderFactory) {}\n/**\n * @param {?} variables\n * @param {?} astNodes\n * @return {?}\n */\nvisitAll(variables: VariableAst[], astNodes: TemplateAst[]) {\n    this.variables = variables;\n    // create the pipes for the pure pipes immediately, so that we know their indices.\n    if (!this.parent) {\n      this.usedPipes.forEach((pipe) => {\n        if (pipe.pure) {\n          this.purePipeNodeIndices[pipe.name] = this._createPipe(pipe);\n        }\n      });\n    }\n\n    if (!this.parent) {\n      const /** @type {?} */ queryIds = staticViewQueryIds(this.staticQueryIds);\n      this.component.viewQueries.forEach((query, queryIndex) => {\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        const /** @type {?} */ queryId = queryIndex + 1;\n        const /** @type {?} */ bindingType =\n            query.first ? viewEngine.QueryBindingType.First : viewEngine.QueryBindingType.All;\n        let /** @type {?} */ flags = viewEngine.NodeFlags.HasViewQuery;\n        if (queryIds.staticQueryIds.has(queryId)) {\n          flags |= viewEngine.NodeFlags.HasStaticQuery;\n        } else {\n          flags |= viewEngine.NodeFlags.HasDynamicQuery;\n        }\n        this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n          o.literal(flags), o.literal(queryId),\n          new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType))])\n        ]));\n      });\n    }\n    templateVisitAll(this, astNodes);\n    if (astNodes.length === 0 ||\n        (this.parent && needsAdditionalRootNode(astNodes[astNodes.length - 1]))) {\n      // if the view is empty, or an embedded view has a view container as last root nde,\n      // create an additional root node.\n      this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n        o.literal(viewEngine.NodeFlags.None), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n      ]));\n    }\n  }\n/**\n * @param {?=} targetStatements\n * @return {?}\n */\nbuild(targetStatements: o.Statement[] = []): o.Statement[] {\n    const /** @type {?} */ compType = o.importType(this.component.type);\n    this.children.forEach((child) => child.build(targetStatements));\n\n    const /** @type {?} */ updateDirectivesFn = this._createUpdateFn(this.updateDirectivesExpressions, compType);\n    const /** @type {?} */ updateRendererFn = this._createUpdateFn(this.updateRendererExpressions, compType);\n\n    const /** @type {?} */ handleEventStmts: o.Statement[] = [];\n    let /** @type {?} */ handleEventBindingCount = 0;\n    this.handleEventExpressions.forEach(({expression, context, nodeIndex, eventName}) => {\n      const /** @type {?} */ bindingId = `${handleEventBindingCount++}`;\n      const /** @type {?} */ nameResolver = context === COMP_VAR ? this : null;\n      const {stmts, allowDefault} =\n          convertActionBinding(nameResolver, context, expression, bindingId);\n      const /** @type {?} */ trueStmts = stmts;\n      if (allowDefault) {\n        trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n      }\n      handleEventStmts.push(new o.IfStmt(\n          o.literal(nodeIndex)\n              .identical(NODE_INDEX_VAR)\n              .and(o.literal(eventName).identical(EVENT_NAME_VAR)),\n          trueStmts));\n    });\n    let /** @type {?} */ handleEventFn: o.Expression;\n    if (handleEventStmts.length > 0) {\n      handleEventFn = o.fn(\n          [\n            new o.FnParam(VIEW_VAR.name), new o.FnParam(NODE_INDEX_VAR.name),\n            new o.FnParam(EVENT_NAME_VAR.name), new o.FnParam(EventHandlerVars.event.name)\n          ],\n          [\n            ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE),\n            COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(compType), ...handleEventStmts,\n            new o.ReturnStatement(ALLOW_DEFAULT_VAR)\n          ]);\n    } else {\n      handleEventFn = o.NULL_EXPR;\n    }\n\n    let /** @type {?} */ viewFlags = viewEngine.ViewFlags.None;\n    if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n      viewFlags |= viewEngine.ViewFlags.OnPush;\n    }\n    const /** @type {?} */ viewFactory = new o.DeclareFunctionStmt(\n        this.viewName, [],\n        [new o.ReturnStatement(o.importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n          o.literal(viewFlags), o.literalArr(this.nodeDefs), updateDirectivesFn, updateRendererFn,\n          handleEventFn\n        ]))]);\n\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n/**\n * @param {?} expressions\n * @param {?} compType\n * @return {?}\n */\nprivate _createUpdateFn(expressions: UpdateExpression[], compType: o.Type): o.Expression {\n    const /** @type {?} */ updateStmts: o.Statement[] = [];\n    let /** @type {?} */ updateBindingCount = 0;\n    expressions.forEach(({expressions, nodeIndex}) => {\n      const /** @type {?} */ exprs = expressions.map(({context, value}) => {\n        const /** @type {?} */ bindingId = `${updateBindingCount++}`;\n        const /** @type {?} */ nameResolver = context === COMP_VAR ? this : null;\n        const {stmts, currValExpr} =\n            convertPropertyBinding(nameResolver, context, value, bindingId);\n        updateStmts.push(...stmts);\n        return currValExpr;\n      });\n      updateStmts.push(callCheckStmt(nodeIndex, exprs).toStmt());\n    });\n    let /** @type {?} */ updateFn: o.Expression;\n    if (updateStmts.length > 0) {\n      updateFn = o.fn(\n          [new o.FnParam(CHECK_VAR.name), new o.FnParam(VIEW_VAR.name)],\n          [COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(compType), ...updateStmts]);\n    } else {\n      updateFn = o.NULL_EXPR;\n    }\n    return updateFn;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, context: any): any {\n    // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n    this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([\n      o.literal(ast.ngContentIndex), o.literal(ast.index)\n    ]));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: TextAst, context: any): any {\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.textDef)).callFn([\n      o.literal(ast.ngContentIndex), o.literalArr([o.literal(ast.value)])\n    ]));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array\n    this.nodeDefs.push(null);\n\n    const /** @type {?} */ astWithSource = /** @type {?} */(( <ASTWithSource>ast.value));\n    const /** @type {?} */ inter = /** @type {?} */(( <Interpolation>astWithSource.ast));\n\n    this._addUpdateExpressions(\n        nodeIndex, inter.expressions.map((expr) => { return {context: COMP_VAR, value: expr}; }),\n        this.updateRendererExpressions);\n\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.textDef)).callFn([\n      o.literal(ast.ngContentIndex), o.literalArr(inter.strings.map(s => o.literal(s)))\n    ]);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchesExpr} = this._visitElementOrTemplate(nodeIndex, ast);\n\n    const /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n    this.children.push(childVisitor);\n    childVisitor.visitAll(ast.variables, ast.children);\n\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    // anchorDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, templateFactory?: ViewDefinitionFactory): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n      o.literal(flags), queryMatchesExpr, o.literal(ast.ngContentIndex), o.literal(childCount),\n      o.variable(childVisitor.viewName)\n    ]);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    let /** @type {?} */ elName = ast.name;\n    if (ast.name === NG_CONTAINER_TAG) {\n      // Using a null element name creates an anchor.\n      elName = null;\n    }\n\n    let {flags, usedEvents, queryMatchesExpr, hostBindings} =\n        this._visitElementOrTemplate(nodeIndex, ast);\n\n    let /** @type {?} */ inputDefs: o.Expression[] = [];\n    let /** @type {?} */ outputDefs: o.Expression[] = [];\n    if (elName) {\n      ast.inputs.forEach(\n          (inputAst) => { hostBindings.push({context: COMP_VAR, value: inputAst.value}); });\n      if (hostBindings.length) {\n        this._addUpdateExpressions(nodeIndex, hostBindings, this.updateRendererExpressions);\n      }\n      inputDefs = elementBindingDefs(ast.inputs);\n      ast.directives.forEach(\n          (dirAst, dirIndex) => inputDefs.push(...elementBindingDefs(dirAst.hostProperties)));\n      outputDefs = usedEvents.map(([target, eventName]) => {\n        return target ? o.literalArr([o.literal(target), o.literal(eventName)]) :\n                        o.literal(eventName);\n      });\n    }\n\n    templateVisitAll(this, ast.children);\n\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    // elementDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, name: string, fixedAttrs: {[name: string]: string} = {},\n    //   bindings?:\n    //       ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |\n    //         [BindingType.ElementAttribute | BindingType.ElementProperty, string,\n    //         SecurityContext])[],\n    //   outputs?: (string | [string, string])[]): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n      o.literal(flags), queryMatchesExpr, o.literal(ast.ngContentIndex), o.literal(childCount),\n      o.literal(elName), elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n      inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n      outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR\n    ]);\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} ast\n * @return {?}\n */\nprivate _visitElementOrTemplate(nodeIndex: number, ast: {\n    hasViewContainer: boolean,\n    outputs: BoundEventAst[],\n    directives: DirectiveAst[],\n    providers: ProviderAst[],\n    references: ReferenceAst[],\n    queryMatches: QueryMatch[]\n  }): {\n    flags: number,\n    usedEvents: [string, string][],\n    queryMatchesExpr: o.Expression,\n    hostBindings: {value: AST, context: o.Expression}[],\n  } {\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    if (ast.hasViewContainer) {\n      flags |= viewEngine.NodeFlags.HasEmbeddedViews;\n    }\n    const /** @type {?} */ usedEvents = new Map<string, [string, string]>();\n    ast.outputs.forEach((event) => {\n      usedEvents.set(\n          viewEngine.elementEventFullName(event.target, event.name), [event.target, event.name]);\n    });\n    ast.directives.forEach((dirAst) => {\n      dirAst.hostEvents.forEach((event) => {\n        usedEvents.set(\n            viewEngine.elementEventFullName(event.target, event.name), [event.target, event.name]);\n      });\n    });\n    const /** @type {?} */ hostBindings: {value: AST, context: o.Expression}[] = [];\n    const /** @type {?} */ hostEvents: {context: o.Expression, eventAst: BoundEventAst}[] = [];\n    const /** @type {?} */ componentFactoryResolverProvider = createComponentFactoryResolver(ast.directives);\n    if (componentFactoryResolverProvider) {\n      this._visitProvider(componentFactoryResolverProvider, ast.queryMatches);\n    }\n\n    ast.providers.forEach((providerAst, providerIndex) => {\n      let /** @type {?} */ dirAst: DirectiveAst;\n      let /** @type {?} */ dirIndex: number;\n      ast.directives.forEach((localDirAst, i) => {\n        if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n          dirAst = localDirAst;\n          dirIndex = i;\n        }\n      });\n      if (dirAst) {\n        const {hostBindings: dirHostBindings, hostEvents: dirHostEvents} = this._visitDirective(\n            providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents,\n            this.staticQueryIds.get( /** @type {?} */((<any>ast))));\n        hostBindings.push(...dirHostBindings);\n        hostEvents.push(...dirHostEvents);\n      } else {\n        this._visitProvider(providerAst, ast.queryMatches);\n      }\n    });\n\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n    ast.queryMatches.forEach((match) => {\n      let /** @type {?} */ valueType: number;\n      if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n        valueType = viewEngine.QueryValueType.ElementRef;\n      } else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n        valueType = viewEngine.QueryValueType.ViewContainerRef;\n      } else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n        valueType = viewEngine.QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n      }\n    });\n    ast.references.forEach((ref) => {\n      let /** @type {?} */ valueType: number;\n      if (!ref.value) {\n        valueType = viewEngine.QueryValueType.RenderElement;\n      } else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n        valueType = viewEngine.QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n      }\n    });\n    ast.outputs.forEach(\n        (outputAst) => { hostEvents.push({context: COMP_VAR, eventAst: outputAst}); });\n    hostEvents.forEach((hostEvent) => {\n      this._addHandleEventExpression(\n          nodeIndex, hostEvent.context,\n          viewEngine.elementEventFullName(hostEvent.eventAst.target, hostEvent.eventAst.name),\n          hostEvent.eventAst.handler);\n    });\n\n    return {\n      flags,\n      usedEvents: Array.from(usedEvents.values()),\n      queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      hostBindings,\n    };\n  }\n/**\n * @param {?} providerAst\n * @param {?} directiveAst\n * @param {?} directiveIndex\n * @param {?} elementNodeIndex\n * @param {?} refs\n * @param {?} queryMatches\n * @param {?} usedEvents\n * @param {?} queryIds\n * @return {?}\n */\nprivate _visitDirective(\n      providerAst: ProviderAst, directiveAst: DirectiveAst, directiveIndex: number,\n      elementNodeIndex: number, refs: ReferenceAst[], queryMatches: QueryMatch[],\n      usedEvents: Map<string, any>, queryIds: StaticAndDynamicQueryIds): {\n    hostBindings: {value: AST, context: o.Expression}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst}[]\n  } {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    directiveAst.directive.queries.forEach((query, queryIndex) => {\n      let /** @type {?} */ flags = viewEngine.NodeFlags.HasContentQuery;\n      const /** @type {?} */ queryId = directiveAst.contentQueryStartId + queryIndex;\n      if (queryIds.staticQueryIds.has(queryId)) {\n        flags |= viewEngine.NodeFlags.HasStaticQuery;\n      } else {\n        flags |= viewEngine.NodeFlags.HasDynamicQuery;\n      }\n      const /** @type {?} */ bindingType =\n          query.first ? viewEngine.QueryBindingType.First : viewEngine.QueryBindingType.All;\n      this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n        o.literal(flags), o.literal(queryId),\n        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType))])\n      ]));\n    });\n\n    // Note: the operation below might also create new nodeDefs,\n    // but we don't want them to be a child of a directive,\n    // as they might be a provider/pipe on their own.\n    // I.e. we only allow queries as children of directives nodes.\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    const {flags, queryMatchExprs, providerExpr, providerType, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    refs.forEach((ref) => {\n      if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(\n            o.literalArr([o.literal(ref.name), o.literal(viewEngine.QueryValueType.Provider)]));\n      }\n    });\n\n    let /** @type {?} */ rendererType = o.NULL_EXPR;\n    let /** @type {?} */ compView = o.NULL_EXPR;\n    if (directiveAst.directive.isComponent) {\n      compView = o.importExpr({reference: directiveAst.directive.componentViewType});\n      rendererType = o.importExpr({reference: directiveAst.directive.rendererType});\n    }\n\n    const /** @type {?} */ inputDefs = directiveAst.inputs.map((inputAst, inputIndex) => {\n      const /** @type {?} */ mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n      // Note: it's important to not quote the key so that we can capture renames by minifiers!\n      return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n    });\n\n    const /** @type {?} */ outputDefs: o.LiteralMapEntry[] = [];\n    const /** @type {?} */ dirMeta = directiveAst.directive;\n    Object.keys(dirMeta.outputs).forEach((propName) => {\n      const /** @type {?} */ eventName = dirMeta.outputs[propName];\n      if (usedEvents.has(eventName)) {\n        // Note: it's important to not quote the key so that we can capture renames by minifiers!\n        outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n      }\n    });\n    if (directiveAst.inputs.length ||\n        (flags & (viewEngine.NodeFlags.DoCheck | viewEngine.NodeFlags.OnInit)) > 0) {\n      this._addUpdateExpressions(\n          nodeIndex,\n          directiveAst.inputs.map((input) => { return {context: COMP_VAR, value: input.value}; }),\n          this.updateDirectivesExpressions);\n    }\n\n    const /** @type {?} */ dirContextExpr = o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n      VIEW_VAR, o.literal(nodeIndex)\n    ]);\n    const /** @type {?} */ hostBindings = directiveAst.hostProperties.map((hostBindingAst) => {\n      return {\n        value: ( /** @type {?} */((<ASTWithSource>hostBindingAst.value))).ast,\n        context: dirContextExpr,\n      };\n    });\n    const /** @type {?} */ hostEvents = directiveAst.hostEvents.map(\n        (hostEventAst) => { return {context: dirContextExpr, eventAst: hostEventAst}; });\n\n\n    // directiveDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n    //   any,\n    //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n      o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      o.literal(childCount), providerExpr, depsExpr,\n      inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n      outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR, compView, rendererType\n    ]);\n    this.nodeDefs[nodeIndex] = nodeDef;\n\n    return {hostBindings, hostEvents};\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\nprivate _visitProvider(providerAst: ProviderAst, queryMatches: QueryMatch[]): void {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchExprs, providerExpr, providerType, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    // providerDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], type: ProviderType, token:\n    //   any,\n    //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n      o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      o.literal(providerType), tokenExpr(providerAst.token), providerExpr, depsExpr\n    ]);\n    this.nodeDefs[nodeIndex] = nodeDef;\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\nprivate _visitProviderOrDirective(providerAst: ProviderAst, queryMatches: QueryMatch[]): {\n    flags: number,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    providerType: number,\n    depsExpr: o.Expression\n  } {\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    if (!providerAst.eager) {\n      flags |= viewEngine.NodeFlags.LazyProvider;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n      flags |= viewEngine.NodeFlags.PrivateProvider;\n    }\n    providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n      // for regular providers, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy ||\n          providerAst.providerType === ProviderAstType.Directive ||\n          providerAst.providerType === ProviderAstType.Component) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n\n    queryMatches.forEach((match) => {\n      if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n        queryMatchExprs.push(o.literalArr(\n            [o.literal(match.queryId), o.literal(viewEngine.QueryValueType.Provider)]));\n      }\n    });\n    const {providerExpr, providerType, depsExpr} = providerDef(providerAst);\n    return {flags, queryMatchExprs, providerExpr, providerType, depsExpr};\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let /** @type {?} */ currViewExpr: o.Expression = VIEW_VAR;\n    for (let /** @type {?} */ currBuilder: ViewBuilder = this; currBuilder;\n         currBuilder = currBuilder.parent, currViewExpr = currViewExpr.prop('parent')) {\n      // check references\n      const /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n      if (refNodeIndex != null) {\n        return o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n          currViewExpr, o.literal(refNodeIndex)\n        ]);\n      }\n\n      // check variables\n      const /** @type {?} */ varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n      if (varAst) {\n        const /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n        return currViewExpr.prop('context').prop(varValue);\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} argCount\n * @return {?}\n */\ncreateLiteralArrayConverter(argCount: number): BuiltinConverter {\n    if (argCount === 0) {\n      const /** @type {?} */ valueExpr = o.importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n      return () => valueExpr;\n    }\n\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // pureArrayDef(argCount: number): NodeDef;\n    const /** @type {?} */ nodeDef =\n        o.importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([o.literal(argCount)]);\n    this.nodeDefs.push(nodeDef);\n\n    return (args: o.Expression[]) => callCheckStmt(nodeIndex, args);\n  }\n/**\n * @param {?} keys\n * @return {?}\n */\ncreateLiteralMapConverter(keys: string[]): BuiltinConverter {\n    if (keys.length === 0) {\n      const /** @type {?} */ valueExpr = o.importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n      return () => valueExpr;\n    }\n\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // function pureObjectDef(propertyNames: string[]): NodeDef\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.pureObjectDef)).callFn([o.literalArr(\n        keys.map(key => o.literal(key)))]);\n    this.nodeDefs.push(nodeDef);\n\n    return (args: o.Expression[]) => callCheckStmt(nodeIndex, args);\n  }\n/**\n * @param {?} name\n * @param {?} argCount\n * @return {?}\n */\ncreatePipeConverter(name: string, argCount: number): BuiltinConverter {\n    const /** @type {?} */ pipe = this._findPipe(name);\n    if (pipe.pure) {\n      const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n      // function purePipeDef(argCount: number): NodeDef;\n      const /** @type {?} */ nodeDef =\n          o.importExpr(createIdentifier(Identifiers.purePipeDef)).callFn([o.literal(argCount)]);\n      this.nodeDefs.push(nodeDef);\n\n      // find underlying pipe in the component view\n      let /** @type {?} */ compViewExpr: o.Expression = VIEW_VAR;\n      let /** @type {?} */ compBuilder: ViewBuilder = this;\n      while (compBuilder.parent) {\n        compBuilder = compBuilder.parent;\n        compViewExpr = compViewExpr.prop('parent');\n      }\n      const /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n      const /** @type {?} */ pipeValueExpr: o.Expression =\n          o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n            compViewExpr, o.literal(pipeNodeIndex)\n          ]);\n\n      return (args: o.Expression[]) =>\n                 callUnwrapValue(callCheckStmt(nodeIndex, [pipeValueExpr].concat(args)));\n    } else {\n      const /** @type {?} */ nodeIndex = this._createPipe(pipe);\n      const /** @type {?} */ nodeValueExpr = o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n        VIEW_VAR, o.literal(nodeIndex)\n      ]);\n\n      return (args: o.Expression[]) => callUnwrapValue(nodeValueExpr.callMethod('transform', args));\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate _findPipe(name: string): CompilePipeSummary {\n    return this.usedPipes.find((pipeSummary) => pipeSummary.name === name);\n  }\n/**\n * @param {?} pipe\n * @return {?}\n */\nprivate _createPipe(pipe: CompilePipeSummary): number {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n      // for pipes, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n\n    const /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n    // function pipeDef(\n    //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n      o.literal(flags), o.importExpr(pipe.type), o.literalArr(depExprs)\n    ]);\n    this.nodeDefs.push(nodeDef);\n    return nodeIndex;\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} expressions\n * @param {?} target\n * @return {?}\n */\nprivate _addUpdateExpressions(\n      nodeIndex: number, expressions: {context: o.Expression, value: AST}[],\n      target: UpdateExpression[]) {\n    const /** @type {?} */ transformedExpressions = expressions.map(({context, value}) => {\n      if (value instanceof ASTWithSource) {\n        value = value.ast;\n      }\n      return {context, value: convertPropertyBindingBuiltins(this, value)};\n    });\n    target.push({nodeIndex, expressions: transformedExpressions});\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} context\n * @param {?} eventName\n * @param {?} expression\n * @return {?}\n */\nprivate _addHandleEventExpression(\n      nodeIndex: number, context: o.Expression, eventName: string, expression: AST) {\n    if (expression instanceof ASTWithSource) {\n      expression = expression.ast;\n    }\n    this.handleEventExpressions.push({nodeIndex, context, eventName, expression});\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: {usedEvents: Set<string>}): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitVariable(ast: VariableAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: AttrAst, context: any): any {}\n}\n\nfunction ViewBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nViewBuilder.prototype.nodeDefs;\n/** @type {?} */\nViewBuilder.prototype.purePipeNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.refNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.variables;\n/** @type {?} */\nViewBuilder.prototype.children;\n/** @type {?} */\nViewBuilder.prototype.updateDirectivesExpressions;\n/** @type {?} */\nViewBuilder.prototype.updateRendererExpressions;\n/** @type {?} */\nViewBuilder.prototype.handleEventExpressions;\n/** @type {?} */\nViewBuilder.prototype.parent;\n/** @type {?} */\nViewBuilder.prototype.component;\n/** @type {?} */\nViewBuilder.prototype.viewName;\n/** @type {?} */\nViewBuilder.prototype.usedPipes;\n/** @type {?} */\nViewBuilder.prototype.staticQueryIds;\n/** @type {?} */\nViewBuilder.prototype.viewBuilderFactory;\n}\n\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst: ProviderAst):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  return providerAst.multiProvider ? multiProviderDef(providerAst.providers) :\n                                     singleProviderDef(providerAst.providers[0]);\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(providers: CompileProviderMetadata[]):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  const /** @type {?} */ allDepDefs: o.Expression[] = [];\n  const /** @type {?} */ allParams: o.FnParam[] = [];\n  const /** @type {?} */ exprs = providers.map((provider, providerIndex) => {\n    let /** @type {?} */ expr: o.Expression;\n    if (provider.useClass) {\n      const /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n      expr = o.importExpr(provider.useClass).instantiate(depExprs);\n    } else if (provider.useFactory) {\n      const /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n      expr = o.importExpr(provider.useFactory).callFn(depExprs);\n    } else if (provider.useExisting) {\n      const /** @type {?} */ depExprs = convertDeps(providerIndex, [{token: provider.useExisting}]);\n      expr = depExprs[0];\n    } else {\n      expr = convertValueToOutputAst(provider.useValue);\n    }\n    return expr;\n  });\n  const /** @type {?} */ providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))]);\n  return {\n    providerExpr,\n    providerType: viewEngine.ProviderType.Factory,\n    depsExpr: o.literalArr(allDepDefs)\n  };\n/**\n * @param {?} providerIndex\n * @param {?} deps\n * @return {?}\n */\nfunction convertDeps(providerIndex: number, deps: CompileDiDependencyMetadata[]) {\n    return deps.map((dep, depIndex) => {\n      const /** @type {?} */ paramName = `p${providerIndex}_${depIndex}`;\n      allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n      allDepDefs.push(depDef(dep));\n      return o.variable(paramName);\n    });\n  }\n}\n/**\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(providerMeta: CompileProviderMetadata):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  let /** @type {?} */ providerExpr: o.Expression;\n  let /** @type {?} */ providerType: number;\n  let /** @type {?} */ deps: CompileDiDependencyMetadata[];\n  if (providerMeta.useClass) {\n    providerExpr = o.importExpr(providerMeta.useClass);\n    providerType = viewEngine.ProviderType.Class;\n    deps = providerMeta.deps || providerMeta.useClass.diDeps;\n  } else if (providerMeta.useFactory) {\n    providerExpr = o.importExpr(providerMeta.useFactory);\n    providerType = viewEngine.ProviderType.Factory;\n    deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n  } else if (providerMeta.useExisting) {\n    providerExpr = o.NULL_EXPR;\n    providerType = viewEngine.ProviderType.UseExisting;\n    deps = [{token: providerMeta.useExisting}];\n  } else {\n    providerExpr = convertValueToOutputAst(providerMeta.useValue);\n    providerType = viewEngine.ProviderType.Value;\n    deps = [];\n  }\n  const /** @type {?} */ depsExpr = o.literalArr(deps.map(dep => depDef(dep)));\n  return {providerExpr, providerType, depsExpr};\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta: CompileTokenMetadata): o.Expression {\n  return tokenMeta.identifier ? o.importExpr(tokenMeta.identifier) : o.literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep: CompileDiDependencyMetadata): o.Expression {\n  // Note: the following fields have already been normalized out by provider_analyzer:\n  // - isAttribute, isSelf, isHost\n  const /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(dep.token);\n  let /** @type {?} */ flags = viewEngine.DepFlags.None;\n  if (dep.isSkipSelf) {\n    flags |= viewEngine.DepFlags.SkipSelf;\n  }\n  if (dep.isOptional) {\n    flags |= viewEngine.DepFlags.Optional;\n  }\n  if (dep.isValue) {\n    flags |= viewEngine.DepFlags.Value;\n  }\n  return flags === viewEngine.DepFlags.None ? expr : o.literalArr([o.literal(flags), expr]);\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction needsAdditionalRootNode(ast: TemplateAst): boolean {\n  if (ast instanceof EmbeddedTemplateAst) {\n    return ast.hasViewContainer;\n  }\n\n  if (ast instanceof ElementAst) {\n    return ast.hasViewContainer;\n  }\n\n  return ast instanceof NgContentAst;\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook: LifecycleHooks): number {\n  let /** @type {?} */ nodeFlag = viewEngine.NodeFlags.None;\n  switch (lifecycleHook) {\n    case LifecycleHooks.AfterContentChecked:\n      nodeFlag = viewEngine.NodeFlags.AfterContentChecked;\n      break;\n    case LifecycleHooks.AfterContentInit:\n      nodeFlag = viewEngine.NodeFlags.AfterContentInit;\n      break;\n    case LifecycleHooks.AfterViewChecked:\n      nodeFlag = viewEngine.NodeFlags.AfterViewChecked;\n      break;\n    case LifecycleHooks.AfterViewInit:\n      nodeFlag = viewEngine.NodeFlags.AfterViewInit;\n      break;\n    case LifecycleHooks.DoCheck:\n      nodeFlag = viewEngine.NodeFlags.DoCheck;\n      break;\n    case LifecycleHooks.OnChanges:\n      nodeFlag = viewEngine.NodeFlags.OnChanges;\n      break;\n    case LifecycleHooks.OnDestroy:\n      nodeFlag = viewEngine.NodeFlags.OnDestroy;\n      break;\n    case LifecycleHooks.OnInit:\n      nodeFlag = viewEngine.NodeFlags.OnInit;\n      break;\n  }\n  return nodeFlag;\n}\n/**\n * @param {?} inputAsts\n * @return {?}\n */\nfunction elementBindingDefs(inputAsts: BoundElementPropertyAst[]): o.Expression[] {\n  return inputAsts.map((inputAst) => {\n    switch (inputAst.type) {\n      case PropertyBindingType.Attribute:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementAttribute), o.literal(inputAst.name),\n          o.literal(inputAst.securityContext)\n        ]);\n      case PropertyBindingType.Property:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementProperty), o.literal(inputAst.name),\n          o.literal(inputAst.securityContext)\n        ]);\n      case PropertyBindingType.Class:\n        return o.literalArr(\n            [o.literal(viewEngine.BindingType.ElementClass), o.literal(inputAst.name)]);\n      case PropertyBindingType.Style:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementStyle), o.literal(inputAst.name),\n          o.literal(inputAst.unit)\n        ]);\n    }\n  });\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst: ElementAst): o.Expression {\n  const /** @type {?} */ mapResult: {[key: string]: string} = {};\n  elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n  elementAst.directives.forEach(dirAst => {\n    Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n      const /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n      const /** @type {?} */ prevValue = mapResult[name];\n      mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  const /** @type {?} */ mapEntries: o.LiteralMapEntry[] = [];\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  return o.literalArr(Object.keys(mapResult).sort().map(\n      (attrName) => o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])])));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex: number, exprs: o.Expression[]): o.Expression {\n  if (exprs.length > 10) {\n    return CHECK_VAR.callFn([\n      VIEW_VAR, o.literal(nodeIndex), o.literal(viewEngine.ArgumentType.Dynamic),\n      o.literalArr(exprs)\n    ]);\n  } else {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(viewEngine.ArgumentType.Inline), ...exprs]);\n  }\n}\n/**\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(expr: o.Expression): o.Expression {\n  return o.importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([expr]);\n}\n\ninterface StaticAndDynamicQueryIds {\n  staticQueryIds: Set<number>;\n  dynamicQueryIds: Set<number>;\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(\n    nodes: TemplateAst[], result = new Map<TemplateAst, StaticAndDynamicQueryIds>()):\n    Map<TemplateAst, StaticAndDynamicQueryIds> {\n  nodes.forEach((node) => {\n    const /** @type {?} */ staticQueryIds = new Set<number>();\n    const /** @type {?} */ dynamicQueryIds = new Set<number>();\n    let /** @type {?} */ queryMatches: QueryMatch[];\n    if (node instanceof ElementAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const /** @type {?} */ childData = result.get(child);\n        childData.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    } else if (node instanceof EmbeddedTemplateAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const /** @type {?} */ childData = result.get(child);\n        childData.staticQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    }\n    if (queryMatches) {\n      queryMatches.forEach((match) => staticQueryIds.add(match.queryId));\n    }\n    dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n    result.set(node, {staticQueryIds, dynamicQueryIds});\n  });\n  return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>):\n    StaticAndDynamicQueryIds {\n  const /** @type {?} */ staticQueryIds = new Set<number>();\n  const /** @type {?} */ dynamicQueryIds = new Set<number>();\n  Array.from(nodeStaticQueryIds.values()).forEach((entry) => {\n    entry.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n    entry.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n  });\n  dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n  return {staticQueryIds, dynamicQueryIds};\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction createComponentFactoryResolver(directives: DirectiveAst[]): ProviderAst {\n  const /** @type {?} */ componentDirMeta = directives.find(dirAst => dirAst.directive.isComponent);\n  if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n    const /** @type {?} */ entryComponentFactories = componentDirMeta.directive.entryComponents.map(\n        (entryComponent) => o.importExpr({reference: entryComponent.componentFactory}));\n    const /** @type {?} */ cfrExpr = o.importExpr(createIdentifier(Identifiers.CodegenComponentFactoryResolver))\n                        .instantiate([o.literalArr(entryComponentFactories)]);\n    const /** @type {?} */ token = createIdentifierToken(Identifiers.ComponentFactoryResolver);\n    const /** @type {?} */ classMeta: CompileTypeMetadata = {\n      diDeps: [\n        {isValue: true, value: o.literalArr(entryComponentFactories)},\n        {token: token, isSkipSelf: true, isOptional: true}\n      ],\n      lifecycleHooks: [],\n      reference: resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)\n    };\n    return new ProviderAst(\n        token, false, true, [{token, multi: false, useClass: classMeta}],\n        ProviderAstType.PrivateService, [], componentDirMeta.sourceSpan);\n  }\n  return null;\n}\n"]}