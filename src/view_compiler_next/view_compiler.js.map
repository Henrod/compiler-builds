{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler_next/view_compiler.ts"],"names":[],"mappings":"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","file":"view_compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '@angular/core/index';\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileProviderMetadata, CompileTokenMetadata, identifierModuleUrl, identifierName, tokenReference} from '../compile_metadata';\nimport {BuiltinConverter, BuiltinConverterFactory, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers, createIdentifier, resolveIdentifier} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {LifecycleHooks, viewEngine} from '../private_import_core';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, ProviderAstType, QueryId, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {ViewEncapsulationEnum} from '../view_compiler/constants';\nimport {ComponentFactoryDependency, ComponentViewDependency, DirectiveWrapperDependency, ViewCompileResult, ViewCompiler} from '../view_compiler/view_compiler';\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\nconst /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n@CompilerInjectable()\nexport class ViewCompilerNext extends ViewCompiler {\n/**\n * @param {?} _genConfigNext\n * @param {?} _schemaRegistryNext\n */\nconstructor(\nprivate _genConfigNext: CompilerConfig,\nprivate _schemaRegistryNext: ElementSchemaRegistry) {\n    super(_genConfigNext, _schemaRegistryNext);\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} styles\n * @param {?} usedPipes\n * @param {?} compiledAnimations\n * @return {?}\n */\ncompileComponent(\n      component: CompileDirectiveMetadata, template: TemplateAst[], styles: o.Expression,\n      usedPipes: CompilePipeSummary[],\n      compiledAnimations: AnimationEntryCompileResult[]): ViewCompileResult {\n    const /** @type {?} */ compName = identifierName(component.type) + (component.isHost ? `_Host` : '');\n\n    let /** @type {?} */ embeddedViewCount = 0;\n\n    const /** @type {?} */ viewBuilderFactory = (parent: ViewBuilder): ViewBuilder => {\n      const /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n      const /** @type {?} */ viewName = `view_${compName}_${embeddedViewIndex}`;\n      return new ViewBuilder(parent, viewName, usedPipes, viewBuilderFactory);\n    };\n\n    const /** @type {?} */ visitor = viewBuilderFactory(null);\n    visitor.visitAll([], template, 0);\n\n    const /** @type {?} */ statements: o.Statement[] = [];\n    statements.push(...visitor.build(component));\n\n    return new ViewCompileResult(statements, visitor.viewName, []);\n  }\n}\n\nfunction ViewCompilerNext_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompilerNext.prototype._genConfigNext;\n/** @type {?} */\nViewCompilerNext.prototype._schemaRegistryNext;\n}\n\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder): ViewBuilder;\n}\n\ninterface UpdateExpression {\n  nodeIndex: number;\n  expressions: {context: o.Expression, value: AST}[];\n}\n\ninterface HandleEventExpression {\n  nodeIndex: number;\n  context: o.Expression;\n  eventName: string;\n  expression: AST;\n}\n\nconst /** @type {?} */ VIEW_VAR = o.variable('view');\nconst /** @type {?} */ CHECK_VAR = o.variable('check');\nconst /** @type {?} */ COMP_VAR = o.variable('comp');\nconst /** @type {?} */ NODE_INDEX_VAR = o.variable('nodeIndex');\nconst /** @type {?} */ EVENT_NAME_VAR = o.variable('eventName');\nconst /** @type {?} */ ALLOW_DEFAULT_VAR = o.variable(`allowDefault`);\nclass ViewBuilder implements TemplateAstVisitor, LocalResolver, BuiltinConverterFactory {\nprivate nodeDefs: o.Expression[] = [];\nprivate purePipeNodeIndices: {[pipeName: string]: number} = {};\nprivate refNodeIndices: {[refName: string]: number} = {};\nprivate variables: VariableAst[] = [];\nprivate children: ViewBuilder[] = [];\nprivate updateDirectivesExpressions: UpdateExpression[] = [];\nprivate updateRendererExpressions: UpdateExpression[] = [];\nprivate handleEventExpressions: HandleEventExpression[] = [];\n/**\n * @param {?} parent\n * @param {?} viewName\n * @param {?} usedPipes\n * @param {?} viewBuilderFactory\n */\nconstructor(\nprivate parent: ViewBuilder,\npublic viewName: string,\nprivate usedPipes: CompilePipeSummary[],\nprivate viewBuilderFactory: ViewBuilderFactory) {}\n/**\n * @param {?} variables\n * @param {?} astNodes\n * @param {?} elementDepth\n * @return {?}\n */\nvisitAll(variables: VariableAst[], astNodes: TemplateAst[], elementDepth: number) {\n    this.variables = variables;\n    // create the pipes for the pure pipes immediately, so that we know their indices.\n    if (!this.parent) {\n      this.usedPipes.forEach((pipe) => {\n        if (pipe.pure) {\n          this.purePipeNodeIndices[pipe.name] = this._createPipe(pipe);\n        }\n      });\n    }\n\n    templateVisitAll(this, astNodes, {elementDepth});\n    if (astNodes.length === 0 ||\n        (this.parent && needsAdditionalRootNode(astNodes[astNodes.length - 1]))) {\n      // if the view is empty, or an embedded view has a view container as last root nde,\n      // create an additional root node.\n      this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n        o.literal(viewEngine.NodeFlags.None), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n      ]));\n    }\n  }\n/**\n * @param {?} component\n * @param {?=} targetStatements\n * @return {?}\n */\nbuild(component: CompileDirectiveMetadata, targetStatements: o.Statement[] = []): o.Statement[] {\n    const /** @type {?} */ compType = o.importType(component.type);\n    this.children.forEach((child) => { child.build(component, targetStatements); });\n\n    const /** @type {?} */ updateDirectivesFn = this._createUpdateFn(this.updateDirectivesExpressions, compType);\n    const /** @type {?} */ updateRendererFn = this._createUpdateFn(this.updateRendererExpressions, compType);\n\n    const /** @type {?} */ handleEventStmts: o.Statement[] = [];\n    let /** @type {?} */ handleEventBindingCount = 0;\n    this.handleEventExpressions.forEach(({expression, context, nodeIndex, eventName}) => {\n      const /** @type {?} */ bindingId = `${handleEventBindingCount++}`;\n      const /** @type {?} */ nameResolver = context === COMP_VAR ? this : null;\n      const {stmts, allowDefault} =\n          convertActionBinding(nameResolver, context, expression, bindingId);\n      const /** @type {?} */ trueStmts = stmts;\n      if (allowDefault) {\n        trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n      }\n      handleEventStmts.push(new o.IfStmt(\n          o.literal(nodeIndex)\n              .identical(NODE_INDEX_VAR)\n              .and(o.literal(eventName).identical(EVENT_NAME_VAR)),\n          trueStmts));\n    });\n    let /** @type {?} */ handleEventFn: o.Expression;\n    if (handleEventStmts.length > 0) {\n      handleEventFn = o.fn(\n          [\n            new o.FnParam(VIEW_VAR.name), new o.FnParam(NODE_INDEX_VAR.name),\n            new o.FnParam(EVENT_NAME_VAR.name), new o.FnParam(EventHandlerVars.event.name)\n          ],\n          [\n            ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE),\n            COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(compType), ...handleEventStmts,\n            new o.ReturnStatement(ALLOW_DEFAULT_VAR)\n          ]);\n    } else {\n      handleEventFn = o.NULL_EXPR;\n    }\n\n    let /** @type {?} */ viewFlags = viewEngine.ViewFlags.None;\n    if (!this.parent && component.changeDetection === ChangeDetectionStrategy.OnPush) {\n      viewFlags |= viewEngine.ViewFlags.OnPush;\n    }\n    const /** @type {?} */ viewFactory = new o.DeclareFunctionStmt(\n        this.viewName, [],\n        [new o.ReturnStatement(o.importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n          o.literal(viewFlags), o.literalArr(this.nodeDefs), updateDirectivesFn, updateRendererFn,\n          handleEventFn\n        ]))]);\n\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n/**\n * @param {?} expressions\n * @param {?} compType\n * @return {?}\n */\nprivate _createUpdateFn(expressions: UpdateExpression[], compType: o.Type): o.Expression {\n    const /** @type {?} */ updateStmts: o.Statement[] = [];\n    let /** @type {?} */ updateBindingCount = 0;\n    expressions.forEach(({expressions, nodeIndex}) => {\n      const /** @type {?} */ exprs = expressions.map(({context, value}) => {\n        const /** @type {?} */ bindingId = `${updateBindingCount++}`;\n        const /** @type {?} */ nameResolver = context === COMP_VAR ? this : null;\n        const {stmts, currValExpr} =\n            convertPropertyBinding(nameResolver, context, value, bindingId);\n        updateStmts.push(...stmts);\n        return currValExpr;\n      });\n      updateStmts.push(callCheckStmt(nodeIndex, exprs).toStmt());\n    });\n    let /** @type {?} */ updateFn: o.Expression;\n    if (updateStmts.length > 0) {\n      updateFn = o.fn(\n          [new o.FnParam(CHECK_VAR.name), new o.FnParam(VIEW_VAR.name)],\n          [COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(compType), ...updateStmts]);\n    } else {\n      updateFn = o.NULL_EXPR;\n    }\n    return updateFn;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: TextAst, context: any): any {\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.textDef)).callFn([\n      o.NULL_EXPR, o.literalArr([o.literal(ast.value)])\n    ]));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array\n    this.nodeDefs.push(null);\n\n    const /** @type {?} */ astWithSource = /** @type {?} */(( <ASTWithSource>ast.value));\n    const /** @type {?} */ inter = /** @type {?} */(( <Interpolation>astWithSource.ast));\n\n    this._addUpdateExpressions(\n        nodeIndex, inter.expressions.map((expr) => { return {context: COMP_VAR, value: expr}; }),\n        this.updateRendererExpressions);\n\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.textDef)).callFn([\n      o.NULL_EXPR, o.literalArr(inter.strings.map(s => o.literal(s)))\n    ]);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: {elementDepth: number}): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchesExpr} = this._visitElementOrTemplate(nodeIndex, ast, context);\n\n    const /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n    this.children.push(childVisitor);\n    childVisitor.visitAll(ast.variables, ast.children, context.elementDepth + 1);\n\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    // anchorDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, templateFactory?: ViewDefinitionFactory): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n      o.literal(flags), queryMatchesExpr, o.NULL_EXPR, o.literal(childCount),\n      o.variable(childVisitor.viewName)\n    ]);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: {elementDepth: number}): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    const {flags, usedEvents, queryMatchesExpr, hostBindings} =\n        this._visitElementOrTemplate(nodeIndex, ast, context);\n\n    templateVisitAll(this, ast.children, {elementDepth: context.elementDepth + 1});\n\n    ast.inputs.forEach(\n        (inputAst) => { hostBindings.push({context: COMP_VAR, value: inputAst.value}); });\n    this._addUpdateExpressions(nodeIndex, hostBindings, this.updateRendererExpressions);\n\n    const /** @type {?} */ inputDefs = elementBindingDefs(ast.inputs);\n    ast.directives.forEach(\n        (dirAst, dirIndex) => { inputDefs.push(...elementBindingDefs(dirAst.hostProperties)); });\n    const /** @type {?} */ outputDefs = usedEvents.map(([target, eventName]) => {\n      return target ? o.literalArr([o.literal(target), o.literal(eventName)]) :\n                      o.literal(eventName);\n    });\n\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    // elementDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, name: string, fixedAttrs: {[name: string]: string} = {},\n    //   bindings?:\n    //       ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |\n    //         [BindingType.ElementAttribute | BindingType.ElementProperty, string,\n    //         SecurityContext])[],\n    //   outputs?: (string | [string, string])[]): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n      o.literal(flags), queryMatchesExpr, o.NULL_EXPR, o.literal(childCount), o.literal(ast.name),\n      fixedAttrsDef(ast), inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n      outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR\n    ]);\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nprivate _visitElementOrTemplate(\n      nodeIndex: number, ast: {\n        hasViewContainer: boolean,\n        outputs: BoundEventAst[],\n        directives: DirectiveAst[],\n        providers: ProviderAst[],\n        references: ReferenceAst[],\n        queryMatches: QueryMatch[]\n      },\n      context: {elementDepth: number}): {\n    flags: number,\n    usedEvents: [string, string][],\n    queryMatchesExpr: o.Expression,\n    hostBindings: {value: AST, context: o.Expression}[],\n  } {\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    if (ast.hasViewContainer) {\n      flags |= viewEngine.NodeFlags.HasEmbeddedViews;\n    }\n    const /** @type {?} */ usedEvents = new Map<string, [string, string]>();\n    ast.outputs.forEach((event) => {\n      usedEvents.set(\n          viewEngine.elementEventFullName(event.target, event.name), [event.target, event.name]);\n    });\n    ast.directives.forEach((dirAst) => {\n      dirAst.hostEvents.forEach((event) => {\n        usedEvents.set(\n            viewEngine.elementEventFullName(event.target, event.name), [event.target, event.name]);\n      });\n    });\n    const /** @type {?} */ hostBindings: {value: AST, context: o.Expression}[] = [];\n    const /** @type {?} */ hostEvents: {context: o.Expression, eventAst: BoundEventAst}[] = [];\n    ast.providers.forEach((providerAst, providerIndex) => {\n      let /** @type {?} */ dirAst: DirectiveAst;\n      let /** @type {?} */ dirIndex: number;\n      ast.directives.forEach((localDirAst, i) => {\n        if (localDirAst.directive.type.reference === providerAst.token.identifier.reference) {\n          dirAst = localDirAst;\n          dirIndex = i;\n        }\n      });\n      if (dirAst) {\n        const {hostBindings: dirHostBindings, hostEvents: dirHostEvents} = this._visitDirective(\n            providerAst, dirAst, dirIndex, nodeIndex, context.elementDepth, ast.references,\n            ast.queryMatches, usedEvents);\n        hostBindings.push(...dirHostBindings);\n        hostEvents.push(...dirHostEvents);\n      } else {\n        this._visitProvider(providerAst, ast.queryMatches);\n      }\n    });\n\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n    ast.queryMatches.forEach((match) => {\n      let /** @type {?} */ valueType: number;\n      if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n        valueType = viewEngine.QueryValueType.ElementRef;\n      } else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n        valueType = viewEngine.QueryValueType.ViewContainerRef;\n      } else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n        valueType = viewEngine.QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        queryMatchExprs.push(\n            o.literalArr([o.literal(calcQueryId(match.query)), o.literal(valueType)]));\n      }\n    });\n    ast.references.forEach((ref) => {\n      let /** @type {?} */ valueType: number;\n      if (!ref.value) {\n        valueType = viewEngine.QueryValueType.RenderElement;\n      } else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n        valueType = viewEngine.QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr([o.literal(`#${ref.name}`), o.literal(valueType)]));\n      }\n    });\n    ast.outputs.forEach(\n        (outputAst) => { hostEvents.push({context: COMP_VAR, eventAst: outputAst}); });\n    hostEvents.forEach((hostEvent) => {\n      this._addHandleEventExpression(\n          nodeIndex, hostEvent.context,\n          viewEngine.elementEventFullName(hostEvent.eventAst.target, hostEvent.eventAst.name),\n          hostEvent.eventAst.handler);\n    });\n\n    return {\n      flags,\n      usedEvents: Array.from(usedEvents.values()),\n      queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      hostBindings,\n    };\n  }\n/**\n * @param {?} providerAst\n * @param {?} directiveAst\n * @param {?} directiveIndex\n * @param {?} elementNodeIndex\n * @param {?} elementDepth\n * @param {?} refs\n * @param {?} queryMatches\n * @param {?} usedEvents\n * @return {?}\n */\nprivate _visitDirective(\n      providerAst: ProviderAst, directiveAst: DirectiveAst, directiveIndex: number,\n      elementNodeIndex: number, elementDepth: number, refs: ReferenceAst[],\n      queryMatches: QueryMatch[], usedEvents: Map<string, any>): {\n    hostBindings: {value: AST, context: o.Expression}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst}[]\n  } {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    directiveAst.directive.queries.forEach((query, queryIndex) => {\n      const /** @type {?} */ queryId: QueryId = {elementDepth, directiveIndex, queryIndex};\n      const /** @type {?} */ bindingType =\n          query.first ? viewEngine.QueryBindingType.First : viewEngine.QueryBindingType.All;\n      this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n        o.literal(viewEngine.NodeFlags.HasContentQuery), o.literal(calcQueryId(queryId)),\n        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType))])\n      ]));\n    });\n\n    // Note: the operation below might also create new nodeDefs,\n    // but we don't want them to be a child of a directive,\n    // as they might be a provider/pipe on their own.\n    // I.e. we only allow queries as children of directives nodes.\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    const {flags, queryMatchExprs, providerExpr, providerType, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    refs.forEach((ref) => {\n      if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr(\n            [o.literal(`#${ref.name}`), o.literal(viewEngine.QueryValueType.Provider)]));\n      }\n    });\n\n    let /** @type {?} */ compView = o.NULL_EXPR;\n    if (directiveAst.directive.isComponent) {\n      compView = o.importExpr({reference: directiveAst.directive.componentViewType});\n    }\n\n    const /** @type {?} */ inputDefs = directiveAst.inputs.map((inputAst, inputIndex) => {\n      const /** @type {?} */ mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n      // Note: it's important to not quote the key so that we can capture renames by minifiers!\n      return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n    });\n\n    const /** @type {?} */ outputDefs: o.LiteralMapEntry[] = [];\n    const /** @type {?} */ dirMeta = directiveAst.directive;\n    Object.keys(dirMeta.outputs).forEach((propName) => {\n      const /** @type {?} */ eventName = dirMeta.outputs[propName];\n      if (usedEvents.has(eventName)) {\n        // Note: it's important to not quote the key so that we can capture renames by minifiers!\n        outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n      }\n    });\n    if (directiveAst.inputs.length) {\n      this._addUpdateExpressions(\n          nodeIndex,\n          directiveAst.inputs.map((input) => { return {context: COMP_VAR, value: input.value}; }),\n          this.updateDirectivesExpressions);\n    }\n\n    const /** @type {?} */ dirContextExpr = o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n      VIEW_VAR, o.literal(nodeIndex)\n    ]);\n    const /** @type {?} */ hostBindings = directiveAst.hostProperties.map((hostBindingAst) => {\n      return {\n        value: ( /** @type {?} */((<ASTWithSource>hostBindingAst.value))).ast,\n        context: dirContextExpr,\n      };\n    });\n    const /** @type {?} */ hostEvents = directiveAst.hostEvents.map(\n        (hostEventAst) => { return {context: dirContextExpr, eventAst: hostEventAst}; });\n\n\n    // directiveDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n    //   any,\n    //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n      o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      o.literal(childCount), providerExpr, depsExpr,\n      inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n      outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR, compView\n    ]);\n    this.nodeDefs[nodeIndex] = nodeDef;\n\n    return {hostBindings, hostEvents};\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\nprivate _visitProvider(providerAst: ProviderAst, queryMatches: QueryMatch[]): void {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchExprs, providerExpr, providerType, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    // providerDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], type: ProviderType, token:\n    //   any,\n    //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n      o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      o.literal(providerType), tokenExpr(providerAst.token), providerExpr, depsExpr\n    ]);\n    this.nodeDefs[nodeIndex] = nodeDef;\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\nprivate _visitProviderOrDirective(providerAst: ProviderAst, queryMatches: QueryMatch[]): {\n    flags: number,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    providerType: number,\n    depsExpr: o.Expression\n  } {\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    if (!providerAst.eager) {\n      flags |= viewEngine.NodeFlags.LazyProvider;\n    }\n    providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n      // for regular providers, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy ||\n          providerAst.providerType === ProviderAstType.Directive ||\n          providerAst.providerType === ProviderAstType.Component) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n\n    queryMatches.forEach((match) => {\n      if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n        queryMatchExprs.push(o.literalArr(\n            [o.literal(calcQueryId(match.query)), o.literal(viewEngine.QueryValueType.Provider)]));\n      }\n    });\n    const {providerExpr, providerType, depsExpr} = providerDef(providerAst);\n    return {flags, queryMatchExprs, providerExpr, providerType, depsExpr};\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let /** @type {?} */ currViewExpr: o.Expression = VIEW_VAR;\n    for (let /** @type {?} */ currBuilder: ViewBuilder = this; currBuilder;\n         currBuilder = currBuilder.parent, currViewExpr = currViewExpr.prop('parent')) {\n      // check references\n      const /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n      if (refNodeIndex != null) {\n        return o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n          currViewExpr, o.literal(refNodeIndex)\n        ]);\n      }\n\n      // check variables\n      const /** @type {?} */ varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n      if (varAst) {\n        const /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n        return currViewExpr.prop('context').prop(varValue);\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} argCount\n * @return {?}\n */\ncreateLiteralArrayConverter(argCount: number): BuiltinConverter {\n    if (argCount === 0) {\n      const /** @type {?} */ valueExpr = o.importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));\n      return () => valueExpr;\n    }\n\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // pureArrayDef(argCount: number): NodeDef;\n    const /** @type {?} */ nodeDef =\n        o.importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([o.literal(argCount)]);\n    this.nodeDefs.push(nodeDef);\n\n    return (args: o.Expression[]) => callCheckStmt(nodeIndex, args);\n  }\n/**\n * @param {?} keys\n * @return {?}\n */\ncreateLiteralMapConverter(keys: string[]): BuiltinConverter {\n    if (keys.length === 0) {\n      const /** @type {?} */ valueExpr = o.importExpr(createIdentifier(Identifiers.EMPTY_MAP));\n      return () => valueExpr;\n    }\n\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // function pureObjectDef(propertyNames: string[]): NodeDef\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.pureObjectDef)).callFn([o.literalArr(\n        keys.map(key => o.literal(key)))]);\n    this.nodeDefs.push(nodeDef);\n\n    return (args: o.Expression[]) => callCheckStmt(nodeIndex, args);\n  }\n/**\n * @param {?} name\n * @param {?} argCount\n * @return {?}\n */\ncreatePipeConverter(name: string, argCount: number): BuiltinConverter {\n    const /** @type {?} */ pipe = this._findPipe(name);\n    if (pipe.pure) {\n      const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n      // function purePipeDef(argCount: number): NodeDef;\n      const /** @type {?} */ nodeDef =\n          o.importExpr(createIdentifier(Identifiers.purePipeDef)).callFn([o.literal(argCount)]);\n      this.nodeDefs.push(nodeDef);\n\n      // find underlying pipe in the component view\n      let /** @type {?} */ compViewExpr: o.Expression = VIEW_VAR;\n      let /** @type {?} */ compBuilder: ViewBuilder = this;\n      while (compBuilder.parent) {\n        compBuilder = compBuilder.parent;\n        compViewExpr = compViewExpr.prop('parent');\n      }\n      const /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n      const /** @type {?} */ pipeValueExpr: o.Expression =\n          o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n            compViewExpr, o.literal(pipeNodeIndex)\n          ]);\n\n      return (args: o.Expression[]) =>\n                 callUnwrapValue(callCheckStmt(nodeIndex, [pipeValueExpr].concat(args)));\n    } else {\n      const /** @type {?} */ nodeIndex = this._createPipe(pipe);\n      const /** @type {?} */ nodeValueExpr = o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n        VIEW_VAR, o.literal(nodeIndex)\n      ]);\n\n      return (args: o.Expression[]) => callUnwrapValue(nodeValueExpr.callMethod('transform', args));\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate _findPipe(name: string): CompilePipeSummary {\n    return this.usedPipes.find((pipeSummary) => pipeSummary.name === name);\n  }\n/**\n * @param {?} pipe\n * @return {?}\n */\nprivate _createPipe(pipe: CompilePipeSummary): number {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n      // for pipes, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n\n    const /** @type {?} */ depExprs = pipe.type.diDeps.map(depDef);\n    // function pipeDef(\n    //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.pipeDef)).callFn([\n      o.literal(flags), o.importExpr(pipe.type), o.literalArr(depExprs)\n    ]);\n    this.nodeDefs.push(nodeDef);\n    return nodeIndex;\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} expressions\n * @param {?} target\n * @return {?}\n */\nprivate _addUpdateExpressions(\n      nodeIndex: number, expressions: {context: o.Expression, value: AST}[],\n      target: UpdateExpression[]) {\n    if (expressions.length === 0) {\n      return;\n    }\n    const /** @type {?} */ transformedExpressions = expressions.map(({context, value}) => {\n      if (value instanceof ASTWithSource) {\n        value = value.ast;\n      }\n      return {context, value: convertPropertyBindingBuiltins(this, value)};\n    });\n    target.push({nodeIndex, expressions: transformedExpressions});\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} context\n * @param {?} eventName\n * @param {?} expression\n * @return {?}\n */\nprivate _addHandleEventExpression(\n      nodeIndex: number, context: o.Expression, eventName: string, expression: AST) {\n    if (expression instanceof ASTWithSource) {\n      expression = expression.ast;\n    }\n    this.handleEventExpressions.push({nodeIndex, context, eventName, expression});\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: {usedEvents: Set<string>}): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitVariable(ast: VariableAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: AttrAst, context: any): any {}\n}\n\nfunction ViewBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nViewBuilder.prototype.nodeDefs;\n/** @type {?} */\nViewBuilder.prototype.purePipeNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.refNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.variables;\n/** @type {?} */\nViewBuilder.prototype.children;\n/** @type {?} */\nViewBuilder.prototype.updateDirectivesExpressions;\n/** @type {?} */\nViewBuilder.prototype.updateRendererExpressions;\n/** @type {?} */\nViewBuilder.prototype.handleEventExpressions;\n/** @type {?} */\nViewBuilder.prototype.parent;\n/** @type {?} */\nViewBuilder.prototype.viewName;\n/** @type {?} */\nViewBuilder.prototype.usedPipes;\n/** @type {?} */\nViewBuilder.prototype.viewBuilderFactory;\n}\n\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst: ProviderAst):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  return providerAst.multiProvider ? multiProviderDef(providerAst.providers) :\n                                     singleProviderDef(providerAst.providers[0]);\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(providers: CompileProviderMetadata[]):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  const /** @type {?} */ allDepDefs: o.Expression[] = [];\n  const /** @type {?} */ allParams: o.FnParam[] = [];\n  const /** @type {?} */ exprs = providers.map((provider, providerIndex) => {\n    const /** @type {?} */ depExprs = provider.deps.map((dep, depIndex) => {\n      const /** @type {?} */ paramName = `p${providerIndex}_${depIndex}`;\n      allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n      allDepDefs.push(depDef(dep));\n      return o.variable(paramName);\n    });\n    let /** @type {?} */ expr: o.Expression;\n    if (provider.useClass) {\n      expr = o.importExpr(provider.useClass).instantiate(depExprs);\n    } else if (provider.useFactory) {\n      expr = o.importExpr(provider.useFactory).callFn(depExprs);\n    } else if (provider.useExisting) {\n      expr = depExprs[0];\n    } else {\n      expr = convertValueToOutputAst(provider.useValue);\n    }\n    return expr;\n  });\n  const /** @type {?} */ providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))]);\n  return {\n    providerExpr,\n    providerType: viewEngine.ProviderType.Factory,\n    depsExpr: o.literalArr(allDepDefs)\n  };\n}\n/**\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(providerMeta: CompileProviderMetadata):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  let /** @type {?} */ providerExpr: o.Expression;\n  let /** @type {?} */ providerType: number;\n  let /** @type {?} */ deps: CompileDiDependencyMetadata[];\n  if (providerMeta.useClass) {\n    providerExpr = o.importExpr(providerMeta.useClass);\n    providerType = viewEngine.ProviderType.Class;\n    deps = providerMeta.deps || providerMeta.useClass.diDeps;\n  } else if (providerMeta.useFactory) {\n    providerExpr = o.importExpr(providerMeta.useFactory);\n    providerType = viewEngine.ProviderType.Factory;\n    deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n  } else if (providerMeta.useExisting) {\n    providerExpr = o.NULL_EXPR;\n    providerType = viewEngine.ProviderType.UseExisting;\n    deps = [{token: providerMeta.useExisting}];\n  } else {\n    providerExpr = convertValueToOutputAst(providerMeta.useValue);\n    providerType = viewEngine.ProviderType.Value;\n    deps = [];\n  }\n  const /** @type {?} */ depsExpr = o.literalArr(deps.map(dep => depDef(dep)));\n  return {providerExpr, providerType, depsExpr};\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta: CompileTokenMetadata): o.Expression {\n  return tokenMeta.identifier ? o.importExpr(tokenMeta.identifier) : o.literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep: CompileDiDependencyMetadata): o.Expression {\n  // Note: the following fields have already been normalized out by provider_analyzer:\n  // - isAttribute, isSelf, isHost\n  const /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(dep.token);\n  let /** @type {?} */ flags = viewEngine.DepFlags.None;\n  if (dep.isSkipSelf) {\n    flags |= viewEngine.DepFlags.SkipSelf;\n  }\n  if (dep.isOptional) {\n    flags |= viewEngine.DepFlags.Optional;\n  }\n  if (dep.isValue) {\n    flags |= viewEngine.DepFlags.Value;\n  }\n  return flags === viewEngine.DepFlags.None ? expr : o.literalArr([o.literal(flags), expr]);\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction needsAdditionalRootNode(ast: TemplateAst): boolean {\n  if (ast instanceof EmbeddedTemplateAst) {\n    return ast.hasViewContainer;\n  }\n\n  if (ast instanceof ElementAst) {\n    return ast.hasViewContainer;\n  }\n\n  return ast instanceof NgContentAst;\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction calcQueryId(queryId: QueryId): string {\n  if (queryId.directiveIndex == null) {\n    // view query\n    return `v${queryId.queryIndex}`;\n  } else {\n    return `c${queryId.elementDepth}_${queryId.directiveIndex}_${queryId.queryIndex}`;\n  }\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook: LifecycleHooks): number {\n  let /** @type {?} */ nodeFlag = viewEngine.NodeFlags.None;\n  switch (lifecycleHook) {\n    case LifecycleHooks.AfterContentChecked:\n      nodeFlag = viewEngine.NodeFlags.AfterContentChecked;\n      break;\n    case LifecycleHooks.AfterContentInit:\n      nodeFlag = viewEngine.NodeFlags.AfterContentInit;\n      break;\n    case LifecycleHooks.AfterViewChecked:\n      nodeFlag = viewEngine.NodeFlags.AfterViewChecked;\n      break;\n    case LifecycleHooks.AfterViewInit:\n      nodeFlag = viewEngine.NodeFlags.AfterViewInit;\n      break;\n    case LifecycleHooks.DoCheck:\n      nodeFlag = viewEngine.NodeFlags.DoCheck;\n      break;\n    case LifecycleHooks.OnChanges:\n      nodeFlag = viewEngine.NodeFlags.OnChanges;\n      break;\n    case LifecycleHooks.OnDestroy:\n      nodeFlag = viewEngine.NodeFlags.OnDestroy;\n      break;\n    case LifecycleHooks.OnInit:\n      nodeFlag = viewEngine.NodeFlags.OnInit;\n      break;\n  }\n  return nodeFlag;\n}\n/**\n * @param {?} inputAsts\n * @return {?}\n */\nfunction elementBindingDefs(inputAsts: BoundElementPropertyAst[]): o.Expression[] {\n  return inputAsts.map((inputAst) => {\n    switch (inputAst.type) {\n      case PropertyBindingType.Attribute:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementAttribute), o.literal(inputAst.name),\n          o.literal(inputAst.securityContext)\n        ]);\n      case PropertyBindingType.Property:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementProperty), o.literal(inputAst.name),\n          o.literal(inputAst.securityContext)\n        ]);\n      case PropertyBindingType.Class:\n        return o.literalArr(\n            [o.literal(viewEngine.BindingType.ElementClass), o.literal(inputAst.name)]);\n      case PropertyBindingType.Style:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementStyle), o.literal(inputAst.name),\n          o.literal(inputAst.unit)\n        ]);\n    }\n  });\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst: ElementAst): o.LiteralMapExpr {\n  const /** @type {?} */ mapResult: {[key: string]: string} = {};\n  elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n  elementAst.directives.forEach(dirAst => {\n    Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n      const /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n      const /** @type {?} */ prevValue = mapResult[name];\n      mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  const /** @type {?} */ mapEntries: o.LiteralMapEntry[] = [];\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  Object.keys(mapResult).sort().forEach((attrName) => {\n    mapEntries.push(new o.LiteralMapEntry(attrName, o.literal(mapResult[attrName]), true));\n  });\n  return new o.LiteralMapExpr(mapEntries);\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex: number, exprs: o.Expression[]): o.Expression {\n  if (exprs.length > 10) {\n    return CHECK_VAR.callFn([\n      VIEW_VAR, o.literal(nodeIndex), o.literal(viewEngine.ArgumentType.Dynamic),\n      o.literalArr(exprs)\n    ]);\n  } else {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(viewEngine.ArgumentType.Inline), ...exprs]);\n  }\n}\n/**\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(expr: o.Expression): o.Expression {\n  return o.importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([expr]);\n}"]}