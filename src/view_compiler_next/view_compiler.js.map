{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler_next/view_compiler.ts"],"names":[],"mappings":"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","file":"view_compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '@angular/core/index';\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileProviderMetadata, CompileTokenMetadata, identifierModuleUrl, identifierName, tokenReference} from '../compile_metadata';\nimport {EventHandlerVars, NameResolver, convertActionBinding, convertPropertyBinding} from '../compiler_util/expression_converter';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers, createIdentifier, resolveIdentifier} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {LifecycleHooks, viewEngine} from '../private_import_core';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, ProviderAstType, QueryId, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {ViewEncapsulationEnum} from '../view_compiler/constants';\nimport {ComponentFactoryDependency, ComponentViewDependency, DirectiveWrapperDependency, ViewCompileResult, ViewCompiler} from '../view_compiler/view_compiler';\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\n@CompilerInjectable()\nexport class ViewCompilerNext extends ViewCompiler {\n/**\n * @param {?} _genConfigNext\n * @param {?} _schemaRegistryNext\n */\nconstructor(\nprivate _genConfigNext: CompilerConfig,\nprivate _schemaRegistryNext: ElementSchemaRegistry) {\n    super(_genConfigNext, _schemaRegistryNext);\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} styles\n * @param {?} pipes\n * @param {?} compiledAnimations\n * @return {?}\n */\ncompileComponent(\n      component: CompileDirectiveMetadata, template: TemplateAst[], styles: o.Expression,\n      pipes: CompilePipeSummary[],\n      compiledAnimations: AnimationEntryCompileResult[]): ViewCompileResult {\n    const /** @type {?} */ compName = identifierName(component.type) + (component.isHost ? `_Host` : '');\n\n    let /** @type {?} */ embeddedViewCount = 0;\n\n    const /** @type {?} */ viewBuilderFactory = (parent: ViewBuilder): ViewBuilder => {\n      const /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n      const /** @type {?} */ viewName = `view_${compName}_${embeddedViewIndex}`;\n      return new ViewBuilder(parent, viewName, viewBuilderFactory);\n    };\n\n    const /** @type {?} */ visitor = viewBuilderFactory(null);\n    visitor.visitAll([], template, 0);\n\n    const /** @type {?} */ statements: o.Statement[] = [];\n    statements.push(...visitor.build(component));\n\n    return new ViewCompileResult(statements, visitor.viewName, []);\n  }\n}\n\nfunction ViewCompilerNext_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompilerNext.prototype._genConfigNext;\n/** @type {?} */\nViewCompilerNext.prototype._schemaRegistryNext;\n}\n\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder): ViewBuilder;\n}\n\ninterface UpdateExpression {\n  nodeIndex: number;\n  expressions: {context: o.Expression, value: AST}[];\n}\n\ninterface HandleEventExpression {\n  nodeIndex: number;\n  context: o.Expression;\n  eventName: string;\n  expression: AST;\n}\n\nconst /** @type {?} */ VIEW_VAR = o.variable('view');\nconst /** @type {?} */ CHECK_VAR = o.variable('check');\nconst /** @type {?} */ COMP_VAR = o.variable('comp');\nconst /** @type {?} */ NODE_INDEX_VAR = o.variable('nodeIndex');\nconst /** @type {?} */ EVENT_NAME_VAR = o.variable('eventName');\nconst /** @type {?} */ ALLOW_DEFAULT_VAR = o.variable(`allowDefault`);\nclass ViewBuilder implements TemplateAstVisitor, NameResolver {\nprivate nodeDefs: o.Expression[] = [];\nprivate refNodeIndices: {[refName: string]: number} = {};\nprivate variables: VariableAst[] = [];\nprivate children: ViewBuilder[] = [];\nprivate updateExpressions: UpdateExpression[] = [];\nprivate handleEventExpressions: HandleEventExpression[] = [];\n/**\n * @param {?} parent\n * @param {?} viewName\n * @param {?} viewBuilderFactory\n */\nconstructor(\nprivate parent: ViewBuilder,\npublic viewName: string,\nprivate viewBuilderFactory: ViewBuilderFactory) {}\n/**\n * @param {?} variables\n * @param {?} astNodes\n * @param {?} elementDepth\n * @return {?}\n */\nvisitAll(variables: VariableAst[], astNodes: TemplateAst[], elementDepth: number) {\n    this.variables = variables;\n    templateVisitAll(this, astNodes, {elementDepth});\n    if (astNodes.length === 0 || (this.parent && hasViewContainer(astNodes[astNodes.length - 1]))) {\n      // if the view is empty, or an embedded view has a view container as last root nde,\n      // create an additional root node.\n      this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n        o.literal(viewEngine.NodeFlags.None), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n      ]));\n    }\n  }\n/**\n * @param {?} component\n * @param {?=} targetStatements\n * @return {?}\n */\nbuild(component: CompileDirectiveMetadata, targetStatements: o.Statement[] = []): o.Statement[] {\n    const /** @type {?} */ compType = o.importType(component.type);\n    this.children.forEach((child) => { child.build(component, targetStatements); });\n\n    const /** @type {?} */ updateStmts: o.Statement[] = [];\n    let /** @type {?} */ updateBindingCount = 0;\n    this.updateExpressions\n        .forEach(\n            ({expressions, nodeIndex}) => {\n              const /** @type {?} */ exprs = expressions.map(({context, value}) => {\n                const /** @type {?} */ bindingId = `${updateBindingCount++}`;\n                const {stmts, currValExpr} =\n                    convertPropertyBinding(null, this, context, value, bindingId);\n                updateStmts.push(...stmts);\n                return currValExpr;\n              });\n              if (exprs.length > 10) {\n                updateStmts.push(\n                    CHECK_VAR\n                        .callFn([\n                          VIEW_VAR, o.literal(nodeIndex),\n                          o.literal(viewEngine.ArgumentType.Dynamic), o.literalArr(exprs)\n                        ])\n                        .toStmt());\n              } else {\n                updateStmts.push(\n            CHECK_VAR.callFn(( /** @type {?} */((<o.Expression[]>[VIEW_VAR, o.literal(nodeIndex), o.literal(viewEngine.ArgumentType.Inline)]))).concat(exprs)).toStmt());\n              }\n            });\n    let /** @type {?} */ updateFn: o.Expression;\n    if (updateStmts.length > 0) {\n      updateFn = o.fn(\n          [new o.FnParam(CHECK_VAR.name), new o.FnParam(VIEW_VAR.name)],\n          [COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(compType), ...updateStmts]);\n    } else {\n      updateFn = o.NULL_EXPR;\n    }\n\n    const /** @type {?} */ handleEventStmts: o.Statement[] = [];\n    let /** @type {?} */ handleEventBindingCount = 0;\n    this.handleEventExpressions.forEach(({expression, context, nodeIndex, eventName}) => {\n      const /** @type {?} */ bindingId = `${handleEventBindingCount++}`;\n      const {stmts, allowDefault} =\n          convertActionBinding(null, this, context, expression, bindingId);\n      const /** @type {?} */ trueStmts = stmts;\n      if (allowDefault) {\n        trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n      }\n      handleEventStmts.push(new o.IfStmt(\n          o.literal(nodeIndex)\n              .identical(NODE_INDEX_VAR)\n              .and(o.literal(eventName).identical(EVENT_NAME_VAR)),\n          trueStmts));\n    });\n    let /** @type {?} */ handleEventFn: o.Expression;\n    if (handleEventStmts.length > 0) {\n      handleEventFn = o.fn(\n          [\n            new o.FnParam(VIEW_VAR.name), new o.FnParam(NODE_INDEX_VAR.name),\n            new o.FnParam(EVENT_NAME_VAR.name), new o.FnParam(EventHandlerVars.event.name)\n          ],\n          [\n            ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE),\n            COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(compType), ...handleEventStmts,\n            new o.ReturnStatement(ALLOW_DEFAULT_VAR)\n          ]);\n    } else {\n      handleEventFn = o.NULL_EXPR;\n    }\n\n    let /** @type {?} */ viewFlags = viewEngine.ViewFlags.None;\n    if (!this.parent && component.changeDetection === ChangeDetectionStrategy.OnPush) {\n      viewFlags |= viewEngine.ViewFlags.OnPush;\n    }\n    const /** @type {?} */ viewFactory = new o.DeclareFunctionStmt(\n        this.viewName, [],\n        [new o.ReturnStatement(o.importExpr(createIdentifier(Identifiers.viewDef)).callFn([\n          o.literal(viewFlags), o.literalArr(this.nodeDefs), updateFn, handleEventFn\n        ]))]);\n\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: TextAst, context: any): any {\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.textDef)).callFn([\n      o.NULL_EXPR, o.literalArr([o.literal(ast.value)])\n    ]));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    const /** @type {?} */ astWithSource = /** @type {?} */(( <ASTWithSource>ast.value));\n    const /** @type {?} */ inter = /** @type {?} */(( <Interpolation>astWithSource.ast));\n    this.updateExpressions.push({\n      nodeIndex,\n      expressions: inter.expressions.map((expr) => { return {context: COMP_VAR, value: expr}; })\n    });\n\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.textDef)).callFn([\n      o.NULL_EXPR, o.literalArr(inter.strings.map(s => o.literal(s)))\n    ]));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: {elementDepth: number}): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchesExpr} = this._visitElementOrTemplate(nodeIndex, ast, context);\n\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n    const /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n    this.children.push(childVisitor);\n    childVisitor.visitAll(ast.variables, ast.children, context.elementDepth + 1);\n\n    // anchorDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, templateFactory?: ViewDefinitionFactory): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.anchorDef)).callFn([\n      o.literal(flags), queryMatchesExpr, o.NULL_EXPR, o.literal(childCount),\n      o.variable(childVisitor.viewName)\n    ]);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: {elementDepth: number}): any {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    const {flags, usedEvents, queryMatchesExpr, hostBindings} =\n        this._visitElementOrTemplate(nodeIndex, ast, context);\n\n    templateVisitAll(this, ast.children, {elementDepth: context.elementDepth + 1});\n\n    const /** @type {?} */ childCount = this.nodeDefs.length - nodeIndex - 1;\n\n    ast.inputs.forEach((inputAst) => {\n      hostBindings.push({context: COMP_VAR, value: ( /** @type {?} */((<ASTWithSource>inputAst.value))).ast});\n    });\n    this.updateExpressions.push({nodeIndex, expressions: hostBindings});\n\n    const /** @type {?} */ inputDefs = elementBindingDefs(ast.inputs);\n    ast.directives.forEach(\n        (dirAst, dirIndex) => { inputDefs.push(...elementBindingDefs(dirAst.hostProperties)); });\n    const /** @type {?} */ outputDefs = usedEvents.map(([target, eventName]) => {\n      return target ? o.literalArr([o.literal(target), o.literal(eventName)]) :\n                      o.literal(eventName);\n    });\n\n    // elementDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, name: string, fixedAttrs: {[name: string]: string} = {},\n    //   bindings?:\n    //       ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |\n    //         [BindingType.ElementAttribute | BindingType.ElementProperty, string,\n    //         SecurityContext])[],\n    //   outputs?: (string | [string, string])[]): NodeDef;\n    this.nodeDefs[nodeIndex] = o.importExpr(createIdentifier(Identifiers.elementDef)).callFn([\n      o.literal(flags), queryMatchesExpr, o.NULL_EXPR, o.literal(childCount), o.literal(ast.name),\n      fixedAttrsDef(ast), inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n      outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR\n    ]);\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nprivate _visitElementOrTemplate(\n      nodeIndex: number, ast: {\n        hasViewContainer: boolean,\n        outputs: BoundEventAst[],\n        directives: DirectiveAst[],\n        providers: ProviderAst[],\n        references: ReferenceAst[],\n        queryMatches: QueryMatch[]\n      },\n      context: {elementDepth: number}): {\n    flags: number,\n    usedEvents: [string, string][],\n    queryMatchesExpr: o.Expression,\n    hostBindings: {value: AST, context: o.Expression}[],\n  } {\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    if (ast.hasViewContainer) {\n      flags |= viewEngine.NodeFlags.HasEmbeddedViews;\n    }\n    const /** @type {?} */ usedEvents = new Map<string, [string, string]>();\n    ast.outputs.forEach((event) => {\n      usedEvents.set(\n          viewEngine.elementEventFullName(event.target, event.name), [event.target, event.name]);\n    });\n    ast.directives.forEach((dirAst) => {\n      dirAst.hostEvents.forEach((event) => {\n        usedEvents.set(\n            viewEngine.elementEventFullName(event.target, event.name), [event.target, event.name]);\n      });\n    });\n    const /** @type {?} */ hostBindings: {value: AST, context: o.Expression}[] = [];\n    const /** @type {?} */ hostEvents: {context: o.Expression, eventAst: BoundEventAst}[] = [];\n    ast.providers.forEach((providerAst, providerIndex) => {\n      let /** @type {?} */ dirAst: DirectiveAst;\n      let /** @type {?} */ dirIndex: number;\n      ast.directives.forEach((localDirAst, i) => {\n        if (localDirAst.directive.type.reference === providerAst.token.identifier.reference) {\n          dirAst = localDirAst;\n          dirIndex = i;\n        }\n      });\n      if (dirAst) {\n        const {hostBindings: dirHostBindings, hostEvents: dirHostEvents} = this._visitDirective(\n            providerAst, dirAst, dirIndex, nodeIndex, context.elementDepth, ast.references,\n            ast.queryMatches, usedEvents);\n        hostBindings.push(...dirHostBindings);\n        hostEvents.push(...dirHostEvents);\n      } else {\n        this._visitProvider(providerAst, ast.queryMatches);\n      }\n    });\n\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n    ast.queryMatches.forEach((match) => {\n      let /** @type {?} */ valueType: number;\n      if (tokenReference(match.value) === resolveIdentifier(Identifiers.ElementRef)) {\n        valueType = viewEngine.QueryValueType.ElementRef;\n      } else if (tokenReference(match.value) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n        valueType = viewEngine.QueryValueType.ViewContainerRef;\n      } else if (tokenReference(match.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n        valueType = viewEngine.QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        queryMatchExprs.push(\n            o.literalArr([o.literal(calcQueryId(match.query)), o.literal(valueType)]));\n      }\n    });\n    ast.references.forEach((ref) => {\n      let /** @type {?} */ valueType: number;\n      if (!ref.value) {\n        valueType = viewEngine.QueryValueType.RenderElement;\n      } else if (tokenReference(ref.value) === resolveIdentifier(Identifiers.TemplateRef)) {\n        valueType = viewEngine.QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr([o.literal(`#${ref.name}`), o.literal(valueType)]));\n      }\n    });\n    ast.outputs.forEach(\n        (outputAst) => { hostEvents.push({context: COMP_VAR, eventAst: outputAst}); });\n    hostEvents.forEach((hostEvent) => {\n      this.handleEventExpressions.push({\n        nodeIndex,\n        context: hostEvent.context,\n        eventName:\n            viewEngine.elementEventFullName(hostEvent.eventAst.target, hostEvent.eventAst.name),\n        expression: ( /** @type {?} */((<ASTWithSource>hostEvent.eventAst.handler))).ast\n      });\n    });\n\n    return {\n      flags,\n      usedEvents: Array.from(usedEvents.values()),\n      queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      hostBindings,\n    };\n  }\n/**\n * @param {?} providerAst\n * @param {?} directiveAst\n * @param {?} directiveIndex\n * @param {?} elementNodeIndex\n * @param {?} elementDepth\n * @param {?} refs\n * @param {?} queryMatches\n * @param {?} usedEvents\n * @return {?}\n */\nprivate _visitDirective(\n      providerAst: ProviderAst, directiveAst: DirectiveAst, directiveIndex: number,\n      elementNodeIndex: number, elementDepth: number, refs: ReferenceAst[],\n      queryMatches: QueryMatch[], usedEvents: Map<string, any>): {\n    hostBindings: {value: AST, context: o.Expression}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst}[]\n  } {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchExprs, providerExpr, providerType, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    refs.forEach((ref) => {\n      if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr(\n            [o.literal(`#${ref.name}`), o.literal(viewEngine.QueryValueType.Provider)]));\n      }\n    });\n\n    let /** @type {?} */ compView = o.NULL_EXPR;\n    if (directiveAst.directive.isComponent) {\n      compView = o.importExpr({reference: directiveAst.directive.componentViewType});\n    }\n\n    const /** @type {?} */ inputDefs = directiveAst.inputs.map((inputAst, inputIndex) => {\n      const /** @type {?} */ mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n      // Note: it's important to not quote the key so that we can capture renames by minifiers!\n      return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n    });\n\n    const /** @type {?} */ outputDefs: o.LiteralMapEntry[] = [];\n    const /** @type {?} */ dirMeta = directiveAst.directive;\n    Object.keys(dirMeta.outputs).forEach((propName) => {\n      const /** @type {?} */ eventName = dirMeta.outputs[propName];\n      if (usedEvents.has(eventName)) {\n        // Note: it's important to not quote the key so that we can capture renames by minifiers!\n        outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n      }\n    });\n    if (directiveAst.inputs.length) {\n      this.updateExpressions.push({\n        nodeIndex,\n        expressions: directiveAst.inputs.map(\n            input => { return {context: COMP_VAR, value: ( /** @type {?} */((<ASTWithSource>input.value))).ast}; })\n      });\n    }\n\n    const /** @type {?} */ dirContextExpr = o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n      VIEW_VAR, o.literal(nodeIndex)\n    ]);\n    const /** @type {?} */ hostBindings = directiveAst.hostProperties.map((hostBindingAst) => {\n      return {\n        value: ( /** @type {?} */((<ASTWithSource>hostBindingAst.value))).ast,\n        context: dirContextExpr,\n      };\n    });\n    const /** @type {?} */ hostEvents = directiveAst.hostEvents.map(\n        (hostEventAst) => { return {context: dirContextExpr, eventAst: hostEventAst}; });\n\n    const /** @type {?} */ childCount = directiveAst.directive.queries.length;\n    directiveAst.directive.queries.forEach((query, queryIndex) => {\n      const /** @type {?} */ queryId: QueryId = {elementDepth, directiveIndex, queryIndex};\n      const /** @type {?} */ bindingType =\n          query.first ? viewEngine.QueryBindingType.First : viewEngine.QueryBindingType.All;\n      // queryDef(\n      //   flags: NodeFlags, id: string, bindings: {[propName: string]: QueryBindingType}): NodeDef\n      //   {\n      this.nodeDefs.push(o.importExpr(createIdentifier(Identifiers.queryDef)).callFn([\n        o.literal(viewEngine.NodeFlags.HasContentQuery), o.literal(calcQueryId(queryId)),\n        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType))])\n      ]));\n    });\n\n    // directiveDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n    //   any,\n    //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.directiveDef)).callFn([\n      o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      o.literal(childCount), providerExpr, depsExpr,\n      inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n      outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR, compView\n    ]);\n    this.nodeDefs[nodeIndex] = nodeDef;\n\n    return {hostBindings, hostEvents};\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\nprivate _visitProvider(providerAst: ProviderAst, queryMatches: QueryMatch[]): void {\n    const /** @type {?} */ nodeIndex = this.nodeDefs.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodeDefs.push(null);\n\n    const {flags, queryMatchExprs, providerExpr, providerType, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    // providerDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], type: ProviderType, token:\n    //   any,\n    //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n    const /** @type {?} */ nodeDef = o.importExpr(createIdentifier(Identifiers.providerDef)).callFn([\n      o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      o.literal(providerType), tokenExpr(providerAst.token), providerExpr, depsExpr\n    ]);\n    this.nodeDefs[nodeIndex] = nodeDef;\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\nprivate _visitProviderOrDirective(providerAst: ProviderAst, queryMatches: QueryMatch[]): {\n    flags: number,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    providerType: number,\n    depsExpr: o.Expression\n  } {\n    let /** @type {?} */ flags = viewEngine.NodeFlags.None;\n    if (!providerAst.eager) {\n      flags |= viewEngine.NodeFlags.LazyProvider;\n    }\n    providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n      // for regular providers, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy ||\n          providerAst.providerType === ProviderAstType.Directive ||\n          providerAst.providerType === ProviderAstType.Component) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n\n    queryMatches.forEach((match) => {\n      if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n        queryMatchExprs.push(o.literalArr(\n            [o.literal(calcQueryId(match.query)), o.literal(viewEngine.QueryValueType.Provider)]));\n      }\n    });\n    const {providerExpr, providerType, depsExpr} = providerDef(providerAst);\n    return {flags, queryMatchExprs, providerExpr, providerType, depsExpr};\n  }\n/**\n * @param {?} name\n * @param {?} input\n * @param {?} args\n * @return {?}\n */\ncallPipe(name: string, input: o.Expression, args: o.Expression[]): o.Expression {\n    throw new Error('Pipes are not yet supported!');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let /** @type {?} */ currViewExpr: o.Expression = VIEW_VAR;\n    for (let /** @type {?} */ currBuilder: ViewBuilder = this; currBuilder;\n         currBuilder = currBuilder.parent, currViewExpr = currViewExpr.prop('parent')) {\n      // check references\n      const /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n      if (refNodeIndex != null) {\n        return o.importExpr(createIdentifier(Identifiers.nodeValue)).callFn([\n          currViewExpr, o.literal(refNodeIndex)\n        ]);\n      }\n\n      // check variables\n      const /** @type {?} */ varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n      if (varAst) {\n        return currViewExpr.prop('context').prop(varAst.value);\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: {usedEvents: Set<string>}): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitVariable(ast: VariableAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: AttrAst, context: any): any {}\n}\n\nfunction ViewBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nViewBuilder.prototype.nodeDefs;\n/** @type {?} */\nViewBuilder.prototype.refNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.variables;\n/** @type {?} */\nViewBuilder.prototype.children;\n/** @type {?} */\nViewBuilder.prototype.updateExpressions;\n/** @type {?} */\nViewBuilder.prototype.handleEventExpressions;\n/** @type {?} */\nViewBuilder.prototype.parent;\n/** @type {?} */\nViewBuilder.prototype.viewName;\n/** @type {?} */\nViewBuilder.prototype.viewBuilderFactory;\n}\n\n/**\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(providerAst: ProviderAst):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  return providerAst.multiProvider ? multiProviderDef(providerAst.providers) :\n                                     singleProviderDef(providerAst.providers[0]);\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(providers: CompileProviderMetadata[]):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  const /** @type {?} */ allDepDefs: o.Expression[] = [];\n  const /** @type {?} */ allParams: o.FnParam[] = [];\n  const /** @type {?} */ exprs = providers.map((provider, providerIndex) => {\n    const /** @type {?} */ depExprs = provider.deps.map((dep, depIndex) => {\n      const /** @type {?} */ paramName = `p${providerIndex}_${depIndex}`;\n      allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n      allDepDefs.push(depDef(dep));\n      return o.variable(paramName);\n    });\n    let /** @type {?} */ expr: o.Expression;\n    if (provider.useClass) {\n      expr = o.importExpr(provider.useClass).instantiate(depExprs);\n    } else if (provider.useFactory) {\n      expr = o.importExpr(provider.useFactory).callFn(depExprs);\n    } else if (provider.useExisting) {\n      expr = depExprs[0];\n    } else {\n      expr = convertValueToOutputAst(provider.useValue);\n    }\n    return expr;\n  });\n  const /** @type {?} */ providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))]);\n  return {\n    providerExpr,\n    providerType: viewEngine.ProviderType.Factory,\n    depsExpr: o.literalArr(allDepDefs)\n  };\n}\n/**\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(providerMeta: CompileProviderMetadata):\n    {providerExpr: o.Expression, providerType: number, depsExpr: o.Expression} {\n  let /** @type {?} */ providerExpr: o.Expression;\n  let /** @type {?} */ providerType: number;\n  let /** @type {?} */ deps: CompileDiDependencyMetadata[];\n  if (providerMeta.useClass) {\n    providerExpr = o.importExpr(providerMeta.useClass);\n    providerType = viewEngine.ProviderType.Class;\n    deps = providerMeta.deps || providerMeta.useClass.diDeps;\n  } else if (providerMeta.useFactory) {\n    providerExpr = o.importExpr(providerMeta.useFactory);\n    providerType = viewEngine.ProviderType.Factory;\n    deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n  } else if (providerMeta.useExisting) {\n    providerExpr = o.NULL_EXPR;\n    providerType = viewEngine.ProviderType.UseExisting;\n    deps = [{token: providerMeta.useExisting}];\n  } else {\n    providerExpr = convertValueToOutputAst(providerMeta.useValue);\n    providerType = viewEngine.ProviderType.Value;\n    deps = [];\n  }\n  const /** @type {?} */ depsExpr = o.literalArr(deps.map(dep => depDef(dep)));\n  return {providerExpr, providerType, depsExpr};\n}\n/**\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(tokenMeta: CompileTokenMetadata): o.Expression {\n  return tokenMeta.identifier ? o.importExpr(tokenMeta.identifier) : o.literal(tokenMeta.value);\n}\n/**\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(dep: CompileDiDependencyMetadata): o.Expression {\n  // Note: the following fields have already been normalized out by provider_analyzer:\n  // - isAttribute, isSelf, isHost\n  const /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(dep.value) : tokenExpr(dep.token);\n  let /** @type {?} */ flags = viewEngine.DepFlags.None;\n  if (dep.isSkipSelf) {\n    flags |= viewEngine.DepFlags.SkipSelf;\n  }\n  if (dep.isOptional) {\n    flags |= viewEngine.DepFlags.Optional;\n  }\n  if (dep.isValue) {\n    flags |= viewEngine.DepFlags.Value;\n  }\n  return flags === viewEngine.DepFlags.None ? expr : o.literalArr([o.literal(flags), expr]);\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction hasViewContainer(ast: TemplateAst): boolean {\n  if (ast instanceof EmbeddedTemplateAst) {\n    return ast.hasViewContainer;\n  } else if (ast instanceof ElementAst) {\n    return ast.hasViewContainer;\n  }\n  return false;\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction calcQueryId(queryId: QueryId): string {\n  if (queryId.directiveIndex == null) {\n    // view query\n    return `v${queryId.queryIndex}`;\n  } else {\n    return `c${queryId.elementDepth}_${queryId.directiveIndex}_${queryId.queryIndex}`;\n  }\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook: LifecycleHooks): number {\n  let /** @type {?} */ nodeFlag = viewEngine.NodeFlags.None;\n  switch (lifecycleHook) {\n    case LifecycleHooks.AfterContentChecked:\n      nodeFlag = viewEngine.NodeFlags.AfterContentChecked;\n      break;\n    case LifecycleHooks.AfterContentInit:\n      nodeFlag = viewEngine.NodeFlags.AfterContentInit;\n      break;\n    case LifecycleHooks.AfterViewChecked:\n      nodeFlag = viewEngine.NodeFlags.AfterViewChecked;\n      break;\n    case LifecycleHooks.AfterViewInit:\n      nodeFlag = viewEngine.NodeFlags.AfterViewInit;\n      break;\n    case LifecycleHooks.DoCheck:\n      nodeFlag = viewEngine.NodeFlags.DoCheck;\n      break;\n    case LifecycleHooks.OnChanges:\n      nodeFlag = viewEngine.NodeFlags.OnChanges;\n      break;\n    case LifecycleHooks.OnDestroy:\n      nodeFlag = viewEngine.NodeFlags.OnDestroy;\n      break;\n    case LifecycleHooks.OnInit:\n      nodeFlag = viewEngine.NodeFlags.OnInit;\n      break;\n  }\n  return nodeFlag;\n}\n/**\n * @param {?} inputAsts\n * @return {?}\n */\nfunction elementBindingDefs(inputAsts: BoundElementPropertyAst[]): o.Expression[] {\n  return inputAsts.map((inputAst) => {\n    switch (inputAst.type) {\n      case PropertyBindingType.Attribute:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementAttribute), o.literal(inputAst.name),\n          o.literal(inputAst.securityContext)\n        ]);\n      case PropertyBindingType.Property:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementProperty), o.literal(inputAst.name),\n          o.literal(inputAst.securityContext)\n        ]);\n      case PropertyBindingType.Class:\n        return o.literalArr(\n            [o.literal(viewEngine.BindingType.ElementClass), o.literal(inputAst.name)]);\n      case PropertyBindingType.Style:\n        return o.literalArr([\n          o.literal(viewEngine.BindingType.ElementStyle), o.literal(inputAst.name),\n          o.literal(inputAst.unit)\n        ]);\n    }\n  });\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst: ElementAst): o.LiteralMapExpr {\n  const /** @type {?} */ mapResult: {[key: string]: string} = {};\n  elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n  elementAst.directives.forEach(dirAst => {\n    Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n      const /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n      const /** @type {?} */ prevValue = mapResult[name];\n      mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  const /** @type {?} */ mapEntries: o.LiteralMapEntry[] = [];\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  Object.keys(mapResult).sort().forEach((attrName) => {\n    mapEntries.push(new o.LiteralMapEntry(attrName, o.literal(mapResult[attrName]), true));\n  });\n  return new o.LiteralMapExpr(mapEntries);\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n"]}