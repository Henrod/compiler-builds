{"version":3,"sources":["../../../../../modules/@angular/compiler/src/template_parser/template_parser.ts"],"names":[],"mappings":"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","file":"template_parser.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, InjectionToken, Optional, SchemaMetadata} from '@angular/core/index';\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileTemplateSummary, CompileTokenMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {Parser} from '../expression_parser/parser';\nimport {isPresent} from '../facade/lang';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {Identifiers, createIdentifierToken, identifierToken} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as html from '../ml_parser/ast';\nimport {ParseTreeResult} from '../ml_parser/html_parser';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {Console} from '../private_import_core';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {syntaxError} from '../util';\nimport {BindingParser, BoundProperty} from './binding_parser';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\n// Group 1 = \"bind-\"\n// Group 2 = \"let-\"\n// Group 3 = \"ref-/#\"\n// Group 4 = \"on-\"\n// Group 5 = \"bindon-\"\n// Group 6 = \"@\"\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n// Group 8 = identifier inside [()]\n// Group 9 = identifier inside []\n// Group 10 = identifier inside ()\nconst /** @type {?} */ BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\nconst /** @type {?} */ KW_BIND_IDX = 1;\nconst /** @type {?} */ KW_LET_IDX = 2;\nconst /** @type {?} */ KW_REF_IDX = 3;\nconst /** @type {?} */ KW_ON_IDX = 4;\nconst /** @type {?} */ KW_BINDON_IDX = 5;\nconst /** @type {?} */ KW_AT_IDX = 6;\nconst /** @type {?} */ IDENT_KW_IDX = 7;\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\n\nconst /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nexport const /** @type {?} */ TEMPLATE_TRANSFORMS = new InjectionToken('TemplateTransforms');\nexport class TemplateParseError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n * @param {?} level\n */\nconstructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\nexport class TemplateParseResult {\n/**\n * @param {?=} templateAst\n * @param {?=} errors\n */\nconstructor(public templateAst?: TemplateAst[],\npublic errors?: ParseError[]) {}\n}\n\nfunction TemplateParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseResult.prototype.templateAst;\n/** @type {?} */\nTemplateParseResult.prototype.errors;\n}\n\n@CompilerInjectable()\nexport class TemplateParser {\n/**\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n * @param {?} _htmlParser\n * @param {?} _console\n * @param {?} transforms\n */\nconstructor(\nprivate _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _htmlParser: I18NHtmlParser,\nprivate _console: Console,\npublic transforms: TemplateAstVisitor[]) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\nparse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[], templateUrl: string): TemplateAst[] {\n    const /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n    const /** @type {?} */ warnings = result.errors.filter(error => error.level === ParseErrorLevel.WARNING);\n    const /** @type {?} */ errors = result.errors.filter(error => error.level === ParseErrorLevel.FATAL);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const /** @type {?} */ errorString = errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    return result.templateAst;\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    return this.tryParseHtml(\n        this.expandHtml(this._htmlParser.parse(\n            template, templateUrl, true, this.getInterpolationConfig(component))),\n        component, template, directives, pipes, schemas, templateUrl);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata, template: string,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    let /** @type {?} */ result: TemplateAst[];\n    const /** @type {?} */ errors = htmlAstWithErrors.errors;\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n      const /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n      const /** @type {?} */ providerViewContext =\n          new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n      let /** @type {?} */ interpolationConfig: InterpolationConfig;\n      if (component.template && component.template.interpolation) {\n        interpolationConfig = {\n          start: component.template.interpolation[0],\n          end: component.template.interpolation[1]\n        };\n      }\n      const /** @type {?} */ bindingParser = new BindingParser(\n          this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n      const /** @type {?} */ parseVisitor = new TemplateParseVisitor(\n          providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas,\n          errors);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...providerViewContext.errors);\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, errors);\n    }\n\n    if (this.transforms) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, errors);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?=} forced\n * @return {?}\n */\nexpandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const /** @type {?} */ errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n  }\n/**\n * \\@internal\n * @param {?} result\n * @param {?} errors\n * @return {?}\n */\n_assertNoReferenceDuplicationOnTemplate(result: TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const /** @type {?} */ existingReferences: string[] = [];\n\n    result.filter(element => !!( /** @type {?} */((<any>element))).references)\n        .forEach(element => ( /** @type {?} */((<any>element))).references.forEach((reference: ReferenceAst) => {\n          const /** @type {?} */ name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const /** @type {?} */ error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.FATAL);\n            errors.push(error);\n          }\n        }));\n  }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: I18NHtmlParser, },\n{type: Console, },\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nfunction TemplateParser_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nTemplateParser.ctorParameters;\n/** @type {?} */\nTemplateParser.prototype._exprParser;\n/** @type {?} */\nTemplateParser.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParser.prototype._htmlParser;\n/** @type {?} */\nTemplateParser.prototype._console;\n/** @type {?} */\nTemplateParser.prototype.transforms;\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  directivesIndex = new Map<CompileDirectiveSummary, number>();\n  ngContentCount: number = 0;\n/**\n * @param {?} providerViewContext\n * @param {?} directives\n * @param {?} _bindingParser\n * @param {?} _schemaRegistry\n * @param {?} _schemas\n * @param {?} _targetErrors\n */\nconstructor(\npublic providerViewContext: ProviderViewContext, directives: CompileDirectiveSummary[],\nprivate _bindingParser: BindingParser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _schemas: SchemaMetadata[],\nprivate _targetErrors: TemplateParseError[]) {\n    directives.forEach((directive, index) => {\n      const selector = CssSelector.parse(directive.selector);\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return null; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): any {\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    const /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n    if (expr) {\n      return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n    } else {\n      return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\nvisitElement(element: html.Element, parent: ElementContext): any {\n    const /** @type {?} */ nodeName = element.name;\n    const /** @type {?} */ preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ matchableAttrs: [string, string][] = [];\n    const /** @type {?} */ elementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const /** @type {?} */ elementVars: VariableAst[] = [];\n    const /** @type {?} */ events: BoundEventAst[] = [];\n\n    const /** @type {?} */ templateElementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ templateMatchableAttrs: [string, string][] = [];\n    const /** @type {?} */ templateElementVars: VariableAst[] = [];\n\n    let /** @type {?} */ hasInlineTemplates = false;\n    const /** @type {?} */ attrs: AttrAst[] = [];\n    const /** @type {?} */ lcElName = splitNsName(nodeName.toLowerCase())[1];\n    const /** @type {?} */ isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\n    element.attrs.forEach(attr => {\n      const /** @type {?} */ hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n          elementOrDirectiveRefs, elementVars);\n\n      let /** @type {?} */ templateBindingsSource: string|undefined;\n      let /** @type {?} */ prefixToken: string|undefined;\n      let /** @type {?} */ normalizedName = this._normalizeAttributeName(attr.name);\n\n      if (normalizedName == TEMPLATE_ATTR) {\n        templateBindingsSource = attr.value;\n      } else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        templateBindingsSource = attr.value;\n        prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n      }\n\n      const /** @type {?} */ hasTemplateBinding = isPresent(templateBindingsSource);\n      if (hasTemplateBinding) {\n        if (hasInlineTemplates) {\n          this._reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`,\n              attr.sourceSpan);\n        }\n        hasInlineTemplates = true;\n        this._bindingParser.parseInlineTemplateBinding(\n            prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs,\n            templateElementOrDirectiveProps, templateElementVars);\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n    });\n\n    const /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const /** @type {?} */ references: ReferenceAst[] = [];\n    const /** @type {?} */ directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, element.sourceSpan, references);\n    const /** @type {?} */ elementProps: BoundElementPropertyAst[] =\n        this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n    const /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\n    const /** @type {?} */ providerContext = new ProviderElementContext(\n        this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs,\n        references, element.sourceSpan);\n\n    const /** @type {?} */ children = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? parent.providerContext : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const /** @type {?} */ projectionSelector = isPresent(preparsedElement.projectAs) ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(projectionSelector);\n    let /** @type {?} */ parsedElement: TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, element.sourceSpan);\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer,\n          providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex,\n          element.sourceSpan);\n    } else {\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n\n      const /** @type {?} */ ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, providerContext.queryMatches, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan, element.endSourceSpan);\n\n      this._findComponentDirectives(directiveAsts)\n          .forEach(\n              componentDirectiveAst => this._validateElementAnimationInputOutputs(\n                  componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents,\n                  componentDirectiveAst.directive.template));\n\n      const /** @type {?} */ componentTemplate = providerContext.viewContext.component.template;\n      this._validateElementAnimationInputOutputs(\n          elementProps, events, componentTemplate.toSummary());\n    }\n\n    if (hasInlineTemplates) {\n      const /** @type {?} */ templateCssSelector =\n          createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      const {directives: templateDirectiveMetas} =\n          this._parseDirectives(this.selectorMatcher, templateCssSelector);\n      const /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(\n          true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [],\n          element.sourceSpan, []);\n      const /** @type {?} */ templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, element.sourceSpan);\n      const /** @type {?} */ templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, parent.providerContext, parent.isTemplateElement,\n          templateDirectiveAsts, [], [], element.sourceSpan);\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches,\n          [parsedElement], ngContentIndex, element.sourceSpan);\n    }\n\n    return parsedElement;\n  }\n/**\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} template\n * @return {?}\n */\nprivate _validateElementAnimationInputOutputs(\n      inputs: BoundElementPropertyAst[], outputs: BoundEventAst[],\n      template: CompileTemplateSummary) {\n    const /** @type {?} */ triggerLookup = new Set<string>();\n    template.animations.forEach(entry => { triggerLookup.add(entry); });\n\n    const /** @type {?} */ animationInputs = inputs.filter(input => input.isAnimation);\n    animationInputs.forEach(input => {\n      const /** @type {?} */ name = input.name;\n      if (!triggerLookup.has(name)) {\n        this._reportError(`Couldn't find an animation entry for \"${name}\"`, input.sourceSpan);\n      }\n    });\n\n    outputs.forEach(output => {\n      if (output.isAnimation) {\n        const /** @type {?} */ found = animationInputs.find(input => input.name == output.name);\n        if (!found) {\n          this._reportError(\n              `Unable to listen on (@${output.name}.${output.phase}) because the animation trigger [@${output.name}] isn't being used on the same element`,\n              output.sourceSpan);\n        }\n      }\n    });\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetEvents\n * @param {?} targetRefs\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundProperty[], targetEvents: BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    const /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n    const /** @type {?} */ value = attr.value;\n    const /** @type {?} */ srcSpan = attr.sourceSpan;\n\n    const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n    let /** @type {?} */ hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (isPresent(bindParts[KW_BIND_IDX])) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        this._bindingParser.parseLiteralAttr(\n            name, value, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n      }\n    } else {\n      hasBinding = this._bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    return hasBinding;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\nprivate _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetRefs\n * @return {?}\n */\nprivate _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\nprivate _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n  }\n/**\n * @param {?} selectorMatcher\n * @param {?} elementCssSelector\n * @return {?}\n */\nprivate _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveSummary[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const /** @type {?} */ directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let /** @type {?} */ matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[this.directivesIndex.get(directive)] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} elementName\n * @param {?} directives\n * @param {?} props\n * @param {?} elementOrDirectiveRefs\n * @param {?} elementSourceSpan\n * @param {?} targetReferences\n * @return {?}\n */\nprivate _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveSummary[],\n      props: BoundProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: ReferenceAst[]): DirectiveAst[] {\n    const /** @type {?} */ matchedReferences = new Set<string>();\n    let /** @type {?} */ component: CompileDirectiveSummary = null;\n\n    const /** @type {?} */ directiveAsts = directives.map((directive) => {\n      const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end,\n          `Directive ${identifierName(directive.type)}`);\n\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const /** @type {?} */ directiveProperties: BoundDirectivePropertyAst[] = [];\n      const /** @type {?} */ hostProperties =\n          this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n      // Note: We need to check the host properties here as well,\n      // as we don't know the element name in the DirectiveWrapperCompiler yet.\n      this._checkPropertiesInSchema(elementName, hostProperties);\n      const /** @type {?} */ hostEvents = this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n      this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(\n              elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      return new DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n    });\n\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let /** @type {?} */ refToken: CompileTokenMetadata = null;\n        if (isTemplateElement) {\n          refToken = createIdentifierToken(Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });\n    return directiveAsts;\n  }\n/**\n * @param {?} directiveProperties\n * @param {?} boundProps\n * @param {?} targetBoundDirectiveProps\n * @return {?}\n */\nprivate _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: BoundProperty[],\n      targetBoundDirectiveProps: BoundDirectivePropertyAst[]) {\n    if (directiveProperties) {\n      const /** @type {?} */ boundPropsByName = new Map<string, BoundProperty>();\n      boundProps.forEach(boundProp => {\n        const /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const /** @type {?} */ elProp = directiveProperties[dirProp];\n        const /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n              dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n        }\n      });\n    }\n  }\n/**\n * @param {?} elementName\n * @param {?} props\n * @param {?} directives\n * @return {?}\n */\nprivate _createElementPropertyAsts(\n      elementName: string, props: BoundProperty[],\n      directives: DirectiveAst[]): BoundElementPropertyAst[] {\n    const /** @type {?} */ boundElementProps: BoundElementPropertyAst[] = [];\n    const /** @type {?} */ boundDirectivePropsIndex = new Map<string, BoundDirectivePropertyAst>();\n\n    directives.forEach((directive: DirectiveAst) => {\n      directive.inputs.forEach((prop: BoundDirectivePropertyAst) => {\n        boundDirectivePropsIndex.set(prop.templateName, prop);\n      });\n    });\n\n    props.forEach((prop: BoundProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n        boundElementProps.push(this._bindingParser.createElementPropertyAst(elementName, prop));\n      }\n    });\n    this._checkPropertiesInSchema(elementName, boundElementProps);\n    return boundElementProps;\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectives(directives: DirectiveAst[]): DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => identifierName(directive.directive.type));\n  }\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(\n          `More than one component matched on this element.\\n` +\n              `Make sure that only one component's selector can match a given element.\\n` +\n              `Conflicting components: ${componentTypeNames.join(',')}`,\n          sourceSpan);\n    }\n  }\n/**\n * Make sure that non-angular tags conform to the schemas.\n * \n * Note: An element is considered an angular tag when at least one directive selector matches the\n * tag name.\n * \n * @param {?} matchElement Whether any directive has matched on the tag name\n * @param {?} element the html element\n * @return {?}\n */\nprivate _assertElementExists(matchElement: boolean, element: html.Element) {\n    const /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      let /** @type {?} */ errorMsg = `'${elName}' is not a known element:\\n`;\n      errorMsg +=\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n      if (elName.indexOf('-') > -1) {\n        errorMsg +=\n            `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n      } else {\n        errorMsg +=\n            `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n      }\n      this._reportError(errorMsg, element.sourceSpan);\n    }\n  }\n/**\n * @param {?} directives\n * @param {?} elementProps\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: DirectiveAst[], elementProps: BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n          sourceSpan);\n    });\n  }\n/**\n * @param {?} directives\n * @param {?} events\n * @return {?}\n */\nprivate _assertAllEventsPublishedByDirectives(\n      directives: DirectiveAst[], events: BoundEventAst[]) {\n    const /** @type {?} */ allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const /** @type {?} */ eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n            event.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} elementName\n * @param {?} boundProps\n * @return {?}\n */\nprivate _checkPropertiesInSchema(elementName: string, boundProps: BoundElementPropertyAst[]) {\n    boundProps.forEach((boundProp) => {\n      if (boundProp.type === PropertyBindingType.Property &&\n          !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n        let /** @type {?} */ errorMsg =\n            `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n        if (elementName.startsWith('ng-')) {\n          errorMsg +=\n              `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n              `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        } else if (elementName.indexOf('-') > -1) {\n          errorMsg +=\n              `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n              `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n              `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        }\n        this._reportError(errorMsg, boundProp.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\nprivate _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.FATAL) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nfunction TemplateParseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseVisitor.prototype.selectorMatcher;\n/** @type {?} */\nTemplateParseVisitor.prototype.directivesIndex;\n/** @type {?} */\nTemplateParseVisitor.prototype.ngContentCount;\n/** @type {?} */\nTemplateParseVisitor.prototype.providerViewContext;\n/** @type {?} */\nTemplateParseVisitor.prototype._bindingParser;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemas;\n/** @type {?} */\nTemplateParseVisitor.prototype._targetErrors;\n}\n\nclass NonBindableVisitor implements html.Visitor {\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: html.Element, parent: ElementContext): ElementAst {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ attrNameAndValues = ast.attrs.map((attr): [string, string] => [attr.name, attr.value]);\n    const /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n    const /** @type {?} */ children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): AttrAst {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): TextAst {\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\nclass ElementOrDirectiveRef {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction ElementOrDirectiveRef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementOrDirectiveRef.prototype.name;\n/** @type {?} */\nElementOrDirectiveRef.prototype.value;\n/** @type {?} */\nElementOrDirectiveRef.prototype.sourceSpan;\n}\n\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n/**\n * @param {?} isTemplateElement\n * @param {?} directives\n * @param {?} providerContext\n * @return {?}\n */\nstatic create(\n      isTemplateElement: boolean, directives: DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number = null;\n    const /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const /** @type {?} */ ngContentSelectors = component.directive.template.ngContentSelectors;\n      for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        const /** @type {?} */ selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} _ngContentIndexMatcher\n * @param {?} _wildcardNgContentIndex\n * @param {?} providerContext\n */\nconstructor(\npublic isTemplateElement: boolean,\nprivate _ngContentIndexMatcher: SelectorMatcher,\nprivate _wildcardNgContentIndex: number,\npublic providerContext: ProviderElementContext) {}\n/**\n * @param {?} selector\n * @return {?}\n */\nfindNgContentIndex(selector: CssSelector): number {\n    const /** @type {?} */ ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (isPresent(this._wildcardNgContentIndex)) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nfunction ElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nElementContext.prototype.isTemplateElement;\n/** @type {?} */\nElementContext.prototype._ngContentIndexMatcher;\n/** @type {?} */\nElementContext.prototype._wildcardNgContentIndex;\n/** @type {?} */\nElementContext.prototype.providerContext;\n}\n\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates<T extends{type: CompileTypeMetadata}>(items: T[]): T[] {\n  const /** @type {?} */ map = new Map<any, T>();\n\n  items.forEach((item) => {\n    if (!map.get(item.type.reference)) {\n      map.set(item.type.reference, item);\n    }\n  });\n\n  return Array.from(map.values());\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}