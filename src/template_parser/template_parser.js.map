{"version":3,"sources":["../../../../../modules/@angular/compiler/src/template_parser/template_parser.ts"],"names":[],"mappings":"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","file":"template_parser.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, InjectionToken, Optional, SchemaMetadata} from '@angular/core/index';\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileTemplateSummary, CompileTokenMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, EmptyExpr} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {isPresent} from '../facade/lang';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {Identifiers, createIdentifierToken, identifierToken} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as html from '../ml_parser/ast';\nimport {ParseTreeResult} from '../ml_parser/html_parser';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {Console} from '../private_import_core';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {syntaxError} from '../util';\n\nimport {BindingParser, BoundProperty} from './binding_parser';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\n\n\n// Group 1 = \"bind-\"\n// Group 2 = \"let-\"\n// Group 3 = \"ref-/#\"\n// Group 4 = \"on-\"\n// Group 5 = \"bindon-\"\n// Group 6 = \"@\"\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n// Group 8 = identifier inside [()]\n// Group 9 = identifier inside []\n// Group 10 = identifier inside ()\nconst /** @type {?} */ BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\nconst /** @type {?} */ KW_BIND_IDX = 1;\nconst /** @type {?} */ KW_LET_IDX = 2;\nconst /** @type {?} */ KW_REF_IDX = 3;\nconst /** @type {?} */ KW_ON_IDX = 4;\nconst /** @type {?} */ KW_BINDON_IDX = 5;\nconst /** @type {?} */ KW_AT_IDX = 6;\nconst /** @type {?} */ IDENT_KW_IDX = 7;\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\n\nconst /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nexport const /** @type {?} */ TEMPLATE_TRANSFORMS = new InjectionToken('TemplateTransforms');\nexport class TemplateParseError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n * @param {?} level\n */\nconstructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\nexport class TemplateParseResult {\n/**\n * @param {?=} templateAst\n * @param {?=} usedPipes\n * @param {?=} errors\n */\nconstructor(\npublic templateAst?: TemplateAst[],\npublic usedPipes?: CompilePipeSummary[],\npublic errors?: ParseError[]) {}\n}\n\nfunction TemplateParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseResult.prototype.templateAst;\n/** @type {?} */\nTemplateParseResult.prototype.usedPipes;\n/** @type {?} */\nTemplateParseResult.prototype.errors;\n}\n\n@CompilerInjectable()\nexport class TemplateParser {\n/**\n * @param {?} _config\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n * @param {?} _htmlParser\n * @param {?} _console\n * @param {?} transforms\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _htmlParser: I18NHtmlParser,\nprivate _console: Console,\npublic transforms: TemplateAstVisitor[]) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\nparse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): {template: TemplateAst[], pipes: CompilePipeSummary[]} {\n    const /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n    const /** @type {?} */ warnings = result.errors.filter(error => error.level === ParseErrorLevel.WARNING);\n    const /** @type {?} */ errors = result.errors.filter(error => error.level === ParseErrorLevel.FATAL);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const /** @type {?} */ errorString = errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    return {template: result.templateAst, pipes: result.usedPipes};\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    return this.tryParseHtml(\n        this.expandHtml(this._htmlParser.parse(\n            template, templateUrl, true, this.getInterpolationConfig(component))),\n        component, template, directives, pipes, schemas, templateUrl);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata, template: string,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    let /** @type {?} */ result: TemplateAst[];\n    const /** @type {?} */ errors = htmlAstWithErrors.errors;\n    const /** @type {?} */ usedPipes: CompilePipeSummary[] = [];\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n      const /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n      const /** @type {?} */ providerViewContext =\n          new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n      let /** @type {?} */ interpolationConfig: InterpolationConfig;\n      if (component.template && component.template.interpolation) {\n        interpolationConfig = {\n          start: component.template.interpolation[0],\n          end: component.template.interpolation[1]\n        };\n      }\n      const /** @type {?} */ bindingParser = new BindingParser(\n          this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n      const /** @type {?} */ parseVisitor = new TemplateParseVisitor(\n          this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry,\n          schemas, errors);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...providerViewContext.errors);\n      usedPipes.push(...bindingParser.getUsedPipes());\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, usedPipes, errors);\n    }\n\n    if (this.transforms) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, usedPipes, errors);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?=} forced\n * @return {?}\n */\nexpandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const /** @type {?} */ errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n  }\n/**\n * \\@internal\n * @param {?} result\n * @param {?} errors\n * @return {?}\n */\n_assertNoReferenceDuplicationOnTemplate(result: TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const /** @type {?} */ existingReferences: string[] = [];\n\n    result.filter(element => !!( /** @type {?} */((<any>element))).references)\n        .forEach(element => ( /** @type {?} */((<any>element))).references.forEach((reference: ReferenceAst) => {\n          const /** @type {?} */ name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const /** @type {?} */ error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.FATAL);\n            errors.push(error);\n          }\n        }));\n  }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: I18NHtmlParser, },\n{type: Console, },\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nfunction TemplateParser_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nTemplateParser.ctorParameters;\n/** @type {?} */\nTemplateParser.prototype._config;\n/** @type {?} */\nTemplateParser.prototype._exprParser;\n/** @type {?} */\nTemplateParser.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParser.prototype._htmlParser;\n/** @type {?} */\nTemplateParser.prototype._console;\n/** @type {?} */\nTemplateParser.prototype.transforms;\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  directivesIndex = new Map<CompileDirectiveSummary, number>();\n  ngContentCount = 0;\n  contentQueryStartId: number;\n/**\n * @param {?} config\n * @param {?} providerViewContext\n * @param {?} directives\n * @param {?} _bindingParser\n * @param {?} _schemaRegistry\n * @param {?} _schemas\n * @param {?} _targetErrors\n */\nconstructor(\nprivate config: CompilerConfig,\npublic providerViewContext: ProviderViewContext,\n      directives: CompileDirectiveSummary[],\nprivate _bindingParser: BindingParser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _schemas: SchemaMetadata[],\nprivate _targetErrors: TemplateParseError[]) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n    directives.forEach((directive, index) => {\n      const selector = CssSelector.parse(directive.selector);\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return null; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): any {\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    const /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n    if (expr) {\n      return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n    } else {\n      return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\nvisitElement(element: html.Element, parent: ElementContext): any {\n    const /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n    const /** @type {?} */ nodeName = element.name;\n    const /** @type {?} */ preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ matchableAttrs: [string, string][] = [];\n    const /** @type {?} */ elementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const /** @type {?} */ elementVars: VariableAst[] = [];\n    const /** @type {?} */ events: BoundEventAst[] = [];\n\n    const /** @type {?} */ templateElementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ templateMatchableAttrs: [string, string][] = [];\n    const /** @type {?} */ templateElementVars: VariableAst[] = [];\n\n    let /** @type {?} */ hasInlineTemplates = false;\n    const /** @type {?} */ attrs: AttrAst[] = [];\n    const /** @type {?} */ lcElName = splitNsName(nodeName.toLowerCase())[1];\n    const /** @type {?} */ isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\n    element.attrs.forEach(attr => {\n      const /** @type {?} */ hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n          elementOrDirectiveRefs, elementVars);\n\n      let /** @type {?} */ templateBindingsSource: string|undefined;\n      let /** @type {?} */ prefixToken: string|undefined;\n      let /** @type {?} */ normalizedName = this._normalizeAttributeName(attr.name);\n\n      if (normalizedName == TEMPLATE_ATTR) {\n        templateBindingsSource = attr.value;\n      } else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        templateBindingsSource = attr.value;\n        prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n      }\n\n      const /** @type {?} */ hasTemplateBinding = isPresent(templateBindingsSource);\n      if (hasTemplateBinding) {\n        if (hasInlineTemplates) {\n          this._reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`,\n              attr.sourceSpan);\n        }\n        hasInlineTemplates = true;\n        this._bindingParser.parseInlineTemplateBinding(\n            prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs,\n            templateElementOrDirectiveProps, templateElementVars);\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n    });\n\n    const /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const /** @type {?} */ references: ReferenceAst[] = [];\n    const /** @type {?} */ boundDirectivePropNames = new Set<string>();\n    const /** @type {?} */ directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n    const /** @type {?} */ elementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n        element.name, elementOrDirectiveProps, boundDirectivePropNames);\n    const /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\n    const /** @type {?} */ providerContext = new ProviderElementContext(\n        this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs,\n        references, isTemplateElement, queryStartIndex, element.sourceSpan);\n\n    const /** @type {?} */ children: TemplateAst[] = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? parent.providerContext : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const /** @type {?} */ projectionSelector = isPresent(preparsedElement.projectAs) ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(projectionSelector);\n    let /** @type {?} */ parsedElement: TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, element.sourceSpan);\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer,\n          providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex,\n          element.sourceSpan);\n    } else {\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n\n      const /** @type {?} */ ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, providerContext.queryMatches, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan, element.endSourceSpan);\n\n      this._findComponentDirectives(directiveAsts)\n          .forEach(\n              componentDirectiveAst => this._validateElementAnimationInputOutputs(\n                  componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents,\n                  componentDirectiveAst.directive.template));\n\n      const /** @type {?} */ componentTemplate = providerContext.viewContext.component.template;\n      this._validateElementAnimationInputOutputs(\n          elementProps, events, componentTemplate.toSummary());\n    }\n\n    if (hasInlineTemplates) {\n      const /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n      const /** @type {?} */ templateCssSelector =\n          createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      const {directives: templateDirectiveMetas} =\n          this._parseDirectives(this.selectorMatcher, templateCssSelector);\n      const /** @type {?} */ templateBoundDirectivePropNames = new Set<string>();\n      const /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(\n          true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [],\n          element.sourceSpan, [], templateBoundDirectivePropNames);\n      const /** @type {?} */ templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, element.sourceSpan);\n      const /** @type {?} */ templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, parent.providerContext, parent.isTemplateElement,\n          templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches,\n          [parsedElement], ngContentIndex, element.sourceSpan);\n    }\n\n    return parsedElement;\n  }\n/**\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} template\n * @return {?}\n */\nprivate _validateElementAnimationInputOutputs(\n      inputs: BoundElementPropertyAst[], outputs: BoundEventAst[],\n      template: CompileTemplateSummary) {\n    const /** @type {?} */ triggerLookup = new Set<string>();\n    template.animations.forEach(entry => { triggerLookup.add(entry); });\n\n    const /** @type {?} */ animationInputs = inputs.filter(input => input.isAnimation);\n    animationInputs.forEach(input => {\n      const /** @type {?} */ name = input.name;\n      if (!triggerLookup.has(name)) {\n        this._reportError(`Couldn't find an animation entry for \"${name}\"`, input.sourceSpan);\n      }\n    });\n\n    outputs.forEach(output => {\n      if (output.isAnimation) {\n        const /** @type {?} */ found = animationInputs.find(input => input.name == output.name);\n        if (!found) {\n          this._reportError(\n              `Unable to listen on (@${output.name}.${output.phase}) because the animation trigger [@${output.name}] isn't being used on the same element`,\n              output.sourceSpan);\n        }\n      }\n    });\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetEvents\n * @param {?} targetRefs\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundProperty[], targetEvents: BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    const /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n    const /** @type {?} */ value = attr.value;\n    const /** @type {?} */ srcSpan = attr.sourceSpan;\n\n    const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n    let /** @type {?} */ hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (isPresent(bindParts[KW_BIND_IDX])) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        this._bindingParser.parseLiteralAttr(\n            name, value, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n      }\n    } else {\n      hasBinding = this._bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    return hasBinding;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\nprivate _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetRefs\n * @return {?}\n */\nprivate _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\nprivate _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n  }\n/**\n * @param {?} selectorMatcher\n * @param {?} elementCssSelector\n * @return {?}\n */\nprivate _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveSummary[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const /** @type {?} */ directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let /** @type {?} */ matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[this.directivesIndex.get(directive)] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} elementName\n * @param {?} directives\n * @param {?} props\n * @param {?} elementOrDirectiveRefs\n * @param {?} elementSourceSpan\n * @param {?} targetReferences\n * @param {?} targetBoundDirectivePropNames\n * @return {?}\n */\nprivate _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveSummary[],\n      props: BoundProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: ReferenceAst[],\n      targetBoundDirectivePropNames: Set<string>): DirectiveAst[] {\n    const /** @type {?} */ matchedReferences = new Set<string>();\n    let /** @type {?} */ component: CompileDirectiveSummary = null;\n\n    const /** @type {?} */ directiveAsts = directives.map((directive) => {\n      const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end,\n          `Directive ${identifierName(directive.type)}`);\n\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const /** @type {?} */ directiveProperties: BoundDirectivePropertyAst[] = [];\n      let /** @type {?} */ hostProperties = this._bindingParser.createDirectiveHostPropertyAsts(\n          directive, this.config.useViewEngine ? elementName : directive.selector, sourceSpan);\n      // Note: We need to check the host properties here as well,\n      // as we don't know the element name in the DirectiveWrapperCompiler yet.\n      hostProperties = this._checkPropertiesInSchema(elementName, hostProperties);\n      const /** @type {?} */ hostEvents = this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n      this._createDirectivePropertyAsts(\n          directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(\n              elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      const /** @type {?} */ contentQueryStartId = this.contentQueryStartId;\n      this.contentQueryStartId += directive.queries.length;\n      return new DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId,\n          sourceSpan);\n    });\n\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let /** @type {?} */ refToken: CompileTokenMetadata = null;\n        if (isTemplateElement) {\n          refToken = createIdentifierToken(Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });\n    return directiveAsts;\n  }\n/**\n * @param {?} directiveProperties\n * @param {?} boundProps\n * @param {?} targetBoundDirectiveProps\n * @param {?} targetBoundDirectivePropNames\n * @return {?}\n */\nprivate _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: BoundProperty[],\n      targetBoundDirectiveProps: BoundDirectivePropertyAst[],\n      targetBoundDirectivePropNames: Set<string>) {\n    if (directiveProperties) {\n      const /** @type {?} */ boundPropsByName = new Map<string, BoundProperty>();\n      boundProps.forEach(boundProp => {\n        const /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const /** @type {?} */ elProp = directiveProperties[dirProp];\n        const /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectivePropNames.add(boundProp.name);\n          if (!isEmptyExpression(boundProp.expression)) {\n            targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n                dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n          }\n        }\n      });\n    }\n  }\n/**\n * @param {?} elementName\n * @param {?} props\n * @param {?} boundDirectivePropNames\n * @return {?}\n */\nprivate _createElementPropertyAsts(\n      elementName: string, props: BoundProperty[],\n      boundDirectivePropNames: Set<string>): BoundElementPropertyAst[] {\n    const /** @type {?} */ boundElementProps: BoundElementPropertyAst[] = [];\n\n    props.forEach((prop: BoundProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n        boundElementProps.push(this._bindingParser.createElementPropertyAst(elementName, prop));\n      }\n    });\n    return this._checkPropertiesInSchema(elementName, boundElementProps);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectives(directives: DirectiveAst[]): DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => identifierName(directive.directive.type));\n  }\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(\n          `More than one component matched on this element.\\n` +\n              `Make sure that only one component's selector can match a given element.\\n` +\n              `Conflicting components: ${componentTypeNames.join(',')}`,\n          sourceSpan);\n    }\n  }\n/**\n * Make sure that non-angular tags conform to the schemas.\n * \n * Note: An element is considered an angular tag when at least one directive selector matches the\n * tag name.\n * \n * @param {?} matchElement Whether any directive has matched on the tag name\n * @param {?} element the html element\n * @return {?}\n */\nprivate _assertElementExists(matchElement: boolean, element: html.Element) {\n    const /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      let /** @type {?} */ errorMsg = `'${elName}' is not a known element:\\n`;\n      errorMsg +=\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n      if (elName.indexOf('-') > -1) {\n        errorMsg +=\n            `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n      } else {\n        errorMsg +=\n            `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n      }\n      this._reportError(errorMsg, element.sourceSpan);\n    }\n  }\n/**\n * @param {?} directives\n * @param {?} elementProps\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: DirectiveAst[], elementProps: BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n          sourceSpan);\n    });\n  }\n/**\n * @param {?} directives\n * @param {?} events\n * @return {?}\n */\nprivate _assertAllEventsPublishedByDirectives(\n      directives: DirectiveAst[], events: BoundEventAst[]) {\n    const /** @type {?} */ allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const /** @type {?} */ eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n            event.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} elementName\n * @param {?} boundProps\n * @return {?}\n */\nprivate _checkPropertiesInSchema(elementName: string, boundProps: BoundElementPropertyAst[]):\n      BoundElementPropertyAst[] {\n    // Note: We can't filter out empty expressions before this method,\n    // as we still want to validate them!\n    return boundProps.filter((boundProp) => {\n      if (boundProp.type === PropertyBindingType.Property &&\n          !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n        let /** @type {?} */ errorMsg =\n            `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n        if (elementName.startsWith('ng-')) {\n          errorMsg +=\n              `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n              `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        } else if (elementName.indexOf('-') > -1) {\n          errorMsg +=\n              `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n              `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n              `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        }\n        this._reportError(errorMsg, boundProp.sourceSpan);\n      }\n      return !isEmptyExpression(boundProp.value);\n    });\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\nprivate _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.FATAL) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nfunction TemplateParseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseVisitor.prototype.selectorMatcher;\n/** @type {?} */\nTemplateParseVisitor.prototype.directivesIndex;\n/** @type {?} */\nTemplateParseVisitor.prototype.ngContentCount;\n/** @type {?} */\nTemplateParseVisitor.prototype.contentQueryStartId;\n/** @type {?} */\nTemplateParseVisitor.prototype.config;\n/** @type {?} */\nTemplateParseVisitor.prototype.providerViewContext;\n/** @type {?} */\nTemplateParseVisitor.prototype._bindingParser;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemas;\n/** @type {?} */\nTemplateParseVisitor.prototype._targetErrors;\n}\n\nclass NonBindableVisitor implements html.Visitor {\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: html.Element, parent: ElementContext): ElementAst {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ attrNameAndValues = ast.attrs.map((attr): [string, string] => [attr.name, attr.value]);\n    const /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n    const /** @type {?} */ children: TemplateAst[] = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): AttrAst {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): TextAst {\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\nclass ElementOrDirectiveRef {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction ElementOrDirectiveRef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementOrDirectiveRef.prototype.name;\n/** @type {?} */\nElementOrDirectiveRef.prototype.value;\n/** @type {?} */\nElementOrDirectiveRef.prototype.sourceSpan;\n}\n\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n/**\n * @param {?} isTemplateElement\n * @param {?} directives\n * @param {?} providerContext\n * @return {?}\n */\nstatic create(\n      isTemplateElement: boolean, directives: DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number = null;\n    const /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const /** @type {?} */ ngContentSelectors = component.directive.template.ngContentSelectors;\n      for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        const /** @type {?} */ selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} _ngContentIndexMatcher\n * @param {?} _wildcardNgContentIndex\n * @param {?} providerContext\n */\nconstructor(\npublic isTemplateElement: boolean,\nprivate _ngContentIndexMatcher: SelectorMatcher,\nprivate _wildcardNgContentIndex: number,\npublic providerContext: ProviderElementContext) {}\n/**\n * @param {?} selector\n * @return {?}\n */\nfindNgContentIndex(selector: CssSelector): number {\n    const /** @type {?} */ ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (isPresent(this._wildcardNgContentIndex)) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nfunction ElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nElementContext.prototype.isTemplateElement;\n/** @type {?} */\nElementContext.prototype._ngContentIndexMatcher;\n/** @type {?} */\nElementContext.prototype._wildcardNgContentIndex;\n/** @type {?} */\nElementContext.prototype.providerContext;\n}\n\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates<T extends{type: CompileTypeMetadata}>(items: T[]): T[] {\n  const /** @type {?} */ map = new Map<any, T>();\n\n  items.forEach((item) => {\n    if (!map.get(item.type.reference)) {\n      map.set(item.type.reference, item);\n    }\n  });\n\n  return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast: AST): boolean {\n  if (ast instanceof ASTWithSource) {\n    ast = ast.ast;\n  }\n  return ast instanceof EmptyExpr;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}