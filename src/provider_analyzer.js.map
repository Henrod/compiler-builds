{"version":3,"sources":["../../../../modules/@angular/compiler/src/provider_analyzer.ts"],"names":[],"mappings":"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","file":"provider_analyzer.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompileNgModuleMetadata, CompileProviderMetadata, CompileQueryMetadata, CompileTokenMetadata, CompileTypeMetadata, tokenName, tokenReference} from './compile_metadata';\nimport {isBlank, isPresent} from './facade/lang';\nimport {Identifiers, createIdentifierToken, resolveIdentifier} from './identifiers';\nimport {ParseError, ParseSourceSpan} from './parse_util';\nimport {AttrAst, DirectiveAst, ProviderAst, ProviderAstType, QueryMatch, ReferenceAst} from './template_parser/template_ast';\nexport class ProviderError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n */\nconstructor(message: string, span: ParseSourceSpan) { super(span, message); }\n}\n\nexport interface QueryWithId {\n  meta: CompileQueryMetadata;\n  queryId: number;\n}\nexport class ProviderViewContext {\n  /**\n   * @internal\n   */\n  viewQueries: Map<any, QueryWithId[]>;\n  /**\n   * @internal\n   */\n  viewProviders: Map<any, boolean>;\n  errors: ProviderError[] = [];\n/**\n * @param {?} component\n * @param {?} sourceSpan\n */\nconstructor(public component: CompileDirectiveMetadata,\npublic sourceSpan: ParseSourceSpan) {\n    this.viewQueries = _getViewQueries(component);\n    this.viewProviders = new Map<any, boolean>();\n    component.viewProviders.forEach((provider) => {\n      if (isBlank(this.viewProviders.get(tokenReference(provider.token)))) {\n        this.viewProviders.set(tokenReference(provider.token), true);\n      }\n    });\n  }\n}\n\nfunction ProviderViewContext_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nProviderViewContext.prototype.viewQueries;\n/**\n * \\@internal\n * @type {?}\n */\nProviderViewContext.prototype.viewProviders;\n/** @type {?} */\nProviderViewContext.prototype.errors;\n/** @type {?} */\nProviderViewContext.prototype.component;\n/** @type {?} */\nProviderViewContext.prototype.sourceSpan;\n}\n\nexport class ProviderElementContext {\nprivate _contentQueries: Map<any, QueryWithId[]>;\nprivate _transformedProviders = new Map<any, ProviderAst>();\nprivate _seenProviders = new Map<any, boolean>();\nprivate _allProviders: Map<any, ProviderAst>;\nprivate _attrs: {[key: string]: string};\nprivate _hasViewContainer: boolean = false;\nprivate _queriedTokens = new Map<any, QueryMatch[]>();\n/**\n * @param {?} viewContext\n * @param {?} _parent\n * @param {?} _isViewRoot\n * @param {?} _directiveAsts\n * @param {?} attrs\n * @param {?} refs\n * @param {?} isTemplate\n * @param {?} contentQueryStartId\n * @param {?} _sourceSpan\n */\nconstructor(\npublic viewContext: ProviderViewContext,\nprivate _parent: ProviderElementContext,\nprivate _isViewRoot: boolean,\nprivate _directiveAsts: DirectiveAst[], attrs: AttrAst[],\n      refs: ReferenceAst[], isTemplate: boolean, contentQueryStartId: number,\nprivate _sourceSpan: ParseSourceSpan) {\n    this._attrs = {};\n    attrs.forEach((attrAst) => this._attrs[attrAst.name] = attrAst.value);\n    const directivesMeta = _directiveAsts.map(directiveAst => directiveAst.directive);\n    this._allProviders =\n        _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n    this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._addQueryReadsTo(provider.token, provider.token, this._queriedTokens);\n    });\n    if (isTemplate) {\n      const templateRefId = createIdentifierToken(Identifiers.TemplateRef);\n      this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n    }\n    refs.forEach((refAst) => {\n      let defaultQueryValue = refAst.value || createIdentifierToken(Identifiers.ElementRef);\n      this._addQueryReadsTo({value: refAst.name}, defaultQueryValue, this._queriedTokens);\n    });\n    if (this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))) {\n      this._hasViewContainer = true;\n    }\n\n    // create the providers that we know are eager first\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      const eager = provider.eager || this._queriedTokens.get(tokenReference(provider.token));\n      if (eager) {\n        this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nafterElement() {\n    // collect lazy providers\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n    });\n  }\n/**\n * @return {?}\n */\nget transformProviders(): ProviderAst[] {\n    return Array.from(this._transformedProviders.values());\n  }\n/**\n * @return {?}\n */\nget transformedDirectiveAsts(): DirectiveAst[] {\n    const /** @type {?} */ sortedProviderTypes = this.transformProviders.map(provider => provider.token.identifier);\n    const /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n    sortedDirectives.sort(\n        (dir1, dir2) => sortedProviderTypes.indexOf(dir1.directive.type) -\n            sortedProviderTypes.indexOf(dir2.directive.type));\n    return sortedDirectives;\n  }\n/**\n * @return {?}\n */\nget transformedHasViewContainer(): boolean { return this._hasViewContainer; }\n/**\n * @return {?}\n */\nget queryMatches(): QueryMatch[] {\n    const /** @type {?} */ allMatches: QueryMatch[] = [];\n    this._queriedTokens.forEach((matches: QueryMatch[]) => { allMatches.push(...matches); });\n    return allMatches;\n  }\n/**\n * @param {?} token\n * @param {?} defaultValue\n * @param {?} queryReadTokens\n * @return {?}\n */\nprivate _addQueryReadsTo(\n      token: CompileTokenMetadata, defaultValue: CompileTokenMetadata,\n      queryReadTokens: Map<any, QueryMatch[]>) {\n    this._getQueriesFor(token).forEach((query) => {\n      const /** @type {?} */ queryValue = query.meta.read || defaultValue;\n      const /** @type {?} */ tokenRef = tokenReference(queryValue);\n      let /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n      if (!queryMatches) {\n        queryMatches = [];\n        queryReadTokens.set(tokenRef, queryMatches);\n      }\n      queryMatches.push({queryId: query.queryId, value: queryValue});\n    });\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _getQueriesFor(token: CompileTokenMetadata): QueryWithId[] {\n    const /** @type {?} */ result: QueryWithId[] = [];\n    let /** @type {?} */ currentEl: ProviderElementContext = this;\n    let /** @type {?} */ distance = 0;\n    let /** @type {?} */ queries: QueryWithId[];\n    while (currentEl !== null) {\n      queries = currentEl._contentQueries.get(tokenReference(token));\n      if (queries) {\n        result.push(...queries.filter((query) => query.meta.descendants || distance <= 1));\n      }\n      if (currentEl._directiveAsts.length > 0) {\n        distance++;\n      }\n      currentEl = currentEl._parent;\n    }\n    queries = this.viewContext.viewQueries.get(tokenReference(token));\n    if (queries) {\n      result.push(...queries);\n    }\n    return result;\n  }\n/**\n * @param {?} requestingProviderType\n * @param {?} token\n * @param {?} eager\n * @return {?}\n */\nprivate _getOrCreateLocalProvider(\n      requestingProviderType: ProviderAstType, token: CompileTokenMetadata,\n      eager: boolean): ProviderAst {\n    const /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n    if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n                               requestingProviderType === ProviderAstType.PublicService) &&\n                              resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n        ((requestingProviderType === ProviderAstType.PrivateService ||\n          requestingProviderType === ProviderAstType.PublicService) &&\n         resolvedProvider.providerType === ProviderAstType.Builtin)) {\n      return null;\n    }\n    let /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n    if (transformedProviderAst) {\n      return transformedProviderAst;\n    }\n    if (isPresent(this._seenProviders.get(tokenReference(token)))) {\n      this.viewContext.errors.push(new ProviderError(\n          `Cannot instantiate cyclic dependency! ${tokenName(token)}`, this._sourceSpan));\n      return null;\n    }\n    this._seenProviders.set(tokenReference(token), true);\n    const /** @type {?} */ transformedProviders = resolvedProvider.providers.map((provider) => {\n      let /** @type {?} */ transformedUseValue = provider.useValue;\n      let /** @type {?} */ transformedUseExisting = provider.useExisting;\n      let /** @type {?} */ transformedDeps: CompileDiDependencyMetadata[];\n      if (isPresent(provider.useExisting)) {\n        const /** @type {?} */ existingDiDep = this._getDependency(\n            resolvedProvider.providerType, {token: provider.useExisting}, eager);\n        if (isPresent(existingDiDep.token)) {\n          transformedUseExisting = existingDiDep.token;\n        } else {\n          transformedUseExisting = null;\n          transformedUseValue = existingDiDep.value;\n        }\n      } else if (provider.useFactory) {\n        const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(resolvedProvider.providerType, dep, eager));\n      } else if (provider.useClass) {\n        const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(resolvedProvider.providerType, dep, eager));\n      }\n      return _transformProvider(provider, {\n        useExisting: transformedUseExisting,\n        useValue: transformedUseValue,\n        deps: transformedDeps\n      });\n    });\n    transformedProviderAst =\n        _transformProviderAst(resolvedProvider, {eager: eager, providers: transformedProviders});\n    this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n    return transformedProviderAst;\n  }\n/**\n * @param {?} requestingProviderType\n * @param {?} dep\n * @param {?=} eager\n * @return {?}\n */\nprivate _getLocalDependency(\n      requestingProviderType: ProviderAstType, dep: CompileDiDependencyMetadata,\n      eager: boolean = null): CompileDiDependencyMetadata {\n    if (dep.isAttribute) {\n      const /** @type {?} */ attrValue = this._attrs[dep.token.value];\n      return {isValue: true, value: attrValue == null ? null : attrValue};\n    }\n\n    if (isPresent(dep.token)) {\n      // access builtints\n      if ((requestingProviderType === ProviderAstType.Directive ||\n           requestingProviderType === ProviderAstType.Component)) {\n        if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Renderer) ||\n            tokenReference(dep.token) === resolveIdentifier(Identifiers.ElementRef) ||\n            tokenReference(dep.token) === resolveIdentifier(Identifiers.ChangeDetectorRef) ||\n            tokenReference(dep.token) === resolveIdentifier(Identifiers.TemplateRef)) {\n          return dep;\n        }\n        if (tokenReference(dep.token) === resolveIdentifier(Identifiers.ViewContainerRef)) {\n          this._hasViewContainer = true;\n        }\n      }\n      // access the injector\n      if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector)) {\n        return dep;\n      }\n      // access providers\n      if (isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {\n        return dep;\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} requestingProviderType\n * @param {?} dep\n * @param {?=} eager\n * @return {?}\n */\nprivate _getDependency(\n      requestingProviderType: ProviderAstType, dep: CompileDiDependencyMetadata,\n      eager: boolean = null): CompileDiDependencyMetadata {\n    let /** @type {?} */ currElement: ProviderElementContext = this;\n    let /** @type {?} */ currEager: boolean = eager;\n    let /** @type {?} */ result: CompileDiDependencyMetadata = null;\n    if (!dep.isSkipSelf) {\n      result = this._getLocalDependency(requestingProviderType, dep, eager);\n    }\n    if (dep.isSelf) {\n      if (!result && dep.isOptional) {\n        result = {isValue: true, value: null};\n      }\n    } else {\n      // check parent elements\n      while (!result && currElement._parent) {\n        const /** @type {?} */ prevElement = currElement;\n        currElement = currElement._parent;\n        if (prevElement._isViewRoot) {\n          currEager = false;\n        }\n        result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n      }\n      // check @Host restriction\n      if (!result) {\n        if (!dep.isHost || this.viewContext.component.isHost ||\n            this.viewContext.component.type.reference === tokenReference(dep.token) ||\n            isPresent(this.viewContext.viewProviders.get(tokenReference(dep.token)))) {\n          result = dep;\n        } else {\n          result = dep.isOptional ? result = {isValue: true, value: null} : null;\n        }\n      }\n    }\n    if (!result) {\n      this.viewContext.errors.push(\n          new ProviderError(`No provider for ${tokenName(dep.token)}`, this._sourceSpan));\n    }\n    return result;\n  }\n}\n\nfunction ProviderElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderElementContext.prototype._contentQueries;\n/** @type {?} */\nProviderElementContext.prototype._transformedProviders;\n/** @type {?} */\nProviderElementContext.prototype._seenProviders;\n/** @type {?} */\nProviderElementContext.prototype._allProviders;\n/** @type {?} */\nProviderElementContext.prototype._attrs;\n/** @type {?} */\nProviderElementContext.prototype._hasViewContainer;\n/** @type {?} */\nProviderElementContext.prototype._queriedTokens;\n/** @type {?} */\nProviderElementContext.prototype.viewContext;\n/** @type {?} */\nProviderElementContext.prototype._parent;\n/** @type {?} */\nProviderElementContext.prototype._isViewRoot;\n/** @type {?} */\nProviderElementContext.prototype._directiveAsts;\n/** @type {?} */\nProviderElementContext.prototype._sourceSpan;\n}\n\nexport class NgModuleProviderAnalyzer {\nprivate _transformedProviders = new Map<any, ProviderAst>();\nprivate _seenProviders = new Map<any, boolean>();\nprivate _allProviders: Map<any, ProviderAst>;\nprivate _errors: ProviderError[] = [];\n/**\n * @param {?} ngModule\n * @param {?} extraProviders\n * @param {?} sourceSpan\n */\nconstructor(\n      ngModule: CompileNgModuleMetadata, extraProviders: CompileProviderMetadata[],\n      sourceSpan: ParseSourceSpan) {\n    this._allProviders = new Map<any, ProviderAst>();\n    ngModule.transitiveModule.modules.forEach((ngModuleType: CompileTypeMetadata) => {\n      const ngModuleProvider = {token: {identifier: ngModuleType}, useClass: ngModuleType};\n      _resolveProviders(\n          [ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, this._errors,\n          this._allProviders);\n    });\n    _resolveProviders(\n        ngModule.transitiveModule.providers.map(entry => entry.provider).concat(extraProviders),\n        ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n  }\n/**\n * @return {?}\n */\nparse(): ProviderAst[] {\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._getOrCreateLocalProvider(provider.token, provider.eager);\n    });\n    if (this._errors.length > 0) {\n      const /** @type {?} */ errorString = this._errors.join('\\n');\n      throw new Error(`Provider parse errors:\\n${errorString}`);\n    }\n    return Array.from(this._transformedProviders.values());\n  }\n/**\n * @param {?} token\n * @param {?} eager\n * @return {?}\n */\nprivate _getOrCreateLocalProvider(token: CompileTokenMetadata, eager: boolean): ProviderAst {\n    const /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n    if (!resolvedProvider) {\n      return null;\n    }\n    let /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n    if (transformedProviderAst) {\n      return transformedProviderAst;\n    }\n    if (isPresent(this._seenProviders.get(tokenReference(token)))) {\n      this._errors.push(new ProviderError(\n          `Cannot instantiate cyclic dependency! ${tokenName(token)}`,\n          resolvedProvider.sourceSpan));\n      return null;\n    }\n    this._seenProviders.set(tokenReference(token), true);\n    const /** @type {?} */ transformedProviders = resolvedProvider.providers.map((provider) => {\n      let /** @type {?} */ transformedUseValue = provider.useValue;\n      let /** @type {?} */ transformedUseExisting = provider.useExisting;\n      let /** @type {?} */ transformedDeps: CompileDiDependencyMetadata[];\n      if (isPresent(provider.useExisting)) {\n        const /** @type {?} */ existingDiDep =\n            this._getDependency({token: provider.useExisting}, eager, resolvedProvider.sourceSpan);\n        if (isPresent(existingDiDep.token)) {\n          transformedUseExisting = existingDiDep.token;\n        } else {\n          transformedUseExisting = null;\n          transformedUseValue = existingDiDep.value;\n        }\n      } else if (provider.useFactory) {\n        const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n      } else if (provider.useClass) {\n        const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n      }\n      return _transformProvider(provider, {\n        useExisting: transformedUseExisting,\n        useValue: transformedUseValue,\n        deps: transformedDeps\n      });\n    });\n    transformedProviderAst =\n        _transformProviderAst(resolvedProvider, {eager: eager, providers: transformedProviders});\n    this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n    return transformedProviderAst;\n  }\n/**\n * @param {?} dep\n * @param {?=} eager\n * @param {?} requestorSourceSpan\n * @return {?}\n */\nprivate _getDependency(\n      dep: CompileDiDependencyMetadata, eager: boolean = null,\n      requestorSourceSpan: ParseSourceSpan): CompileDiDependencyMetadata {\n    let /** @type {?} */ foundLocal = false;\n    if (!dep.isSkipSelf && isPresent(dep.token)) {\n      // access the injector\n      if (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n          tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver)) {\n        foundLocal = true;\n        // access providers\n      } else if (isPresent(this._getOrCreateLocalProvider(dep.token, eager))) {\n        foundLocal = true;\n      }\n    }\n    let /** @type {?} */ result: CompileDiDependencyMetadata = dep;\n    if (dep.isSelf && !foundLocal) {\n      if (dep.isOptional) {\n        result = {isValue: true, value: null};\n      } else {\n        this._errors.push(\n            new ProviderError(`No provider for ${tokenName(dep.token)}`, requestorSourceSpan));\n      }\n    }\n    return result;\n  }\n}\n\nfunction NgModuleProviderAnalyzer_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._transformedProviders;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._seenProviders;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._allProviders;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._errors;\n}\n\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(\n    provider: CompileProviderMetadata,\n    {useExisting, useValue, deps}:\n        {useExisting: CompileTokenMetadata, useValue: any, deps: CompileDiDependencyMetadata[]}) {\n  return {\n    token: provider.token,\n    useClass: provider.useClass,\n    useExisting: useExisting,\n    useFactory: provider.useFactory,\n    useValue: useValue,\n    deps: deps,\n    multi: provider.multi\n  };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(\n    provider: ProviderAst,\n    {eager, providers}: {eager: boolean, providers: CompileProviderMetadata[]}): ProviderAst {\n  return new ProviderAst(\n      provider.token, provider.multiProvider, provider.eager || eager, providers,\n      provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(\n    directives: CompileDirectiveSummary[], sourceSpan: ParseSourceSpan,\n    targetErrors: ParseError[]): Map<any, ProviderAst> {\n  const /** @type {?} */ providersByToken = new Map<any, ProviderAst>();\n  directives.forEach((directive) => {\n    const /** @type {?} */ dirProvider:\n        CompileProviderMetadata = {token: {identifier: directive.type}, useClass: directive.type};\n    _resolveProviders(\n        [dirProvider],\n        directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true,\n        sourceSpan, targetErrors, providersByToken);\n  });\n\n  // Note: directives need to be able to overwrite providers of a component!\n  const /** @type {?} */ directivesWithComponentFirst =\n      directives.filter(dir => dir.isComponent).concat(directives.filter(dir => !dir.isComponent));\n  directivesWithComponentFirst.forEach((directive) => {\n    _resolveProviders(\n        directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors,\n        providersByToken);\n    _resolveProviders(\n        directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors,\n        providersByToken);\n  });\n  return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(\n    providers: CompileProviderMetadata[], providerType: ProviderAstType, eager: boolean,\n    sourceSpan: ParseSourceSpan, targetErrors: ParseError[],\n    targetProvidersByToken: Map<any, ProviderAst>) {\n  providers.forEach((provider) => {\n    let /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n    if (isPresent(resolvedProvider) && !!resolvedProvider.multiProvider !== !!provider.multi) {\n      targetErrors.push(new ProviderError(\n          `Mixing multi and non multi provider is not possible for token ${tokenName(resolvedProvider.token)}`,\n          sourceSpan));\n    }\n    if (!resolvedProvider) {\n      const /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n              ( /** @type {?} */((<CompileTypeMetadata>provider.token.identifier))).lifecycleHooks ?\n          ( /** @type {?} */((<CompileTypeMetadata>provider.token.identifier))).lifecycleHooks :\n          [];\n      resolvedProvider = new ProviderAst(\n          provider.token, provider.multi, eager || lifecycleHooks.length > 0, [provider],\n          providerType, lifecycleHooks, sourceSpan);\n      targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n    } else {\n      if (!provider.multi) {\n        resolvedProvider.providers.length = 0;\n      }\n      resolvedProvider.providers.push(provider);\n    }\n  });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component: CompileDirectiveMetadata): Map<any, QueryWithId[]> {\n  // Note: queries start with id 1 so we can use the number in a Bloom filter!\n  let /** @type {?} */ viewQueryId = 1;\n  const /** @type {?} */ viewQueries = new Map<any, QueryWithId[]>();\n  if (component.viewQueries) {\n    component.viewQueries.forEach(\n        (query) => _addQueryToTokenMap(viewQueries, {meta: query, queryId: viewQueryId++}));\n  }\n  return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(\n    contentQueryStartId: number, directives: CompileDirectiveSummary[]): Map<any, QueryWithId[]> {\n  let /** @type {?} */ contentQueryId = contentQueryStartId;\n  const /** @type {?} */ contentQueries = new Map<any, QueryWithId[]>();\n  directives.forEach((directive, directiveIndex) => {\n    if (directive.queries) {\n      directive.queries.forEach(\n          (query) => _addQueryToTokenMap(contentQueries, {meta: query, queryId: contentQueryId++}));\n    }\n  });\n  return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map: Map<any, QueryWithId[]>, query: QueryWithId) {\n  query.meta.selectors.forEach((token: CompileTokenMetadata) => {\n    let /** @type {?} */ entry = map.get(tokenReference(token));\n    if (!entry) {\n      entry = [];\n      map.set(tokenReference(token), entry);\n    }\n    entry.push(query);\n  });\n}\n"]}