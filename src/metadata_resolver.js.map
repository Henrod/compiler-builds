{"version":3,"sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","file":"metadata_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateMetadata, AnimationEntryMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationStateDeclarationMetadata, AnimationStateMetadata, AnimationStateTransitionMetadata, AnimationStyleMetadata, AnimationWithStepsMetadata, Attribute, ChangeDetectionStrategy, Component, ComponentFactory, Directive, Host, Inject, Injectable, InjectionToken, ModuleWithProviders, Optional, Provider, Query, RendererTypeV2, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef} from '@angular/core';\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {stringify} from './facade/lang';\nimport {Identifiers, resolveIdentifier} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {hasLifecycleHook} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ERROR_COMPONENT_TYPE, LIFECYCLE_HOOKS_VALUES, ReflectorReader, reflector, viewEngine} from './private_import_core';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {SummaryResolver} from './summary_resolver';\nimport {getUrlScheme} from './url_resolver';\nimport {MODULE_SUFFIX, ValueTransformer, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n@CompilerInjectable()\nexport class CompileMetadataResolver {\nprivate _nonNormalizedDirectiveCache =\n      new Map<Type<any>, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\nprivate _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\nprivate _summaryCache = new Map<Type<any>, cpl.CompileTypeSummary>();\nprivate _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\nprivate _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\nprivate _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n/**\n * @param {?} _config\n * @param {?} _ngModuleResolver\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _summaryResolver\n * @param {?} _schemaRegistry\n * @param {?} _directiveNormalizer\n * @param {?} _staticSymbolCache\n * @param {?=} _reflector\n * @param {?=} _errorCollector\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _ngModuleResolver: NgModuleResolver,\nprivate _directiveResolver: DirectiveResolver,\nprivate _pipeResolver: PipeResolver,\nprivate _summaryResolver: SummaryResolver<any>,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _directiveNormalizer: DirectiveNormalizer,\nprivate _staticSymbolCache: StaticSymbolCache,\nprivate _reflector: ReflectorReader = reflector,\nprivate _errorCollector?: ErrorCollector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n/**\n * @param {?} baseType\n * @param {?} name\n * @return {?}\n */\nprivate _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let /** @type {?} */ delegate: any = null;\n    const /** @type {?} */ proxyClass: cpl.ProxyClass = /** @type {?} */(( <any>function() {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    }));\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      ( /** @type {?} */((<any>proxyClass))).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    ( /** @type {?} */((<any>proxyClass))).overriddenName = name;\n    return proxyClass;\n  }\n/**\n * @param {?} dirType\n * @param {?} name\n * @return {?}\n */\nprivate getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getDirectiveWrapperClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    if (!this._config.useViewEngine) {\n      return this.getGeneratedClass(dirType, cpl.dirWrapperClassName(dirType));\n    }\n    return null;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentType(dirType: any): StaticSymbol|Type<any> {\n    const /** @type {?} */ name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    } else {\n      const /** @type {?} */ HostClass = /** @type {?} */(( <any>function HostClass() {}));\n      HostClass.overriddenName = name;\n\n      return HostClass;\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getRendererType(dirType: any): StaticSymbol|RendererTypeV2 {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n    } else {\n      // returning an object as proxy,\n      // that we fill later during runtime compilation.\n      return /** @type {?} */(( <any>{}));\n    }\n  }\n/**\n * @param {?} selector\n * @param {?} dirType\n * @return {?}\n */\nprivate getComponentFactory(selector: string, dirType: any): StaticSymbol|ComponentFactory<any> {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n      if (this._config.useViewEngine) {\n        return viewEngine.createComponentFactory(selector, dirType, /** @type {?} */(( <any>hostView)));\n      } else {\n        return new ComponentFactory(selector, /** @type {?} */(( <any>hostView)), dirType);\n      }\n    }\n  }\n/**\n * @param {?} entry\n * @return {?}\n */\ngetAnimationEntryMetadata(entry: AnimationEntryMetadata): cpl.CompileAnimationEntryMetadata {\n    const /** @type {?} */ defs = entry.definitions.map(def => this._getAnimationStateMetadata(def));\n    return new cpl.CompileAnimationEntryMetadata(entry.name, defs);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStateMetadata(value: AnimationStateMetadata):\n      cpl.CompileAnimationStateMetadata {\n    if (value instanceof AnimationStateDeclarationMetadata) {\n      const /** @type {?} */ styles = this._getAnimationStyleMetadata(value.styles);\n      return new cpl.CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n    }\n\n    if (value instanceof AnimationStateTransitionMetadata) {\n      return new cpl.CompileAnimationStateTransitionMetadata(\n          value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n    }\n\n    return null;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStyleMetadata(value: AnimationStyleMetadata):\n      cpl.CompileAnimationStyleMetadata {\n    return new cpl.CompileAnimationStyleMetadata(value.offset, value.styles);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationMetadata(value: AnimationMetadata): cpl.CompileAnimationMetadata {\n    if (value instanceof AnimationStyleMetadata) {\n      return this._getAnimationStyleMetadata(value);\n    }\n\n    if (value instanceof AnimationKeyframesSequenceMetadata) {\n      return new cpl.CompileAnimationKeyframesSequenceMetadata(\n          value.steps.map(entry => this._getAnimationStyleMetadata(entry)));\n    }\n\n    if (value instanceof AnimationAnimateMetadata) {\n      const /** @type {?} */ animateData = /** @type {?} */((\n          <cpl.CompileAnimationStyleMetadata|cpl.CompileAnimationKeyframesSequenceMetadata>this\n              ._getAnimationMetadata(value.styles)));\n      return new cpl.CompileAnimationAnimateMetadata(value.timings, animateData);\n    }\n\n    if (value instanceof AnimationWithStepsMetadata) {\n      const /** @type {?} */ steps = value.steps.map(step => this._getAnimationMetadata(step));\n\n      if (value instanceof AnimationGroupMetadata) {\n        return new cpl.CompileAnimationGroupMetadata(steps);\n      }\n\n      return new cpl.CompileAnimationSequenceMetadata(steps);\n    }\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} kind\n * @return {?}\n */\nprivate _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary {\n    let /** @type {?} */ typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n/**\n * @param {?} directiveType\n * @param {?} isSync\n * @return {?}\n */\nprivate _loadDirectiveMetadata(directiveType: any, isSync: boolean): Promise<any> {\n    if (this._directiveCache.has(directiveType)) {\n      return;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = this.getNonNormalizedDirectiveMetadata(directiveType);\n\n    const /** @type {?} */ createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata) => {\n      const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        wrapperType: metadata.wrapperType,\n        componentViewType: metadata.componentViewType,\n        rendererType: metadata.rendererType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return normalizedDirMeta;\n    };\n\n    if (metadata.isComponent) {\n      const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n        componentType: directiveType,\n        moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n        encapsulation: metadata.template.encapsulation,\n        template: metadata.template.template,\n        templateUrl: metadata.template.templateUrl,\n        styles: metadata.template.styles,\n        styleUrls: metadata.template.styleUrls,\n        animations: metadata.template.animations,\n        interpolation: metadata.template.interpolation\n      });\n      if (templateMeta.syncResult) {\n        createDirectiveMetadata(templateMeta.syncResult);\n        return null;\n      } else {\n        if (isSync) {\n          this._reportError(componentStillLoadingError(directiveType), directiveType);\n          return null;\n        }\n        return templateMeta.asyncResult.then(createDirectiveMetadata);\n      }\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n/**\n * @param {?} directiveType\n * @return {?}\n */\ngetNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata} {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let /** @type {?} */ nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata;\n\n    if (dirMeta instanceof Component) {\n      // component\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const /** @type {?} */ animations = dirMeta.animations ?\n          dirMeta.animations.map(e => this.getAnimationEntryMetadata(e)) :\n          null;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: dirMeta.encapsulation,\n        template: dirMeta.template,\n        templateUrl: dirMeta.templateUrl,\n        styles: dirMeta.styles,\n        styleUrls: dirMeta.styleUrls,\n        animations: animations,\n        interpolation: dirMeta.interpolation\n      });\n    }\n\n    let /** @type {?} */ changeDetectionStrategy: ChangeDetectionStrategy = null;\n    let /** @type {?} */ viewProviders: cpl.CompileProviderMetadata[] = [];\n    let /** @type {?} */ entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let /** @type {?} */ selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = dirMeta.changeDetection;\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                                     .map((type) => this._getEntryComponentMetadata(type))\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let /** @type {?} */ queries: cpl.CompileQueryMetadata[] = [];\n    let /** @type {?} */ viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n      selector: selector,\n      exportAs: dirMeta.exportAs,\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs,\n      outputs: dirMeta.outputs,\n      host: dirMeta.host,\n      providers: providers,\n      viewProviders: viewProviders,\n      queries: queries,\n      viewQueries: viewQueries,\n      entryComponents: entryComponentMetadata,\n      wrapperType: this.getDirectiveWrapperClass(directiveType),\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         undefined,\n      rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : undefined,\n      componentFactory: nonNormalizedTemplateMetadata ?\n          this.getComponentFactory(selector, directiveType) :\n          undefined\n    });\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n/**\n * Gets the metadata for the given directive.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} directiveType\n * @return {?}\n */\ngetDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(directiveType);\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: any) { return this._directiveResolver.isDirective(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: any) { return this._pipeResolver.isPipe(type); }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ngetNgModuleSummary(moduleType: any): cpl.CompileNgModuleSummary {\n    let /** @type {?} */ moduleSummary = /** @type {?} */((\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule)));\n    if (!moduleSummary) {\n      const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n/**\n * Loads the declared directives and pipes of an NgModule.\n * @param {?} moduleType\n * @param {?} isSync\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nloadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const /** @type {?} */ promise = this._loadDirectiveMetadata(id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\ngetNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata {\n    moduleType = resolveForwardRef(moduleType);\n    let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const /** @type {?} */ declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ importedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    const /** @type {?} */ entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let /** @type {?} */ importedModuleType: Type<any>;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const /** @type {?} */ moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this._directiveResolver.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this._pipeResolver.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const /** @type {?} */ exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => this._getEntryComponentMetadata(type)));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => this._getEntryComponentMetadata(type.reference)));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, compileMeta.type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getTypeDescriptor(type: Type<any>): string {\n    if (this._directiveResolver.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this._pipeResolver.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this._ngModuleResolver.isNgModule(type)) {\n      return 'module';\n    }\n\n    if (( /** @type {?} */((type as any))).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n/**\n * @param {?} type\n * @param {?} moduleType\n * @return {?}\n */\nprivate _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n/**\n * @param {?} importedModules\n * @param {?} exportedModules\n * @return {?}\n */\nprivate _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n    const /** @type {?} */ modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const /** @type {?} */ addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n        let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const /** @type {?} */ moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getIdentifierMetadata(type: Type<any>): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisInjectable(type: any): boolean {\n    const /** @type {?} */ annotations = this._reflector.annotations(type);\n    // Note: We need an exact check here as @Component / @Directive / ... inherit\n    // from @CompilerInjectable!\n    return annotations.some(ann => ann.constructor === Injectable);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ngetInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {summaryKind: cpl.CompileSummaryKind.Injectable, type: this._getTypeMetadata(type)};\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getInjectableMetadata(type: Type<any>, dependencies: any[] = null):\n      cpl.CompileTypeMetadata {\n    const /** @type {?} */ typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getTypeMetadata(type: Type<any>, dependencies: any[] = null): cpl.CompileTypeMetadata {\n    const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n      lifecycleHooks:\n          LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, identifier.reference)),\n    };\n  }\n/**\n * @param {?} factory\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getFactoryMetadata(factory: Function, dependencies: any[] = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n/**\n * Gets the metadata for the given pipe.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const /** @type {?} */ pipeSummary = /** @type {?} */((\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe)));\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\nprivate _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const /** @type {?} */ pipeAnnotation = this._pipeResolver.resolve(pipeType);\n\n    const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @return {?}\n */\nprivate _getDependenciesMetadata(typeOrFunc: Type<any>|Function, dependencies: any[]):\n      cpl.CompileDiDependencyMetadata[] {\n    let /** @type {?} */ hasUnknownDeps = false;\n    const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const /** @type {?} */ dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let /** @type {?} */ isAttribute = false;\n      let /** @type {?} */ isHost = false;\n      let /** @type {?} */ isSelf = false;\n      let /** @type {?} */ isSkipSelf = false;\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (paramEntry instanceof InjectionToken) {\n            token = paramEntry;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return null;\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const /** @type {?} */ depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n      this._reportError(\n          syntaxError(\n              `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`),\n          typeOrFunc);\n    }\n\n    return dependenciesMetadata;\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let /** @type {?} */ compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n/**\n * @param {?} providers\n * @param {?} targetEntryComponents\n * @param {?=} debugInfo\n * @param {?=} compileProviders\n * @param {?=} type\n * @return {?}\n */\nprivate _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let /** @type {?} */ providerMeta: cpl.ProviderMeta;\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.`));\n        } else {\n          const /** @type {?} */ providersInfo =\n              ( /** @type {?} */((<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n        }\n        if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n/**\n * @param {?} provider\n * @param {?=} type\n * @return {?}\n */\nprivate _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const /** @type {?} */ components: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const /** @type {?} */ entry = this._getEntryComponentMetadata(identifier.reference, false);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n/**\n * @param {?} dirType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nprivate _getEntryComponentMetadata(dirType: any, throwIfNotFound = true):\n      cpl.CompileEntryComponentMetadata {\n    const /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta && dirMeta.metadata.isComponent) {\n      return {componentType: dirType, componentFactory: dirMeta.metadata.componentFactory};\n    } else {\n      const /** @type {?} */ dirSummary = /** @type {?} */((\n          <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n      if (dirSummary && dirSummary.isComponent) {\n        return {componentType: dirType, componentFactory: dirSummary.componentFactory};\n      }\n    }\n\n    if (throwIfNotFound) {\n      throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n    }\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ngetProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let /** @type {?} */ compileDeps: cpl.CompileDiDependencyMetadata[];\n    let /** @type {?} */ compileTypeMetadata: cpl.CompileTypeMetadata = null;\n    let /** @type {?} */ compileFactoryMetadata: cpl.CompileFactoryMetadata = null;\n    let /** @type {?} */ token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n/**\n * @param {?} queries\n * @param {?} isViewQuery\n * @param {?} directiveType\n * @return {?}\n */\nprivate _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const /** @type {?} */ res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const /** @type {?} */ query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n/**\n * @param {?} q\n * @param {?} propertyName\n * @param {?} typeOrFunc\n * @return {?}\n */\nprivate _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let /** @type {?} */ selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n      }\n      selectors = [this._getTokenMetadata(q.selector)];\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null\n    };\n  }\n/**\n * @param {?} error\n * @param {?=} type\n * @param {?=} otherType\n * @return {?}\n */\nprivate _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: SummaryResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: StaticSymbolCache, decorators: [{ type: Optional }, ]},\n{type: ReflectorReader, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN, ] }, ]},\n];\n}\n\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nCompileMetadataResolver.ctorParameters;\n/** @type {?} */\nCompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleOfTypes;\n/** @type {?} */\nCompileMetadataResolver.prototype._config;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._schemaRegistry;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveNormalizer;\n/** @type {?} */\nCompileMetadataResolver.prototype._staticSymbolCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._reflector;\n/** @type {?} */\nCompileMetadataResolver.prototype._errorCollector;\n}\n\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n      const /** @type {?} */ item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nexport function componentModuleUrl(\n    reflector: ReflectorReader, type: Type<any>, cmpMetadata: Component): string {\n  if (type instanceof StaticSymbol) {\n    return type.filePath;\n  }\n\n  const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n\n  if (typeof moduleId === 'string') {\n    const /** @type {?} */ scheme = getUrlScheme(moduleId);\n    return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n  } else if (moduleId !== null && moduleId !== void 0) {\n    throw syntaxError(\n        `moduleId should be a string in \"${stringifyType(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n        `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n  }\n\n  return reflector.importUri(type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nvisitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType: Type<any>) {\n  debugger;\n  const /** @type {?} */ error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}