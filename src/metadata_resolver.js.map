{"version":3,"sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","file":"metadata_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateMetadata, AnimationEntryMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationStateDeclarationMetadata, AnimationStateMetadata, AnimationStateTransitionMetadata, AnimationStyleMetadata, AnimationWithStepsMetadata, Attribute, ChangeDetectionStrategy, Component, ComponentFactory, Directive, Host, Inject, Injectable, InjectionToken, ModuleWithProviders, Optional, Provider, Query, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef} from '@angular/core/index';\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {stringify} from './facade/lang';\nimport {Identifiers, resolveIdentifier} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {hasLifecycleHook} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ERROR_COMPONENT_TYPE, LIFECYCLE_HOOKS_VALUES, ReflectorReader, reflector} from './private_import_core';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {SummaryResolver} from './summary_resolver';\nimport {getUrlScheme} from './url_resolver';\nimport {MODULE_SUFFIX, ValueTransformer, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n@CompilerInjectable()\nexport class CompileMetadataResolver {\nprivate _nonNormalizedDirectiveCache =\n      new Map<Type<any>, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\nprivate _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\nprivate _summaryCache = new Map<Type<any>, cpl.CompileTypeSummary>();\nprivate _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\nprivate _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\nprivate _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n/**\n * @param {?} _ngModuleResolver\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _summaryResolver\n * @param {?} _schemaRegistry\n * @param {?} _directiveNormalizer\n * @param {?} _staticSymbolCache\n * @param {?=} _reflector\n * @param {?=} _errorCollector\n */\nconstructor(\nprivate _ngModuleResolver: NgModuleResolver,\nprivate _directiveResolver: DirectiveResolver,\nprivate _pipeResolver: PipeResolver,\nprivate _summaryResolver: SummaryResolver<any>,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _directiveNormalizer: DirectiveNormalizer,\nprivate _staticSymbolCache: StaticSymbolCache,\nprivate _reflector: ReflectorReader = reflector,\nprivate _errorCollector?: ErrorCollector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n/**\n * @param {?} baseType\n * @param {?} name\n * @return {?}\n */\nprivate _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let /** @type {?} */ delegate: any = null;\n    const /** @type {?} */ proxyClass: cpl.ProxyClass = /** @type {?} */(( <any>function() {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    }));\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      ( /** @type {?} */((<any>proxyClass))).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    ( /** @type {?} */((<any>proxyClass))).overriddenName = name;\n    return proxyClass;\n  }\n/**\n * @param {?} dirType\n * @param {?} name\n * @return {?}\n */\nprivate getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getDirectiveWrapperClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.dirWrapperClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentType(dirType: any): StaticSymbol|Type<any> {\n    const /** @type {?} */ name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    } else {\n      const /** @type {?} */ HostClass = /** @type {?} */(( <any>function HostClass() {}));\n      HostClass.overriddenName = name;\n\n      return HostClass;\n    }\n  }\n/**\n * @param {?} selector\n * @param {?} dirType\n * @return {?}\n */\nprivate getComponentFactory(selector: string, dirType: any): StaticSymbol|ComponentFactory<any> {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n      return new ComponentFactory(selector, /** @type {?} */(( <any>hostView)), dirType);\n    }\n  }\n/**\n * @param {?} entry\n * @return {?}\n */\ngetAnimationEntryMetadata(entry: AnimationEntryMetadata): cpl.CompileAnimationEntryMetadata {\n    const /** @type {?} */ defs = entry.definitions.map(def => this._getAnimationStateMetadata(def));\n    return new cpl.CompileAnimationEntryMetadata(entry.name, defs);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStateMetadata(value: AnimationStateMetadata):\n      cpl.CompileAnimationStateMetadata {\n    if (value instanceof AnimationStateDeclarationMetadata) {\n      const /** @type {?} */ styles = this._getAnimationStyleMetadata(value.styles);\n      return new cpl.CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n    }\n\n    if (value instanceof AnimationStateTransitionMetadata) {\n      return new cpl.CompileAnimationStateTransitionMetadata(\n          value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n    }\n\n    return null;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStyleMetadata(value: AnimationStyleMetadata):\n      cpl.CompileAnimationStyleMetadata {\n    return new cpl.CompileAnimationStyleMetadata(value.offset, value.styles);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationMetadata(value: AnimationMetadata): cpl.CompileAnimationMetadata {\n    if (value instanceof AnimationStyleMetadata) {\n      return this._getAnimationStyleMetadata(value);\n    }\n\n    if (value instanceof AnimationKeyframesSequenceMetadata) {\n      return new cpl.CompileAnimationKeyframesSequenceMetadata(\n          value.steps.map(entry => this._getAnimationStyleMetadata(entry)));\n    }\n\n    if (value instanceof AnimationAnimateMetadata) {\n      const /** @type {?} */ animateData = /** @type {?} */((\n          <cpl.CompileAnimationStyleMetadata|cpl.CompileAnimationKeyframesSequenceMetadata>this\n              ._getAnimationMetadata(value.styles)));\n      return new cpl.CompileAnimationAnimateMetadata(value.timings, animateData);\n    }\n\n    if (value instanceof AnimationWithStepsMetadata) {\n      const /** @type {?} */ steps = value.steps.map(step => this._getAnimationMetadata(step));\n\n      if (value instanceof AnimationGroupMetadata) {\n        return new cpl.CompileAnimationGroupMetadata(steps);\n      }\n\n      return new cpl.CompileAnimationSequenceMetadata(steps);\n    }\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} kind\n * @return {?}\n */\nprivate _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary {\n    let /** @type {?} */ typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n/**\n * @param {?} directiveType\n * @param {?} isSync\n * @return {?}\n */\nprivate _loadDirectiveMetadata(directiveType: any, isSync: boolean): Promise<any> {\n    if (this._directiveCache.has(directiveType)) {\n      return;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = this.getNonNormalizedDirectiveMetadata(directiveType);\n\n    const /** @type {?} */ createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata) => {\n      const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        wrapperType: metadata.wrapperType,\n        componentViewType: metadata.componentViewType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return normalizedDirMeta;\n    };\n\n    if (metadata.isComponent) {\n      const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n        componentType: directiveType,\n        moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n        encapsulation: metadata.template.encapsulation,\n        template: metadata.template.template,\n        templateUrl: metadata.template.templateUrl,\n        styles: metadata.template.styles,\n        styleUrls: metadata.template.styleUrls,\n        animations: metadata.template.animations,\n        interpolation: metadata.template.interpolation\n      });\n      if (templateMeta.syncResult) {\n        createDirectiveMetadata(templateMeta.syncResult);\n        return null;\n      } else {\n        if (isSync) {\n          this._reportError(componentStillLoadingError(directiveType), directiveType);\n          return null;\n        }\n        return templateMeta.asyncResult.then(createDirectiveMetadata);\n      }\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n/**\n * @param {?} directiveType\n * @return {?}\n */\ngetNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata} {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let /** @type {?} */ nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata;\n\n    if (dirMeta instanceof Component) {\n      // component\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const /** @type {?} */ animations = dirMeta.animations ?\n          dirMeta.animations.map(e => this.getAnimationEntryMetadata(e)) :\n          null;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: dirMeta.encapsulation,\n        template: dirMeta.template,\n        templateUrl: dirMeta.templateUrl,\n        styles: dirMeta.styles,\n        styleUrls: dirMeta.styleUrls,\n        animations: animations,\n        interpolation: dirMeta.interpolation\n      });\n    }\n\n    let /** @type {?} */ changeDetectionStrategy: ChangeDetectionStrategy = null;\n    let /** @type {?} */ viewProviders: cpl.CompileProviderMetadata[] = [];\n    let /** @type {?} */ entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let /** @type {?} */ selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = dirMeta.changeDetection;\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                                     .map((type) => this._getEntryComponentMetadata(type))\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let /** @type {?} */ queries: cpl.CompileQueryMetadata[] = [];\n    let /** @type {?} */ viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n      selector: selector,\n      exportAs: dirMeta.exportAs,\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs,\n      outputs: dirMeta.outputs,\n      host: dirMeta.host,\n      providers: providers,\n      viewProviders: viewProviders,\n      queries: queries,\n      viewQueries: viewQueries,\n      entryComponents: entryComponentMetadata,\n      wrapperType: this.getDirectiveWrapperClass(directiveType),\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         undefined,\n      componentFactory: nonNormalizedTemplateMetadata ?\n          this.getComponentFactory(selector, directiveType) :\n          undefined\n    });\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n/**\n * Gets the metadata for the given directive.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} directiveType\n * @return {?}\n */\ngetDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(directiveType);\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: any) { return this._directiveResolver.isDirective(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: any) { return this._pipeResolver.isPipe(type); }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ngetNgModuleSummary(moduleType: any): cpl.CompileNgModuleSummary {\n    let /** @type {?} */ moduleSummary = /** @type {?} */((\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule)));\n    if (!moduleSummary) {\n      const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n/**\n * Loads the declared directives and pipes of an NgModule.\n * @param {?} moduleType\n * @param {?} isSync\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nloadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const /** @type {?} */ promise = this._loadDirectiveMetadata(id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\ngetNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata {\n    moduleType = resolveForwardRef(moduleType);\n    let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const /** @type {?} */ declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ importedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    const /** @type {?} */ entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let /** @type {?} */ importedModuleType: Type<any>;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const /** @type {?} */ moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this._directiveResolver.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this._pipeResolver.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const /** @type {?} */ exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => this._getEntryComponentMetadata(type)));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => this._getEntryComponentMetadata(type.reference)));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, compileMeta.type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getTypeDescriptor(type: Type<any>): string {\n    if (this._directiveResolver.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this._pipeResolver.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this._ngModuleResolver.isNgModule(type)) {\n      return 'module';\n    }\n\n    if (( /** @type {?} */((type as any))).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n/**\n * @param {?} type\n * @param {?} moduleType\n * @return {?}\n */\nprivate _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n/**\n * @param {?} importedModules\n * @param {?} exportedModules\n * @return {?}\n */\nprivate _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n    const /** @type {?} */ modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const /** @type {?} */ addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n        let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const /** @type {?} */ moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getIdentifierMetadata(type: Type<any>): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisInjectable(type: any): boolean {\n    const /** @type {?} */ annotations = this._reflector.annotations(type);\n    // Note: We need an exact check here as @Component / @Directive / ... inherit\n    // from @CompilerInjectable!\n    return annotations.some(ann => ann.constructor === Injectable);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ngetInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {summaryKind: cpl.CompileSummaryKind.Injectable, type: this._getTypeMetadata(type)};\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getInjectableMetadata(type: Type<any>, dependencies: any[] = null):\n      cpl.CompileTypeMetadata {\n    const /** @type {?} */ typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getTypeMetadata(type: Type<any>, dependencies: any[] = null): cpl.CompileTypeMetadata {\n    const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n      lifecycleHooks:\n          LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, identifier.reference)),\n    };\n  }\n/**\n * @param {?} factory\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getFactoryMetadata(factory: Function, dependencies: any[] = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n/**\n * Gets the metadata for the given pipe.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const /** @type {?} */ pipeSummary = /** @type {?} */((\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe)));\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\nprivate _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const /** @type {?} */ pipeAnnotation = this._pipeResolver.resolve(pipeType);\n\n    const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @return {?}\n */\nprivate _getDependenciesMetadata(typeOrFunc: Type<any>|Function, dependencies: any[]):\n      cpl.CompileDiDependencyMetadata[] {\n    let /** @type {?} */ hasUnknownDeps = false;\n    const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const /** @type {?} */ dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let /** @type {?} */ isAttribute = false;\n      let /** @type {?} */ isHost = false;\n      let /** @type {?} */ isSelf = false;\n      let /** @type {?} */ isSkipSelf = false;\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return null;\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const /** @type {?} */ depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n      this._reportError(\n          syntaxError(\n              `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`),\n          typeOrFunc);\n    }\n\n    return dependenciesMetadata;\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let /** @type {?} */ compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n/**\n * @param {?} providers\n * @param {?} targetEntryComponents\n * @param {?=} debugInfo\n * @param {?=} compileProviders\n * @param {?=} type\n * @return {?}\n */\nprivate _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let /** @type {?} */ providerMeta: cpl.ProviderMeta;\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.`));\n        } else {\n          const /** @type {?} */ providersInfo =\n              ( /** @type {?} */((<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n        }\n        if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n/**\n * @param {?} provider\n * @param {?=} type\n * @return {?}\n */\nprivate _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const /** @type {?} */ components: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const /** @type {?} */ entry = this._getEntryComponentMetadata(identifier.reference);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate _getEntryComponentMetadata(dirType: any): cpl.CompileEntryComponentMetadata {\n    const /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta) {\n      return {componentType: dirType, componentFactory: dirMeta.metadata.componentFactory};\n    } else {\n      const /** @type {?} */ dirSummary = /** @type {?} */((\n          <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n      if (dirSummary) {\n        return {componentType: dirType, componentFactory: dirSummary.componentFactory};\n      }\n    }\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ngetProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let /** @type {?} */ compileDeps: cpl.CompileDiDependencyMetadata[];\n    let /** @type {?} */ compileTypeMetadata: cpl.CompileTypeMetadata = null;\n    let /** @type {?} */ compileFactoryMetadata: cpl.CompileFactoryMetadata = null;\n    let /** @type {?} */ token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n/**\n * @param {?} queries\n * @param {?} isViewQuery\n * @param {?} directiveType\n * @return {?}\n */\nprivate _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const /** @type {?} */ res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const /** @type {?} */ query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n/**\n * @param {?} q\n * @param {?} propertyName\n * @param {?} typeOrFunc\n * @return {?}\n */\nprivate _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let /** @type {?} */ selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n      }\n      selectors = [this._getTokenMetadata(q.selector)];\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null\n    };\n  }\n/**\n * @param {?} error\n * @param {?=} type\n * @param {?=} otherType\n * @return {?}\n */\nprivate _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: SummaryResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: StaticSymbolCache, decorators: [{ type: Optional }, ]},\n{type: ReflectorReader, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN, ] }, ]},\n];\n}\n\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nCompileMetadataResolver.ctorParameters;\n/** @type {?} */\nCompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleOfTypes;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._schemaRegistry;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveNormalizer;\n/** @type {?} */\nCompileMetadataResolver.prototype._staticSymbolCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._reflector;\n/** @type {?} */\nCompileMetadataResolver.prototype._errorCollector;\n}\n\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n      const /** @type {?} */ item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nexport function componentModuleUrl(\n    reflector: ReflectorReader, type: Type<any>, cmpMetadata: Component): string {\n  if (type instanceof StaticSymbol) {\n    return type.filePath;\n  }\n\n  const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n\n  if (typeof moduleId === 'string') {\n    const /** @type {?} */ scheme = getUrlScheme(moduleId);\n    return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n  } else if (moduleId !== null && moduleId !== void 0) {\n    throw syntaxError(\n        `moduleId should be a string in \"${stringifyType(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n        `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n  }\n\n  return reflector.importUri(type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nvisitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType: Type<any>) {\n  debugger;\n  const /** @type {?} */ error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}