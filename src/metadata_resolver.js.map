{"version":3,"sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","file":"metadata_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateMetadata, AnimationEntryMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationStateDeclarationMetadata, AnimationStateMetadata, AnimationStateTransitionMetadata, AnimationStyleMetadata, AnimationWithStepsMetadata, Attribute, ChangeDetectionStrategy, Component, ComponentFactory, Directive, Host, Inject, Injectable, InjectionToken, ModuleWithProviders, Optional, Provider, Query, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef} from '@angular/core';\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {USE_VIEW_ENGINE} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {stringify} from './facade/lang';\nimport {Identifiers, resolveIdentifier} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {hasLifecycleHook} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ERROR_COMPONENT_TYPE, LIFECYCLE_HOOKS_VALUES, ReflectorReader, reflector, viewEngine} from './private_import_core';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {SummaryResolver} from './summary_resolver';\nimport {getUrlScheme} from './url_resolver';\nimport {MODULE_SUFFIX, ValueTransformer, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n@CompilerInjectable()\nexport class CompileMetadataResolver {\nprivate _nonNormalizedDirectiveCache =\n      new Map<Type<any>, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\nprivate _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\nprivate _summaryCache = new Map<Type<any>, cpl.CompileTypeSummary>();\nprivate _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\nprivate _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\nprivate _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n/**\n * @param {?} _ngModuleResolver\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _summaryResolver\n * @param {?} _schemaRegistry\n * @param {?} _directiveNormalizer\n * @param {?} _staticSymbolCache\n * @param {?=} _reflector\n * @param {?=} _errorCollector\n * @param {?=} _useViewEngine\n */\nconstructor(\nprivate _ngModuleResolver: NgModuleResolver,\nprivate _directiveResolver: DirectiveResolver,\nprivate _pipeResolver: PipeResolver,\nprivate _summaryResolver: SummaryResolver<any>,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _directiveNormalizer: DirectiveNormalizer,\nprivate _staticSymbolCache: StaticSymbolCache,\nprivate _reflector: ReflectorReader = reflector,\nprivate _errorCollector?: ErrorCollector,\nprivate _useViewEngine?: boolean) {}\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n/**\n * @param {?} baseType\n * @param {?} name\n * @return {?}\n */\nprivate _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let /** @type {?} */ delegate: any = null;\n    const /** @type {?} */ proxyClass: cpl.ProxyClass = /** @type {?} */(( <any>function() {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    }));\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      ( /** @type {?} */((<any>proxyClass))).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    ( /** @type {?} */((<any>proxyClass))).overriddenName = name;\n    return proxyClass;\n  }\n/**\n * @param {?} dirType\n * @param {?} name\n * @return {?}\n */\nprivate getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getDirectiveWrapperClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.dirWrapperClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\nprivate getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentType(dirType: any): StaticSymbol|Type<any> {\n    const /** @type {?} */ name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    } else {\n      const /** @type {?} */ HostClass = /** @type {?} */(( <any>function HostClass() {}));\n      HostClass.overriddenName = name;\n\n      return HostClass;\n    }\n  }\n/**\n * @param {?} selector\n * @param {?} dirType\n * @return {?}\n */\nprivate getComponentFactory(selector: string, dirType: any): StaticSymbol|ComponentFactory<any> {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n      if (this._useViewEngine) {\n        return viewEngine.createComponentFactory(selector, dirType, /** @type {?} */(( <any>hostView)));\n      } else {\n        return new ComponentFactory(selector, /** @type {?} */(( <any>hostView)), dirType);\n      }\n    }\n  }\n/**\n * @param {?} entry\n * @return {?}\n */\ngetAnimationEntryMetadata(entry: AnimationEntryMetadata): cpl.CompileAnimationEntryMetadata {\n    const /** @type {?} */ defs = entry.definitions.map(def => this._getAnimationStateMetadata(def));\n    return new cpl.CompileAnimationEntryMetadata(entry.name, defs);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStateMetadata(value: AnimationStateMetadata):\n      cpl.CompileAnimationStateMetadata {\n    if (value instanceof AnimationStateDeclarationMetadata) {\n      const /** @type {?} */ styles = this._getAnimationStyleMetadata(value.styles);\n      return new cpl.CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n    }\n\n    if (value instanceof AnimationStateTransitionMetadata) {\n      return new cpl.CompileAnimationStateTransitionMetadata(\n          value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n    }\n\n    return null;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStyleMetadata(value: AnimationStyleMetadata):\n      cpl.CompileAnimationStyleMetadata {\n    return new cpl.CompileAnimationStyleMetadata(value.offset, value.styles);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationMetadata(value: AnimationMetadata): cpl.CompileAnimationMetadata {\n    if (value instanceof AnimationStyleMetadata) {\n      return this._getAnimationStyleMetadata(value);\n    }\n\n    if (value instanceof AnimationKeyframesSequenceMetadata) {\n      return new cpl.CompileAnimationKeyframesSequenceMetadata(\n          value.steps.map(entry => this._getAnimationStyleMetadata(entry)));\n    }\n\n    if (value instanceof AnimationAnimateMetadata) {\n      const /** @type {?} */ animateData = /** @type {?} */((\n          <cpl.CompileAnimationStyleMetadata|cpl.CompileAnimationKeyframesSequenceMetadata>this\n              ._getAnimationMetadata(value.styles)));\n      return new cpl.CompileAnimationAnimateMetadata(value.timings, animateData);\n    }\n\n    if (value instanceof AnimationWithStepsMetadata) {\n      const /** @type {?} */ steps = value.steps.map(step => this._getAnimationMetadata(step));\n\n      if (value instanceof AnimationGroupMetadata) {\n        return new cpl.CompileAnimationGroupMetadata(steps);\n      }\n\n      return new cpl.CompileAnimationSequenceMetadata(steps);\n    }\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} kind\n * @return {?}\n */\nprivate _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary {\n    let /** @type {?} */ typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n/**\n * @param {?} directiveType\n * @param {?} isSync\n * @return {?}\n */\nprivate _loadDirectiveMetadata(directiveType: any, isSync: boolean): Promise<any> {\n    if (this._directiveCache.has(directiveType)) {\n      return;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = this.getNonNormalizedDirectiveMetadata(directiveType);\n\n    const /** @type {?} */ createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata) => {\n      const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        wrapperType: metadata.wrapperType,\n        componentViewType: metadata.componentViewType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return normalizedDirMeta;\n    };\n\n    if (metadata.isComponent) {\n      const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n        componentType: directiveType,\n        moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n        encapsulation: metadata.template.encapsulation,\n        template: metadata.template.template,\n        templateUrl: metadata.template.templateUrl,\n        styles: metadata.template.styles,\n        styleUrls: metadata.template.styleUrls,\n        animations: metadata.template.animations,\n        interpolation: metadata.template.interpolation\n      });\n      if (templateMeta.syncResult) {\n        createDirectiveMetadata(templateMeta.syncResult);\n        return null;\n      } else {\n        if (isSync) {\n          this._reportError(componentStillLoadingError(directiveType), directiveType);\n          return null;\n        }\n        return templateMeta.asyncResult.then(createDirectiveMetadata);\n      }\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n/**\n * @param {?} directiveType\n * @return {?}\n */\ngetNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata} {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let /** @type {?} */ nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata;\n\n    if (dirMeta instanceof Component) {\n      // component\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const /** @type {?} */ animations = dirMeta.animations ?\n          dirMeta.animations.map(e => this.getAnimationEntryMetadata(e)) :\n          null;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: dirMeta.encapsulation,\n        template: dirMeta.template,\n        templateUrl: dirMeta.templateUrl,\n        styles: dirMeta.styles,\n        styleUrls: dirMeta.styleUrls,\n        animations: animations,\n        interpolation: dirMeta.interpolation\n      });\n    }\n\n    let /** @type {?} */ changeDetectionStrategy: ChangeDetectionStrategy = null;\n    let /** @type {?} */ viewProviders: cpl.CompileProviderMetadata[] = [];\n    let /** @type {?} */ entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let /** @type {?} */ selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = dirMeta.changeDetection;\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                                     .map((type) => this._getEntryComponentMetadata(type))\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let /** @type {?} */ queries: cpl.CompileQueryMetadata[] = [];\n    let /** @type {?} */ viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n      selector: selector,\n      exportAs: dirMeta.exportAs,\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs,\n      outputs: dirMeta.outputs,\n      host: dirMeta.host,\n      providers: providers,\n      viewProviders: viewProviders,\n      queries: queries,\n      viewQueries: viewQueries,\n      entryComponents: entryComponentMetadata,\n      wrapperType: this.getDirectiveWrapperClass(directiveType),\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         undefined,\n      componentFactory: nonNormalizedTemplateMetadata ?\n          this.getComponentFactory(selector, directiveType) :\n          undefined\n    });\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n/**\n * Gets the metadata for the given directive.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} directiveType\n * @return {?}\n */\ngetDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(directiveType);\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: any) { return this._directiveResolver.isDirective(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: any) { return this._pipeResolver.isPipe(type); }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ngetNgModuleSummary(moduleType: any): cpl.CompileNgModuleSummary {\n    let /** @type {?} */ moduleSummary = /** @type {?} */((\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule)));\n    if (!moduleSummary) {\n      const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n/**\n * Loads the declared directives and pipes of an NgModule.\n * @param {?} moduleType\n * @param {?} isSync\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nloadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const /** @type {?} */ promise = this._loadDirectiveMetadata(id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\ngetNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata {\n    moduleType = resolveForwardRef(moduleType);\n    let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const /** @type {?} */ declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ importedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    const /** @type {?} */ entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let /** @type {?} */ importedModuleType: Type<any>;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const /** @type {?} */ moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this._directiveResolver.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this._pipeResolver.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const /** @type {?} */ exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => this._getEntryComponentMetadata(type)));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => this._getEntryComponentMetadata(type.reference)));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, compileMeta.type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getTypeDescriptor(type: Type<any>): string {\n    if (this._directiveResolver.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this._pipeResolver.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this._ngModuleResolver.isNgModule(type)) {\n      return 'module';\n    }\n\n    if (( /** @type {?} */((type as any))).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n/**\n * @param {?} type\n * @param {?} moduleType\n * @return {?}\n */\nprivate _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n/**\n * @param {?} importedModules\n * @param {?} exportedModules\n * @return {?}\n */\nprivate _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n    const /** @type {?} */ modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const /** @type {?} */ addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n        let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const /** @type {?} */ moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getIdentifierMetadata(type: Type<any>): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisInjectable(type: any): boolean {\n    const /** @type {?} */ annotations = this._reflector.annotations(type);\n    // Note: We need an exact check here as @Component / @Directive / ... inherit\n    // from @CompilerInjectable!\n    return annotations.some(ann => ann.constructor === Injectable);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ngetInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {summaryKind: cpl.CompileSummaryKind.Injectable, type: this._getTypeMetadata(type)};\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getInjectableMetadata(type: Type<any>, dependencies: any[] = null):\n      cpl.CompileTypeMetadata {\n    const /** @type {?} */ typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getTypeMetadata(type: Type<any>, dependencies: any[] = null): cpl.CompileTypeMetadata {\n    const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n      lifecycleHooks:\n          LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, identifier.reference)),\n    };\n  }\n/**\n * @param {?} factory\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getFactoryMetadata(factory: Function, dependencies: any[] = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n/**\n * Gets the metadata for the given pipe.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const /** @type {?} */ pipeSummary = /** @type {?} */((\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe)));\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\nprivate _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const /** @type {?} */ pipeAnnotation = this._pipeResolver.resolve(pipeType);\n\n    const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @return {?}\n */\nprivate _getDependenciesMetadata(typeOrFunc: Type<any>|Function, dependencies: any[]):\n      cpl.CompileDiDependencyMetadata[] {\n    let /** @type {?} */ hasUnknownDeps = false;\n    const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const /** @type {?} */ dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let /** @type {?} */ isAttribute = false;\n      let /** @type {?} */ isHost = false;\n      let /** @type {?} */ isSelf = false;\n      let /** @type {?} */ isSkipSelf = false;\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return null;\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const /** @type {?} */ depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n      this._reportError(\n          syntaxError(\n              `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`),\n          typeOrFunc);\n    }\n\n    return dependenciesMetadata;\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let /** @type {?} */ compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n/**\n * @param {?} providers\n * @param {?} targetEntryComponents\n * @param {?=} debugInfo\n * @param {?=} compileProviders\n * @param {?=} type\n * @return {?}\n */\nprivate _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let /** @type {?} */ providerMeta: cpl.ProviderMeta;\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.`));\n        } else {\n          const /** @type {?} */ providersInfo =\n              ( /** @type {?} */((<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n        }\n        if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n/**\n * @param {?} provider\n * @param {?=} type\n * @return {?}\n */\nprivate _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const /** @type {?} */ components: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const /** @type {?} */ entry = this._getEntryComponentMetadata(identifier.reference, false);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n/**\n * @param {?} dirType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nprivate _getEntryComponentMetadata(dirType: any, throwIfNotFound = true):\n      cpl.CompileEntryComponentMetadata {\n    const /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta && dirMeta.metadata.isComponent) {\n      return {componentType: dirType, componentFactory: dirMeta.metadata.componentFactory};\n    } else {\n      const /** @type {?} */ dirSummary = /** @type {?} */((\n          <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n      if (dirSummary && dirSummary.isComponent) {\n        return {componentType: dirType, componentFactory: dirSummary.componentFactory};\n      }\n    }\n\n    if (throwIfNotFound) {\n      throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n    }\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ngetProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let /** @type {?} */ compileDeps: cpl.CompileDiDependencyMetadata[];\n    let /** @type {?} */ compileTypeMetadata: cpl.CompileTypeMetadata = null;\n    let /** @type {?} */ compileFactoryMetadata: cpl.CompileFactoryMetadata = null;\n    let /** @type {?} */ token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n/**\n * @param {?} queries\n * @param {?} isViewQuery\n * @param {?} directiveType\n * @return {?}\n */\nprivate _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const /** @type {?} */ res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const /** @type {?} */ query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n/**\n * @param {?} q\n * @param {?} propertyName\n * @param {?} typeOrFunc\n * @return {?}\n */\nprivate _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let /** @type {?} */ selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n      }\n      selectors = [this._getTokenMetadata(q.selector)];\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null\n    };\n  }\n/**\n * @param {?} error\n * @param {?=} type\n * @param {?=} otherType\n * @return {?}\n */\nprivate _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: SummaryResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: StaticSymbolCache, decorators: [{ type: Optional }, ]},\n{type: ReflectorReader, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [USE_VIEW_ENGINE, ] }, ]},\n];\n}\n\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nCompileMetadataResolver.ctorParameters;\n/** @type {?} */\nCompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleOfTypes;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._schemaRegistry;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveNormalizer;\n/** @type {?} */\nCompileMetadataResolver.prototype._staticSymbolCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._reflector;\n/** @type {?} */\nCompileMetadataResolver.prototype._errorCollector;\n/** @type {?} */\nCompileMetadataResolver.prototype._useViewEngine;\n}\n\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n      const /** @type {?} */ item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nexport function componentModuleUrl(\n    reflector: ReflectorReader, type: Type<any>, cmpMetadata: Component): string {\n  if (type instanceof StaticSymbol) {\n    return type.filePath;\n  }\n\n  const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n\n  if (typeof moduleId === 'string') {\n    const /** @type {?} */ scheme = getUrlScheme(moduleId);\n    return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n  } else if (moduleId !== null && moduleId !== void 0) {\n    throw syntaxError(\n        `moduleId should be a string in \"${stringifyType(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n        `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n  }\n\n  return reflector.importUri(type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nvisitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType: Type<any>) {\n  debugger;\n  const /** @type {?} */ error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}