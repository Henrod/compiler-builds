{"version":3,"sources":["../../../../../modules/@angular/compiler/src/compiler_util/identifier_util.ts"],"names":[],"mappings":"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","file":"identifier_util.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileTokenMetadata} from '../compile_metadata';\nimport {isPresent} from '../facade/lang';\nimport {IdentifierSpec, Identifiers, createEnumIdentifier, createIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\n/**\n * @param {?} token\n * @return {?}\n */\nexport function createDiTokenExpression(token: CompileTokenMetadata): o.Expression {\n  if (isPresent(token.value)) {\n    return o.literal(token.value);\n  } else {\n    return o.importExpr(token.identifier);\n  }\n}\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createInlineArray(values: o.Expression[]): o.Expression {\n  if (values.length === 0) {\n    return o.importExpr(createIdentifier(Identifiers.EMPTY_INLINE_ARRAY));\n  }\n  const /** @type {?} */ log2 = Math.log(values.length) / Math.log(2);\n  const /** @type {?} */ index = Math.ceil(log2);\n  const /** @type {?} */ identifierSpec = index < Identifiers.inlineArrays.length ? Identifiers.inlineArrays[index] :\n                                                                   Identifiers.InlineArrayDynamic;\n  const /** @type {?} */ identifier = createIdentifier(identifierSpec);\n  return o.importExpr(identifier).instantiate([ /** @type {?} */((\n    <o.Expression>o.literal(values.length)))\n  ].concat(values));\n}\n/**\n * @param {?} fn\n * @param {?} argCount\n * @param {?} pureProxyProp\n * @param {?} builder\n * @return {?}\n */\nexport function createPureProxy(\n    fn: o.Expression, argCount: number, pureProxyProp: o.ReadPropExpr,\n    builder: {fields: o.ClassField[], ctorStmts: {push: (stmt: o.Statement) => void}}) {\n  builder.fields.push(new o.ClassField(pureProxyProp.name, null));\n  const /** @type {?} */ pureProxyId =\n      argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n  if (!pureProxyId) {\n    throw new Error(`Unsupported number of argument for pure functions: ${argCount}`);\n  }\n  builder.ctorStmts.push(o.THIS_EXPR.prop(pureProxyProp.name)\n                             .set(o.importExpr(createIdentifier(pureProxyId)).callFn([fn]))\n                             .toStmt());\n}\n/**\n * @param {?} enumType\n * @param {?} enumValue\n * @return {?}\n */\nexport function createEnumExpression(enumType: IdentifierSpec, enumValue: any): o.Expression {\n  const /** @type {?} */ enumName =\n      Object.keys(enumType.runtime).find((propName) => enumType.runtime[propName] === enumValue);\n  if (!enumName) {\n    throw new Error(`Unknown enum value ${enumValue} in ${enumType.name}`);\n  }\n  return o.importExpr(createEnumIdentifier(enumType, enumName));\n}\n"]}