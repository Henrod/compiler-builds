{"version":3,"sources":["../../../../modules/@angular/compiler/src/config.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,cAAE,EAA2C,iBAAA,EAAmB,SAAA,EAAU,MAAA,qBAAA,CAAA;AAGjF,OAAO,EAAA,WAAE,EAAY,gBAAA,EAAiB,MAAA,eAAA,CAAA;AAGtC;;;;;GAKG;AACH,MAAM,CAAC,MAAA,gBAAA,CAAM,eAAA,GAAkB,IAAI,cAAA,CAAuB,eAAE,CAAe,CAAC;AAC5E,MACC;IAOD;;OAEG;IACH,YACM,EAAC,WADC,GAAa,IAAI,kBAAA,EAAmB,EAAG,oBAAA,GAAuB,iBAAA,CAAkB,QAAC,EAElF,YAAY,EADE,gBAAA,EAAkB,MAAA,GAAS,IAAA,EAAM,kBAAA,EAAoB,aAAA,KAQhE,EAAA;QAEN,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IACH;;OAEG;IACH,IAHG,YAAA;QAIC,MAAM,CAHC,IAAA,CAAK,aAAC,KAAiB,KAAK,CAAA,GAAI,SAAA,EAAU,GAAI,IAAA,CAAK,aAAC,CAAa;IAI1E,CAAC;IACH;;OAEG;IACH,IANG,gBAAA;QAOC,MAAM,CANC,IAAA,CAAK,iBAAC,KAAqB,KAAK,CAAA,GAAI,SAAA,EAAU,GAAI,IAAA,CAAK,iBAAC,CAAiB;IAOlF,CAAC;CACF;AAED;IACA,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;IACrC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,oBAAoB,CAAC;IAC9C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IACvC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAC3C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;IAChC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IACvC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;AAC5C,CAAC;AAED;;;;;GAKG;AACH,MAxBC;IAyBD;;;OAGG;IACH,QA5BgB,KAAA,CAAA;IA6BhB;;;OAGG;IACH,UAhCgB,KAAA,CAAA;IAiChB;;;OAGG;IACH,aApCgB,KAAA,CAAA;IAqChB;;;OAGG;IACH,aAxCgB,KAAA,CAAA;IAyChB;;;OAGG;IACH,UA5CgB,KAAA,CAAA;IA6ChB;;;OAGG;IACH,WAhDgB,KAAA,CAAA;CAiDf;AACD,MA/CC;IA+CD;QAKE,eAAU,GAlDQ,IAAA,CAAK;QAmDvB,kBAAa,GAlDQ,IAAA,CAAK;QAmD1B,kBAAa,GAlDQ,IAAA,CAAK;QAmD1B,eAAU,GAlDQ,IAAA,CAAK;QAmDvB,gBAAW,GAlDQ,IAAA,CAAK;IAmD1B,CAAC;IATD;;OAEG;IACH,IAlDG,QAAA,KAAgB,MAAA,CAAO,gBAAA,CAAiB,WAAC,CAAW,QAAC,CAAQ,CAAC,CAAC,CAAA;IAAA,CAAE;CAwDnE;AAED;IACA,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,aAAa,CAAC;IAC3C,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,aAAa,CAAC;IAC3C,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;AACzC,CAAC","file":"config.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, MissingTranslationStrategy, ViewEncapsulation, isDevMode} from '@angular/core/index';\n\nimport {CompileIdentifierMetadata} from './compile_metadata';\nimport {Identifiers, createIdentifier} from './identifiers';\n\n\n/**\n * Temporal switch for the compiler to use the new view engine,\n * until it is fully integrated.\n *\n * Only works in Jit for now.\n */\nexport const /** @type {?} */ USE_VIEW_ENGINE = new InjectionToken<boolean>('UseViewEngine');\nexport class CompilerConfig {\npublic renderTypes: RenderTypes;\npublic defaultEncapsulation: ViewEncapsulation;\nprivate _genDebugInfo: boolean;\nprivate _logBindingUpdate: boolean;\npublic useJit: boolean;\npublic useViewEngine: boolean;\npublic missingTranslation: MissingTranslationStrategy;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {renderTypes = new DefaultRenderTypes(), defaultEncapsulation = ViewEncapsulation.Emulated,\n       genDebugInfo, logBindingUpdate, useJit = true, missingTranslation, useViewEngine}: {\n        renderTypes?: RenderTypes,\n        defaultEncapsulation?: ViewEncapsulation,\n        genDebugInfo?: boolean,\n        logBindingUpdate?: boolean,\n        useJit?: boolean,\n        missingTranslation?: MissingTranslationStrategy,\n        useViewEngine?: boolean\n      } = {}) {\n    this.renderTypes = renderTypes;\n    this.defaultEncapsulation = defaultEncapsulation;\n    this._genDebugInfo = genDebugInfo;\n    this._logBindingUpdate = logBindingUpdate;\n    this.useJit = useJit;\n    this.missingTranslation = missingTranslation;\n    this.useViewEngine = useViewEngine;\n  }\n/**\n * @return {?}\n */\nget genDebugInfo(): boolean {\n    return this._genDebugInfo === void 0 ? isDevMode() : this._genDebugInfo;\n  }\n/**\n * @return {?}\n */\nget logBindingUpdate(): boolean {\n    return this._logBindingUpdate === void 0 ? isDevMode() : this._logBindingUpdate;\n  }\n}\n\nfunction CompilerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nCompilerConfig.prototype.renderTypes;\n/** @type {?} */\nCompilerConfig.prototype.defaultEncapsulation;\n/** @type {?} */\nCompilerConfig.prototype._genDebugInfo;\n/** @type {?} */\nCompilerConfig.prototype._logBindingUpdate;\n/** @type {?} */\nCompilerConfig.prototype.useJit;\n/** @type {?} */\nCompilerConfig.prototype.useViewEngine;\n/** @type {?} */\nCompilerConfig.prototype.missingTranslation;\n}\n\n/**\n * Types used for the renderer.\n * Can be replaced to specialize the generated output to a specific renderer\n * to help tree shaking.\n * @abstract\n */\nexport abstract class RenderTypes {\n/**\n * @abstract\n * @return {?}\n */\nrenderer() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderText() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderComment() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderEvent() {}\n}\nexport class DefaultRenderTypes implements RenderTypes {\n/**\n * @return {?}\n */\nget renderer() { return createIdentifier(Identifiers.Renderer); };\n  renderText: any = null;\n  renderElement: any = null;\n  renderComment: any = null;\n  renderNode: any = null;\n  renderEvent: any = null;\n}\n\nfunction DefaultRenderTypes_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultRenderTypes.prototype.renderText;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderElement;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderComment;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderNode;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderEvent;\n}\n\n"]}