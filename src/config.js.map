{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/config.ts"],"names":[],"mappings":";AAAA,qBAAgC,eAAe,CAAC,CAAA;AAEhD,2BAA4B,0BAA0B,CAAC,CAAA;AACvD,qBAAsB,oBAAoB,CAAC,CAAA;AAG3C,4BAA0B,eAAe,CAAC,CAAA;AAE1C;IAIE,wBACW,YAAqB,EAAS,gBAAyB,EAAS,MAAe,EACtF,WAA+B,EAAE,oBAA8C;QAA/E,2BAA+B,GAA/B,kBAA+B;QAAE,oCAA8C,GAA9C,2BAA8C;QADxE,iBAAY,GAAZ,YAAY,CAAS;QAAS,qBAAgB,GAAhB,gBAAgB,CAAS;QAAS,WAAM,GAAN,MAAM,CAAS;QAExF,EAAE,CAAC,CAAC,cAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzB,WAAW,GAAG,IAAI,kBAAkB,EAAE,CAAC;QACzC,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,EAAE,CAAC,CAAC,cAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAClC,oBAAoB,GAAG,wBAAiB,CAAC,QAAQ,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IACnD,CAAC;IACH,qBAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,sBAAc,iBAgB1B,CAAA;AAED;;;;GAIG;AACH;IAAA;IAOA,CAAC;IANC,sBAAI,iCAAQ;aAAZ,cAA4C,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IACrE,sBAAI,mCAAU;aAAd,cAA8C,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IACvE,sBAAI,sCAAa;aAAjB,cAAiD,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAC1E,sBAAI,sCAAa;aAAjB,cAAiD,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAC1E,sBAAI,mCAAU;aAAd,cAA8C,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IACvE,sBAAI,oCAAW;aAAf,cAA+C,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAC1E,kBAAC;AAAD,CAAC,AAPD,IAOC;AAPqB,mBAAW,cAOhC,CAAA;AAED;IAAA;QACE,aAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC;QAChC,eAAU,GAA0B,IAAI,CAAC;QACzC,kBAAa,GAA0B,IAAI,CAAC;QAC5C,kBAAa,GAA0B,IAAI,CAAC;QAC5C,eAAU,GAA0B,IAAI,CAAC;QACzC,gBAAW,GAA0B,IAAI,CAAC;IAC5C,CAAC;IAAD,yBAAC;AAAD,CAAC,AAPD,IAOC;AAPY,0BAAkB,qBAO9B,CAAA","sourcesContent":["import {ViewEncapsulation} from '@angular/core';\n\nimport {unimplemented} from '../src/facade/exceptions';\nimport {isBlank} from '../src/facade/lang';\n\nimport {CompileIdentifierMetadata} from './compile_metadata';\nimport {Identifiers} from './identifiers';\n\nexport class CompilerConfig {\n  public renderTypes: RenderTypes;\n  public defaultEncapsulation: ViewEncapsulation;\n\n  constructor(\n      public genDebugInfo: boolean, public logBindingUpdate: boolean, public useJit: boolean,\n      renderTypes: RenderTypes = null, defaultEncapsulation: ViewEncapsulation = null) {\n    if (isBlank(renderTypes)) {\n      renderTypes = new DefaultRenderTypes();\n    }\n    this.renderTypes = renderTypes;\n    if (isBlank(defaultEncapsulation)) {\n      defaultEncapsulation = ViewEncapsulation.Emulated;\n    }\n    this.defaultEncapsulation = defaultEncapsulation;\n  }\n}\n\n/**\n * Types used for the renderer.\n * Can be replaced to specialize the generated output to a specific renderer\n * to help tree shaking.\n */\nexport abstract class RenderTypes {\n  get renderer(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderText(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderElement(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderComment(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderNode(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderEvent(): CompileIdentifierMetadata { return unimplemented(); }\n}\n\nexport class DefaultRenderTypes implements RenderTypes {\n  renderer = Identifiers.Renderer;\n  renderText: any /** TODO #9100 */ = null;\n  renderElement: any /** TODO #9100 */ = null;\n  renderComment: any /** TODO #9100 */ = null;\n  renderNode: any /** TODO #9100 */ = null;\n  renderEvent: any /** TODO #9100 */ = null;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}