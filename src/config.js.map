{"version":3,"sources":["../../../../modules/@angular/compiler/src/config.ts"],"names":[],"mappings":"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","file":"config.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ViewEncapsulation, isDevMode} from '@angular/core';\n\nimport {CompileIdentifierMetadata} from './compile_metadata';\nimport {Identifiers, createIdentifier} from './identifiers';\nexport class CompilerConfig {\npublic renderTypes: RenderTypes;\npublic defaultEncapsulation: ViewEncapsulation;\nprivate _genDebugInfo: boolean;\nprivate _logBindingUpdate: boolean;\npublic useJit: boolean;\npublic missingTranslation: MissingTranslationStrategy;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {renderTypes = new DefaultRenderTypes(), defaultEncapsulation = ViewEncapsulation.Emulated,\n       genDebugInfo, logBindingUpdate, useJit = true, missingTranslation}: {\n        renderTypes?: RenderTypes,\n        defaultEncapsulation?: ViewEncapsulation,\n        genDebugInfo?: boolean,\n        logBindingUpdate?: boolean,\n        useJit?: boolean,\n        missingTranslation?: MissingTranslationStrategy,\n      } = {}) {\n    this.renderTypes = renderTypes;\n    this.defaultEncapsulation = defaultEncapsulation;\n    this._genDebugInfo = genDebugInfo;\n    this._logBindingUpdate = logBindingUpdate;\n    this.useJit = useJit;\n    this.missingTranslation = missingTranslation;\n  }\n/**\n * @return {?}\n */\nget genDebugInfo(): boolean {\n    return this._genDebugInfo === void 0 ? isDevMode() : this._genDebugInfo;\n  }\n/**\n * @return {?}\n */\nget logBindingUpdate(): boolean {\n    return this._logBindingUpdate === void 0 ? isDevMode() : this._logBindingUpdate;\n  }\n}\n\nfunction CompilerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nCompilerConfig.prototype.renderTypes;\n/** @type {?} */\nCompilerConfig.prototype.defaultEncapsulation;\n/** @type {?} */\nCompilerConfig.prototype._genDebugInfo;\n/** @type {?} */\nCompilerConfig.prototype._logBindingUpdate;\n/** @type {?} */\nCompilerConfig.prototype.useJit;\n/** @type {?} */\nCompilerConfig.prototype.missingTranslation;\n}\n\n/**\n * Types used for the renderer.\n * Can be replaced to specialize the generated output to a specific renderer\n * to help tree shaking.\n * @abstract\n */\nexport abstract class RenderTypes {\n/**\n * @abstract\n * @return {?}\n */\nrenderer() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderText() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderComment() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderEvent() {}\n}\nexport class DefaultRenderTypes implements RenderTypes {\n/**\n * @return {?}\n */\nget renderer() { return createIdentifier(Identifiers.Renderer); };\n  renderText: any = null;\n  renderElement: any = null;\n  renderComment: any = null;\n  renderNode: any = null;\n  renderEvent: any = null;\n}\n\nfunction DefaultRenderTypes_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultRenderTypes.prototype.renderText;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderElement;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderComment;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderNode;\n/** @type {?} */\nDefaultRenderTypes.prototype.renderEvent;\n}\n\n"]}