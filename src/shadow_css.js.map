{"version":3,"sources":["../../../../modules/@angular/compiler/src/shadow_css.ts"],"names":[],"mappings":"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","file":"shadow_css.js","sourceRoot":"","sourcesContent":["\nexport class ShadowCss {\n  strictStyling: boolean = true;\nconstructor() {}\n/**\n * @param {?} cssText\n * @param {?} selector\n * @param {?=} hostSelector\n * @return {?}\n */\nshimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    const /** @type {?} */ sourceMappingUrl: string = extractSourceMappingUrl(cssText);\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n    return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(\n        _cssContentNextSelectorRe, function(...m: string[]) { return m[2] + '{'; });\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(_cssContentRuleRe, (...m: string[]) => {\n      const /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n      return m[4] + rule;\n    });\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    const /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (scopeSelector) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscopedRules;\n    return cssText.trim();\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    let /** @type {?} */ r = '';\n    let /** @type {?} */ m: RegExpExecArray;\n    _cssContentUnscopedRuleRe.lastIndex = 0;\n    while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n      const /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(\n        cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @param {?} regExp\n * @param {?} partReplacer\n * @return {?}\n */\nprivate _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function(...m: string[]) {\n      if (m[2]) {\n        const /** @type {?} */ parts = m[2].split(',');\n        const /** @type {?} */ r: string[] = [];\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n          const /** @type {?} */ p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\nprivate _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\nprivate _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertShadowDOMSelectors(cssText: string): string {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      let /** @type {?} */ selector = rule.selector;\n      let /** @type {?} */ content = rule.content;\n      if (rule.selector[0] != '@') {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (\n          rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n          rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @param {?} strict\n * @return {?}\n */\nprivate _scopeSelector(\n      selector: string, scopeSelector: string, hostSelector: string, strict: boolean): string {\n    return selector.split(',')\n        .map(part => part.trim().split(_shadowDeepSelectors))\n        .map((deepParts) => {\n          const [shallowPart, ...otherParts] = deepParts;\n          const /** @type {?} */ applyScope = (shallowPart: string) => {\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n              return strict ?\n                  this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                  this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n            } else {\n              return shallowPart;\n            }\n          };\n          return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n        .join(', ');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    const /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n  }\n/**\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _makeScopeMatcher(scopeSelector: string): RegExp {\n    const /** @type {?} */ lre = /\\[/g;\n    const /** @type {?} */ rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applySelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applySimpleSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n      const /** @type {?} */ replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      return selector\n          .replace(\n              _polyfillHostNoCombinatorRe,\n              (hnc, selector) => {\n                return selector.replace(\n                    /([^:]*)(:*)(.*)/,\n                    (_: string, before: string, colon: string, after: string) => {\n                      return before + replaceBy + colon + after;\n                    });\n              })\n          .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applyStrictSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    const /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_: string, ...parts: string[]) => parts[0]);\n\n    const /** @type {?} */ attrName = '[' + scopeSelector + ']';\n\n    const /** @type {?} */ _scopeSelectorPart = (p: string) => {\n      let /** @type {?} */ scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        const /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n        if (t.length > 0) {\n          const /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n          if (matches) {\n            scopedP = matches[1] + attrName + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    const /** @type {?} */ safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n\n    let /** @type {?} */ scopedSelector = '';\n    let /** @type {?} */ startIndex = 0;\n    let /** @type {?} */ res: RegExpExecArray;\n    const /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n    const /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n\n    while ((res = sep.exec(selector)) !== null) {\n      const /** @type {?} */ separator = res[1];\n      const /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n      // if a selector appears before :host-context it should not be shimmed as it\n      // matches on ancestor elements and not on elements in the host's shadow\n      const /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n      scopedSelector += `${scopedPart} ${separator} `;\n      startIndex = sep.lastIndex;\n    }\n\n    scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n\n    // replace the placeholders with their original values\n    return safeContent.restore(scopedSelector);\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _insertPolyfillHostInCssText(selector: string): string {\n    return selector.replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost);\n  }\n}\n\nfunction ShadowCss_tsickle_Closure_declarations() {\n/** @type {?} */\nShadowCss.prototype.strictStyling;\n}\n\nclass SafeSelector {\nprivate placeholders: string[] = [];\nprivate index = 0;\nprivate _content: string;\n/**\n * @param {?} selector\n */\nconstructor(selector: string) {\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(keep);\n      this.index++;\n      return replaceBy;\n    });\n\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(exp);\n      this.index++;\n      return pseudo + replaceBy;\n    });\n  };\n/**\n * @param {?} content\n * @return {?}\n */\nrestore(content: string): string {\n    return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n  }\n/**\n * @return {?}\n */\ncontent(): string { return this._content; }\n}\n\nfunction SafeSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeSelector.prototype.placeholders;\n/** @type {?} */\nSafeSelector.prototype.index;\n/** @type {?} */\nSafeSelector.prototype._content;\n}\n\n\nconst /** @type {?} */ _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\nconst /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst /** @type {?} */ _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst /** @type {?} */ _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst /** @type {?} */ _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst /** @type {?} */ _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  /\\/shadow-deep\\//g,\n  /\\/shadow\\//g,\n];\nconst /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nconst /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst /** @type {?} */ _polyfillHostRe = /-shadowcsshost/gim;\nconst /** @type {?} */ _colonHostRe = /:host/gim;\nconst /** @type {?} */ _colonHostContextRe = /:host-context/gim;\n\nconst /** @type {?} */ _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input: string): string {\n  return input.replace(_commentRe, '');\n}\n\n// all comments except inline source mapping\nconst /** @type {?} */ _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input: string): string {\n  const /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n  return matcher ? matcher[0] : '';\n}\n\nconst /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst /** @type {?} */ _curlyRe = /([{}])/g;\nconst /** @type {?} */ OPEN_CURLY = '{';\nconst /** @type {?} */ CLOSE_CURLY = '}';\nconst /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\nexport class CssRule {\n/**\n * @param {?} selector\n * @param {?} content\n */\nconstructor(public selector: string,\npublic content: string) {}\n}\n\nfunction CssRule_tsickle_Closure_declarations() {\n/** @type {?} */\nCssRule.prototype.selector;\n/** @type {?} */\nCssRule.prototype.content;\n}\n\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string {\n  const /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n  let /** @type {?} */ nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function(...m: string[]) {\n    const /** @type {?} */ selector = m[2];\n    let /** @type {?} */ content = '';\n    let /** @type {?} */ suffix = m[4];\n    let /** @type {?} */ contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    const /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\nclass StringWithEscapedBlocks {\n/**\n * @param {?} escapedString\n * @param {?} blocks\n */\nconstructor(public escapedString: string,\npublic blocks: string[]) {}\n}\n\nfunction StringWithEscapedBlocks_tsickle_Closure_declarations() {\n/** @type {?} */\nStringWithEscapedBlocks.prototype.escapedString;\n/** @type {?} */\nStringWithEscapedBlocks.prototype.blocks;\n}\n\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input: string): StringWithEscapedBlocks {\n  const /** @type {?} */ inputParts = input.split(_curlyRe);\n  const /** @type {?} */ resultParts: string[] = [];\n  const /** @type {?} */ escapedBlocks: string[] = [];\n  let /** @type {?} */ bracketCount = 0;\n  let /** @type {?} */ currentBlockParts: string[] = [];\n  for (let /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const /** @type {?} */ part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n"]}