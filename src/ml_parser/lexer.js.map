{"version":3,"sources":["../../../../../modules/@angular/compiler/src/ml_parser/lexer.ts"],"names":[],"mappings":"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","file":"lexer.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan} from '../parse_util';\n\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport {NAMED_ENTITIES, TagContentType, TagDefinition} from './tags';\nexport type TokenType = number;\nexport let TokenType: any = {};\nTokenType.TAG_OPEN_START = 0;\nTokenType.TAG_OPEN_END = 1;\nTokenType.TAG_OPEN_END_VOID = 2;\nTokenType.TAG_CLOSE = 3;\nTokenType.TEXT = 4;\nTokenType.ESCAPABLE_RAW_TEXT = 5;\nTokenType.RAW_TEXT = 6;\nTokenType.COMMENT_START = 7;\nTokenType.COMMENT_END = 8;\nTokenType.CDATA_START = 9;\nTokenType.CDATA_END = 10;\nTokenType.ATTR_NAME = 11;\nTokenType.ATTR_VALUE = 12;\nTokenType.DOC_TYPE = 13;\nTokenType.EXPANSION_FORM_START = 14;\nTokenType.EXPANSION_CASE_VALUE = 15;\nTokenType.EXPANSION_CASE_EXP_START = 16;\nTokenType.EXPANSION_CASE_EXP_END = 17;\nTokenType.EXPANSION_FORM_END = 18;\nTokenType.EOF = 19;\nTokenType[TokenType.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType[TokenType.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType[TokenType.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType[TokenType.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType[TokenType.TEXT] = \"TEXT\";\nTokenType[TokenType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType[TokenType.RAW_TEXT] = \"RAW_TEXT\";\nTokenType[TokenType.COMMENT_START] = \"COMMENT_START\";\nTokenType[TokenType.COMMENT_END] = \"COMMENT_END\";\nTokenType[TokenType.CDATA_START] = \"CDATA_START\";\nTokenType[TokenType.CDATA_END] = \"CDATA_END\";\nTokenType[TokenType.ATTR_NAME] = \"ATTR_NAME\";\nTokenType[TokenType.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType[TokenType.DOC_TYPE] = \"DOC_TYPE\";\nTokenType[TokenType.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType[TokenType.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType[TokenType.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType[TokenType.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType[TokenType.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType[TokenType.EOF] = \"EOF\";\n\nexport class Token {\n/**\n * @param {?} type\n * @param {?} parts\n * @param {?} sourceSpan\n */\nconstructor(public type: TokenType,\npublic parts: string[],\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction Token_tsickle_Closure_declarations() {\n/** @type {?} */\nToken.prototype.type;\n/** @type {?} */\nToken.prototype.parts;\n/** @type {?} */\nToken.prototype.sourceSpan;\n}\n\nexport class TokenError extends ParseError {\n/**\n * @param {?} errorMsg\n * @param {?} tokenType\n * @param {?} span\n */\nconstructor(errorMsg: string,\npublic tokenType: TokenType, span: ParseSourceSpan) {\n    super(span, errorMsg);\n  }\n}\n\nfunction TokenError_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenError.prototype.tokenType;\n}\n\nexport class TokenizeResult {\n/**\n * @param {?} tokens\n * @param {?} errors\n */\nconstructor(public tokens: Token[],\npublic errors: TokenError[]) {}\n}\n\nfunction TokenizeResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenizeResult.prototype.tokens;\n/** @type {?} */\nTokenizeResult.prototype.errors;\n}\n\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nexport function tokenize(\n    source: string, url: string, getTagDefinition: (tagName: string) => TagDefinition,\n    tokenizeExpansionForms: boolean = false,\n    interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): TokenizeResult {\n  return new _Tokenizer(\n             new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms,\n             interpolationConfig)\n      .tokenize();\n}\n\nconst /** @type {?} */ _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode: number): string {\n  const /** @type {?} */ char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n  return `Unexpected character \"${char}\"`;\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc: string): string {\n  return `Unknown entity \"${entitySrc}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`;\n}\nclass _ControlFlowError {\n/**\n * @param {?} error\n */\nconstructor(public error: TokenError) {}\n}\n\nfunction _ControlFlowError_tsickle_Closure_declarations() {\n/** @type {?} */\n_ControlFlowError.prototype.error;\n}\n\nclass _Tokenizer {\nprivate _input: string;\nprivate _length: number;\nprivate _peek: number = -1;\nprivate _nextPeek: number = -1;\nprivate _index: number = -1;\nprivate _line: number = 0;\nprivate _column: number = -1;\nprivate _currentTokenStart: ParseLocation;\nprivate _currentTokenType: TokenType;\nprivate _expansionCaseStack: TokenType[] = [];\nprivate _inInterpolation: boolean = false;\n\n  tokens: Token[] = [];\n  errors: TokenError[] = [];\n/**\n * @param {?} _file The html source\n * @param {?} _getTagDefinition\n * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n * @param {?=} _interpolationConfig\n */\nconstructor(\nprivate _file: ParseSourceFile,\nprivate _getTagDefinition: (tagName: string) => TagDefinition,\nprivate _tokenizeIcu: boolean,\nprivate _interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n    this._input = _file.content;\n    this._length = _file.content.length;\n    this._advance();\n  }\n/**\n * @param {?} content\n * @return {?}\n */\nprivate _processCarriageReturns(content: string): string {\n    // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n    // In order to keep the original position in the source, we can not\n    // pre-process it.\n    // Instead CRs are processed right before instantiating the tokens.\n    return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n  }\n/**\n * @return {?}\n */\ntokenize(): TokenizeResult {\n    while (this._peek !== chars.$EOF) {\n      const /** @type {?} */ start = this._getLocation();\n      try {\n        if (this._attemptCharCode(chars.$LT)) {\n          if (this._attemptCharCode(chars.$BANG)) {\n            if (this._attemptCharCode(chars.$LBRACKET)) {\n              this._consumeCdata(start);\n            } else if (this._attemptCharCode(chars.$MINUS)) {\n              this._consumeComment(start);\n            } else {\n              this._consumeDocType(start);\n            }\n          } else if (this._attemptCharCode(chars.$SLASH)) {\n            this._consumeTagClose(start);\n          } else {\n            this._consumeTagOpen(start);\n          }\n        } else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n          this._consumeText();\n        }\n      } catch ( /** @type {?} */e) {\n        if (e instanceof _ControlFlowError) {\n          this.errors.push(e.error);\n        } else {\n          throw e;\n        }\n      }\n    }\n    this._beginToken(TokenType.EOF);\n    this._endToken([]);\n    return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n  }\n/**\n * \\@internal\n * @return {?}\n */\nprivate _tokenizeExpansionForm(): boolean {\n    if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n      this._consumeExpansionFormStart();\n      return true;\n    }\n\n    if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n      this._consumeExpansionCaseStart();\n      return true;\n    }\n\n    if (this._peek === chars.$RBRACE) {\n      if (this._isInExpansionCase()) {\n        this._consumeExpansionCaseEnd();\n        return true;\n      }\n\n      if (this._isInExpansionForm()) {\n        this._consumeExpansionFormEnd();\n        return true;\n      }\n    }\n\n    return false;\n  }\n/**\n * @return {?}\n */\nprivate _getLocation(): ParseLocation {\n    return new ParseLocation(this._file, this._index, this._line, this._column);\n  }\n/**\n * @param {?=} start\n * @param {?=} end\n * @return {?}\n */\nprivate _getSpan(\n      start: ParseLocation = this._getLocation(),\n      end: ParseLocation = this._getLocation()): ParseSourceSpan {\n    return new ParseSourceSpan(start, end);\n  }\n/**\n * @param {?} type\n * @param {?=} start\n * @return {?}\n */\nprivate _beginToken(type: TokenType, start: ParseLocation = this._getLocation()) {\n    this._currentTokenStart = start;\n    this._currentTokenType = type;\n  }\n/**\n * @param {?} parts\n * @param {?=} end\n * @return {?}\n */\nprivate _endToken(parts: string[], end: ParseLocation = this._getLocation()): Token {\n    const /** @type {?} */ token =\n        new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n    this.tokens.push(token);\n    this._currentTokenStart = null;\n    this._currentTokenType = null;\n    return token;\n  }\n/**\n * @param {?} msg\n * @param {?} span\n * @return {?}\n */\nprivate _createError(msg: string, span: ParseSourceSpan): _ControlFlowError {\n    if (this._isInExpansionForm()) {\n      msg += ` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`;\n    }\n    const /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n    this._currentTokenStart = null;\n    this._currentTokenType = null;\n    return new _ControlFlowError(error);\n  }\n/**\n * @return {?}\n */\nprivate _advance() {\n    if (this._index >= this._length) {\n      throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n    }\n    if (this._peek === chars.$LF) {\n      this._line++;\n      this._column = 0;\n    } else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n      this._column++;\n    }\n    this._index++;\n    this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n    this._nextPeek =\n        this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\nprivate _attemptCharCode(charCode: number): boolean {\n    if (this._peek === charCode) {\n      this._advance();\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\nprivate _attemptCharCodeCaseInsensitive(charCode: number): boolean {\n    if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n      this._advance();\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\nprivate _requireCharCode(charCode: number) {\n    const /** @type {?} */ location = this._getLocation();\n    if (!this._attemptCharCode(charCode)) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n    }\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate _attemptStr(chars: string): boolean {\n    const /** @type {?} */ len = chars.length;\n    if (this._index + len > this._length) {\n      return false;\n    }\n    const /** @type {?} */ initialPosition = this._savePosition();\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n      if (!this._attemptCharCode(chars.charCodeAt(i))) {\n        // If attempting to parse the string fails, we want to reset the parser\n        // to where it was before the attempt\n        this._restorePosition(initialPosition);\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate _attemptStrCaseInsensitive(chars: string): boolean {\n    for (let /** @type {?} */ i = 0; i < chars.length; i++) {\n      if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate _requireStr(chars: string) {\n    const /** @type {?} */ location = this._getLocation();\n    if (!this._attemptStr(chars)) {\n      throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nprivate _attemptCharCodeUntilFn(predicate: (code: number) => boolean) {\n    while (!predicate(this._peek)) {\n      this._advance();\n    }\n  }\n/**\n * @param {?} predicate\n * @param {?} len\n * @return {?}\n */\nprivate _requireCharCodeUntilFn(predicate: (code: number) => boolean, len: number) {\n    const /** @type {?} */ start = this._getLocation();\n    this._attemptCharCodeUntilFn(predicate);\n    if (this._index - start.offset < len) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n    }\n  }\n/**\n * @param {?} char\n * @return {?}\n */\nprivate _attemptUntilChar(char: number) {\n    while (this._peek !== char) {\n      this._advance();\n    }\n  }\n/**\n * @param {?} decodeEntities\n * @return {?}\n */\nprivate _readChar(decodeEntities: boolean): string {\n    if (decodeEntities && this._peek === chars.$AMPERSAND) {\n      return this._decodeEntity();\n    } else {\n      const /** @type {?} */ index = this._index;\n      this._advance();\n      return this._input[index];\n    }\n  }\n/**\n * @return {?}\n */\nprivate _decodeEntity(): string {\n    const /** @type {?} */ start = this._getLocation();\n    this._advance();\n    if (this._attemptCharCode(chars.$HASH)) {\n      const /** @type {?} */ isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n      const /** @type {?} */ numberStart = this._getLocation().offset;\n      this._attemptCharCodeUntilFn(isDigitEntityEnd);\n      if (this._peek != chars.$SEMICOLON) {\n        throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n      }\n      this._advance();\n      const /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n      try {\n        const /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n        return String.fromCharCode(charCode);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n        throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n      }\n    } else {\n      const /** @type {?} */ startPosition = this._savePosition();\n      this._attemptCharCodeUntilFn(isNamedEntityEnd);\n      if (this._peek != chars.$SEMICOLON) {\n        this._restorePosition(startPosition);\n        return '&';\n      }\n      this._advance();\n      const /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n      const /** @type {?} */ char = NAMED_ENTITIES[name];\n      if (!char) {\n        throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n      }\n      return char;\n    }\n  }\n/**\n * @param {?} decodeEntities\n * @param {?} firstCharOfEnd\n * @param {?} attemptEndRest\n * @return {?}\n */\nprivate _consumeRawText(\n      decodeEntities: boolean, firstCharOfEnd: number, attemptEndRest: () => boolean): Token {\n    let /** @type {?} */ tagCloseStart: ParseLocation;\n    const /** @type {?} */ textStart = this._getLocation();\n    this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n    const /** @type {?} */ parts: string[] = [];\n    while (true) {\n      tagCloseStart = this._getLocation();\n      if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n        break;\n      }\n      if (this._index > tagCloseStart.offset) {\n        // add the characters consumed by the previous if statement to the output\n        parts.push(this._input.substring(tagCloseStart.offset, this._index));\n      }\n      while (this._peek !== firstCharOfEnd) {\n        parts.push(this._readChar(decodeEntities));\n      }\n    }\n    return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeComment(start: ParseLocation) {\n    this._beginToken(TokenType.COMMENT_START, start);\n    this._requireCharCode(chars.$MINUS);\n    this._endToken([]);\n    const /** @type {?} */ textToken = this._consumeRawText(false, chars.$MINUS, () => this._attemptStr('->'));\n    this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeCdata(start: ParseLocation) {\n    this._beginToken(TokenType.CDATA_START, start);\n    this._requireStr('CDATA[');\n    this._endToken([]);\n    const /** @type {?} */ textToken = this._consumeRawText(false, chars.$RBRACKET, () => this._attemptStr(']>'));\n    this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeDocType(start: ParseLocation) {\n    this._beginToken(TokenType.DOC_TYPE, start);\n    this._attemptUntilChar(chars.$GT);\n    this._advance();\n    this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n  }\n/**\n * @return {?}\n */\nprivate _consumePrefixAndName(): string[] {\n    const /** @type {?} */ nameOrPrefixStart = this._index;\n    let /** @type {?} */ prefix: string = null;\n    while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n      this._advance();\n    }\n    let /** @type {?} */ nameStart: number;\n    if (this._peek === chars.$COLON) {\n      this._advance();\n      prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n      nameStart = this._index;\n    } else {\n      nameStart = nameOrPrefixStart;\n    }\n    this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n    const /** @type {?} */ name = this._input.substring(nameStart, this._index);\n    return [prefix, name];\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeTagOpen(start: ParseLocation) {\n    const /** @type {?} */ savedPos = this._savePosition();\n    let /** @type {?} */ tagName: string;\n    let /** @type {?} */ lowercaseTagName: string;\n    try {\n      if (!chars.isAsciiLetter(this._peek)) {\n        throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n      }\n      const /** @type {?} */ nameStart = this._index;\n      this._consumeTagOpenStart(start);\n      tagName = this._input.substring(nameStart, this._index);\n      lowercaseTagName = tagName.toLowerCase();\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n        this._consumeAttributeName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        if (this._attemptCharCode(chars.$EQ)) {\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._consumeAttributeValue();\n        }\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n      }\n      this._consumeTagOpenEnd();\n    } catch ( /** @type {?} */e) {\n      if (e instanceof _ControlFlowError) {\n        // When the start tag is invalid, assume we want a \"<\"\n        this._restorePosition(savedPos);\n        // Back to back text tokens are merged at the end\n        this._beginToken(TokenType.TEXT, start);\n        this._endToken(['<']);\n        return;\n      }\n\n      throw e;\n    }\n\n    const /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n\n    if (contentTokenType === TagContentType.RAW_TEXT) {\n      this._consumeRawTextWithTagClose(lowercaseTagName, false);\n    } else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n      this._consumeRawTextWithTagClose(lowercaseTagName, true);\n    }\n  }\n/**\n * @param {?} lowercaseTagName\n * @param {?} decodeEntities\n * @return {?}\n */\nprivate _consumeRawTextWithTagClose(lowercaseTagName: string, decodeEntities: boolean) {\n    const /** @type {?} */ textToken = this._consumeRawText(decodeEntities, chars.$LT, () => {\n      if (!this._attemptCharCode(chars.$SLASH)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      if (!this._attemptStrCaseInsensitive(lowercaseTagName)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      return this._attemptCharCode(chars.$GT);\n    });\n    this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n    this._endToken([null, lowercaseTagName]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeTagOpenStart(start: ParseLocation) {\n    this._beginToken(TokenType.TAG_OPEN_START, start);\n    const /** @type {?} */ parts = this._consumePrefixAndName();\n    this._endToken(parts);\n  }\n/**\n * @return {?}\n */\nprivate _consumeAttributeName() {\n    this._beginToken(TokenType.ATTR_NAME);\n    const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n    this._endToken(prefixAndName);\n  }\n/**\n * @return {?}\n */\nprivate _consumeAttributeValue() {\n    this._beginToken(TokenType.ATTR_VALUE);\n    let /** @type {?} */ value: string;\n    if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n      const /** @type {?} */ quoteChar = this._peek;\n      this._advance();\n      const /** @type {?} */ parts: string[] = [];\n      while (this._peek !== quoteChar) {\n        parts.push(this._readChar(true));\n      }\n      value = parts.join('');\n      this._advance();\n    } else {\n      const /** @type {?} */ valueStart = this._index;\n      this._requireCharCodeUntilFn(isNameEnd, 1);\n      value = this._input.substring(valueStart, this._index);\n    }\n    this._endToken([this._processCarriageReturns(value)]);\n  }\n/**\n * @return {?}\n */\nprivate _consumeTagOpenEnd() {\n    const /** @type {?} */ tokenType =\n        this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n    this._beginToken(tokenType);\n    this._requireCharCode(chars.$GT);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _consumeTagClose(start: ParseLocation) {\n    this._beginToken(TokenType.TAG_CLOSE, start);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    this._requireCharCode(chars.$GT);\n    this._endToken(prefixAndName);\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionFormStart() {\n    this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n\n    this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n    const /** @type {?} */ condition = this._readUntil(chars.$COMMA);\n    this._endToken([condition], this._getLocation());\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n    const /** @type {?} */ type = this._readUntil(chars.$COMMA);\n    this._endToken([type], this._getLocation());\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionCaseStart() {\n    this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n    const /** @type {?} */ value = this._readUntil(chars.$LBRACE).trim();\n    this._endToken([value], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionCaseEnd() {\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.pop();\n  }\n/**\n * @return {?}\n */\nprivate _consumeExpansionFormEnd() {\n    this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.pop();\n  }\n/**\n * @return {?}\n */\nprivate _consumeText() {\n    const /** @type {?} */ start = this._getLocation();\n    this._beginToken(TokenType.TEXT, start);\n    const /** @type {?} */ parts: string[] = [];\n\n    do {\n      if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n        parts.push(this._interpolationConfig.start);\n        this._inInterpolation = true;\n      } else if (\n          this._interpolationConfig && this._inInterpolation &&\n          this._attemptStr(this._interpolationConfig.end)) {\n        parts.push(this._interpolationConfig.end);\n        this._inInterpolation = false;\n      } else {\n        parts.push(this._readChar(true));\n      }\n    } while (!this._isTextEnd());\n\n    this._endToken([this._processCarriageReturns(parts.join(''))]);\n  }\n/**\n * @return {?}\n */\nprivate _isTextEnd(): boolean {\n    if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n      return true;\n    }\n\n    if (this._tokenizeIcu && !this._inInterpolation) {\n      if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n        // start of an expansion form\n        return true;\n      }\n\n      if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n        // end of and expansion case\n        return true;\n      }\n    }\n\n    return false;\n  }\n/**\n * @return {?}\n */\nprivate _savePosition(): [number, number, number, number, number] {\n    return [this._peek, this._index, this._column, this._line, this.tokens.length];\n  }\n/**\n * @param {?} char\n * @return {?}\n */\nprivate _readUntil(char: number): string {\n    const /** @type {?} */ start = this._index;\n    this._attemptUntilChar(char);\n    return this._input.substring(start, this._index);\n  }\n/**\n * @param {?} position\n * @return {?}\n */\nprivate _restorePosition(position: [number, number, number, number, number]): void {\n    this._peek = position[0];\n    this._index = position[1];\n    this._column = position[2];\n    this._line = position[3];\n    const /** @type {?} */ nbTokens = position[4];\n    if (nbTokens < this.tokens.length) {\n      // remove any extra tokens\n      this.tokens = this.tokens.slice(0, nbTokens);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _isInExpansionCase(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_CASE_EXP_START;\n  }\n/**\n * @return {?}\n */\nprivate _isInExpansionForm(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_FORM_START;\n  }\n}\n\nfunction _Tokenizer_tsickle_Closure_declarations() {\n/** @type {?} */\n_Tokenizer.prototype._input;\n/** @type {?} */\n_Tokenizer.prototype._length;\n/** @type {?} */\n_Tokenizer.prototype._peek;\n/** @type {?} */\n_Tokenizer.prototype._nextPeek;\n/** @type {?} */\n_Tokenizer.prototype._index;\n/** @type {?} */\n_Tokenizer.prototype._line;\n/** @type {?} */\n_Tokenizer.prototype._column;\n/** @type {?} */\n_Tokenizer.prototype._currentTokenStart;\n/** @type {?} */\n_Tokenizer.prototype._currentTokenType;\n/** @type {?} */\n_Tokenizer.prototype._expansionCaseStack;\n/** @type {?} */\n_Tokenizer.prototype._inInterpolation;\n/** @type {?} */\n_Tokenizer.prototype.tokens;\n/** @type {?} */\n_Tokenizer.prototype.errors;\n/** @type {?} */\n_Tokenizer.prototype._file;\n/** @type {?} */\n_Tokenizer.prototype._getTagDefinition;\n/** @type {?} */\n_Tokenizer.prototype._tokenizeIcu;\n/** @type {?} */\n_Tokenizer.prototype._interpolationConfig;\n}\n\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code: number): boolean {\n  return !chars.isWhitespace(code) || code === chars.$EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code: number): boolean {\n  return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n      code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code: number): boolean {\n  return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n      (code < chars.$0 || code > chars.$9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(\n    input: string, offset: number, interpolationConfig: InterpolationConfig): boolean {\n  const /** @type {?} */ isInterpolationStart =\n      interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n\n  return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek: number): boolean {\n  return peek === chars.$EQ || chars.isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1: number, code2: number): boolean {\n  return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code: number): number {\n  return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens: Token[]): Token[] {\n  const /** @type {?} */ dstTokens: Token[] = [];\n  let /** @type {?} */ lastDstToken: Token;\n  for (let /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n    const /** @type {?} */ token = srcTokens[i];\n    if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n      lastDstToken.parts[0] += token.parts[0];\n      lastDstToken.sourceSpan.end = token.sourceSpan.end;\n    } else {\n      lastDstToken = token;\n      dstTokens.push(lastDstToken);\n    }\n  }\n\n  return dstTokens;\n}\n"]}