{"version":3,"sources":["../../../../../modules/@angular/compiler/src/i18n/message_bundle.ts"],"names":[],"mappings":"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","file":"message_bundle.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseError} from '../parse_util';\n\nimport {extractMessages} from './extractor_merger';\nimport * as i18n from './i18n_ast';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\nprivate _messages: i18n.Message[] = [];\n/**\n * @param {?} _htmlParser\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]}) {}\n/**\n * @param {?} html\n * @param {?} url\n * @param {?} interpolationConfig\n * @return {?}\n */\nupdateFromTemplate(html: string, url: string, interpolationConfig: InterpolationConfig):\n      ParseError[] {\n    const /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\n    if (htmlParserResult.errors.length) {\n      return htmlParserResult.errors;\n    }\n\n    const /** @type {?} */ i18nParserResult = extractMessages(\n        htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\n    if (i18nParserResult.errors.length) {\n      return i18nParserResult.errors;\n    }\n\n    this._messages.push(...i18nParserResult.messages);\n  }\n/**\n * @return {?}\n */\ngetMessages(): i18n.Message[] { return this._messages; }\n/**\n * @param {?} serializer\n * @return {?}\n */\nwrite(serializer: Serializer): string {\n    const /** @type {?} */ messages: {[id: string]: i18n.Message} = {};\n    const /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n\n    // Deduplicate messages based on their ID\n    this._messages.forEach(message => {\n      const /** @type {?} */ id = serializer.digest(message);\n      if (!messages.hasOwnProperty(id)) {\n        messages[id] = message;\n      }\n    });\n\n    // Transform placeholder names using the serializer mapping\n    const /** @type {?} */ msgList = Object.keys(messages).map(id => {\n      const /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n      const /** @type {?} */ src = messages[id];\n      const /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n      return new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n    });\n\n    return serializer.write(msgList);\n  }\n}\n\nfunction MessageBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBundle.prototype._messages;\n/** @type {?} */\nMessageBundle.prototype._htmlParser;\n/** @type {?} */\nMessageBundle.prototype._implicitTags;\n/** @type {?} */\nMessageBundle.prototype._implicitAttrs;\n}\n\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n/**\n * @param {?} nodes\n * @param {?} mapper\n * @return {?}\n */\nconvert(nodes: i18n.Node[], mapper: PlaceholderMapper): i18n.Node[] {\n    return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, mapper: PlaceholderMapper): i18n.TagPlaceholder {\n    const /** @type {?} */ startName = mapper.toPublicName(ph.startName);\n    const /** @type {?} */ closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n    const /** @type {?} */ children = ph.children.map(n => n.visit(this, mapper));\n    return new i18n.TagPlaceholder(\n        ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, mapper: PlaceholderMapper): i18n.Placeholder {\n    return new i18n.Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, mapper: PlaceholderMapper): i18n.IcuPlaceholder {\n    return new i18n.IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n  }\n}"]}