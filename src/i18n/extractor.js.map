{"version":3,"sources":["../../../../../modules/@angular/compiler/src/i18n/extractor.ts"],"names":[],"mappings":"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","file":"extractor.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Extract i18n messages from source code\n */\nimport {ViewEncapsulation} from '@angular/core';\n\nimport {analyzeAndValidateNgModules, extractProgramSymbols} from '../aot/compiler';\nimport {StaticAndDynamicReflectionCapabilities} from '../aot/static_reflection_capabilities';\nimport {StaticReflector} from '../aot/static_reflector';\nimport {StaticSymbolCache} from '../aot/static_symbol';\nimport {StaticSymbolResolver, StaticSymbolResolverHost} from '../aot/static_symbol_resolver';\nimport {AotSummaryResolver, AotSummaryResolverHost} from '../aot/summary_resolver';\nimport {CompileDirectiveMetadata} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {ParseError} from '../parse_util';\nimport {PipeResolver} from '../pipe_resolver';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {createOfflineCompileUrlResolver} from '../url_resolver';\n\nimport {I18NHtmlParser} from './i18n_html_parser';\nimport {MessageBundle} from './message_bundle';\n\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n */\nexport interface ExtractorHost extends StaticSymbolResolverHost, AotSummaryResolverHost {\n  /**\n   * Loads a resource (e.g. html / css)\n   */\n  loadResource(path: string): Promise<string>;\n}\nexport class Extractor {\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} messageBundle\n * @param {?} metadataResolver\n */\nconstructor(\npublic host: ExtractorHost,\nprivate staticSymbolResolver: StaticSymbolResolver,\nprivate messageBundle: MessageBundle,\nprivate metadataResolver: CompileMetadataResolver) {}\n/**\n * @param {?} rootFiles\n * @return {?}\n */\nextract(rootFiles: string[]): Promise<MessageBundle> {\n    const /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n    const {files, ngModules} =\n        analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver);\n    return Promise\n        .all(ngModules.map(\n            ngModule => this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => {\n          const /** @type {?} */ errors: ParseError[] = [];\n\n          files.forEach(file => {\n            const /** @type {?} */ compMetas: CompileDirectiveMetadata[] = [];\n            file.directives.forEach(directiveType => {\n              const /** @type {?} */ dirMeta = this.metadataResolver.getDirectiveMetadata(directiveType);\n              if (dirMeta && dirMeta.isComponent) {\n                compMetas.push(dirMeta);\n              }\n            });\n            compMetas.forEach(compMeta => {\n              const /** @type {?} */ html = compMeta.template.template;\n              const /** @type {?} */ interpolationConfig =\n                  InterpolationConfig.fromArray(compMeta.template.interpolation);\n              errors.push(\n                  ...this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig));\n            });\n          });\n\n          if (errors.length) {\n            throw new Error(errors.map(e => e.toString()).join('\\n'));\n          }\n\n          return this.messageBundle;\n        });\n  }\n/**\n * @param {?} host\n * @return {?}\n */\nstatic create(host: ExtractorHost): {extractor: Extractor, staticReflector: StaticReflector} {\n    const /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser());\n\n    const /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    const /** @type {?} */ symbolCache = new StaticSymbolCache();\n    const /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n    const /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n    const /** @type {?} */ staticReflector = new StaticReflector(staticSymbolResolver);\n    StaticAndDynamicReflectionCapabilities.install(staticReflector);\n\n    const /** @type {?} */ config = new CompilerConfig({\n      genDebugInfo: false,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      logBindingUpdate: false,\n      useJit: false\n    });\n\n    const /** @type {?} */ normalizer = new DirectiveNormalizer(\n        {get: (url: string) => host.loadResource(url)}, urlResolver, htmlParser, config);\n    const /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    const /** @type {?} */ resolver = new CompileMetadataResolver(\n        config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector),\n        new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer,\n        symbolCache, staticReflector);\n\n    // TODO(vicb): implicit tags & attributes\n    const /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {});\n\n    const /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n    return {extractor, staticReflector};\n  }\n}\n\nfunction Extractor_tsickle_Closure_declarations() {\n/** @type {?} */\nExtractor.prototype.host;\n/** @type {?} */\nExtractor.prototype.staticSymbolResolver;\n/** @type {?} */\nExtractor.prototype.messageBundle;\n/** @type {?} */\nExtractor.prototype.metadataResolver;\n}\n\n"]}