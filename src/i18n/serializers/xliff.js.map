{"version":3,"sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xliff.ts"],"names":[],"mappings":"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","file":"xliff.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {digest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _VERSION = '1.2';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'x';\n\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'trans-unit';\nexport class Xliff extends Serializer {\n/**\n * @param {?} messages\n * @return {?}\n */\nwrite(messages: i18n.Message[]): string {\n    const /** @type {?} */ visitor = new _WriteVisitor();\n    const /** @type {?} */ transUnits: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const /** @type {?} */ transUnit = new xml.Tag(_UNIT_TAG, {id: message.id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(8), new xml.Tag(_TARGET_TAG));\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const /** @type {?} */ body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const /** @type {?} */ file = new xml.Tag(\n        'file', {'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template'},\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const /** @type {?} */ xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string): {[msgId: string]: i18n.Node[]} {\n    // xliff to xml nodes\n    const /** @type {?} */ xliffParser = new XliffParser();\n    const {mlNodesByMsgId, errors} = xliffParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n    Object.keys(mlNodesByMsgId).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(mlNodesByMsgId[msgId]);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return i18nNodesByMsgId;\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n}\nclass _WriteVisitor implements i18n.Visitor {\nprivate _isInIcu: boolean;\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    if (this._isInIcu) {\n      // nested ICU is not supported\n      throw new Error('xliff does not support nested ICU messages');\n    }\n    this._isInIcu = true;\n\n    // TODO(vicb): support ICU messages\n    // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n    // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n    const /** @type {?} */ nodes: xml.Node[] = [];\n\n    this._isInIcu = false;\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n\n    const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype});\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name})];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name})];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    this._isInIcu = false;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\nfunction _WriteVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_WriteVisitor.prototype._isInIcu;\n}\n\nclass XliffParser implements ml.Visitor {\nprivate _unitMlNodes: ml.Node[];\nprivate _errors: I18nError[];\nprivate _mlNodesByMsgId: {[msgId: string]: ml.Node[]};\n/**\n * @param {?} xliff\n * @param {?} url\n * @return {?}\n */\nparse(xliff: string, url: string) {\n    this._unitMlNodes = [];\n    this._mlNodesByMsgId = {};\n\n    const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      mlNodesByMsgId: this._mlNodesByMsgId,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlNodes = null;\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._mlNodesByMsgId.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (this._unitMlNodes) {\n              this._mlNodesByMsgId[id] = this._unitMlNodes;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        this._unitMlNodes = element.children;\n        break;\n\n      default:\n        // TODO(vicb): assert file structure, xliff version\n        // For now only recurse on unhandled nodes\n        ml.visitAll(this, element.children, null);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XliffParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXliffParser.prototype._unitMlNodes;\n/** @type {?} */\nXliffParser.prototype._errors;\n/** @type {?} */\nXliffParser.prototype._mlNodesByMsgId;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} nodes\n * @return {?}\n */\nconvert(nodes: ml.Node[]) {\n    this._errors = [];\n    return {\n      i18nNodes: ml.visitAll(this, nodes),\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'id');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {}\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}"]}