{"version":3,"file":"xliff.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xliff.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {digest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '1.2';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst _SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'x';\n\nconst _SOURCE_TAG = 'source';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'trans-unit';\n\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nexport class Xliff implements Serializer {\n  write(messages: i18n.Message[]): string {\n    const visitor = new _WriteVisitor();\n    const visited: {[id: string]: boolean} = {};\n    const transUnits: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const id = this.digest(message);\n\n      // deduplicate messages\n      if (visited[id]) return;\n      visited[id] = true;\n\n      const transUnit = new xml.Tag(_UNIT_TAG, {id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(8), new xml.Tag(_TARGET_TAG));\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const file = new xml.Tag(\n        'file', {'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template'},\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string): {[msgId: string]: i18n.Node[]} {\n    // xliff to xml nodes\n    const xliffParser = new XliffParser();\n    const {mlNodesByMsgId, errors} = xliffParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n    Object.keys(mlNodesByMsgId).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(mlNodesByMsgId[msgId]);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return i18nNodesByMsgId;\n  }\n\n  digest(message: i18n.Message): string { return digest(message); }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  private _isInIcu: boolean;\n\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    if (this._isInIcu) {\n      // nested ICU is not supported\n      throw new Error('xliff does not support nested ICU messages');\n    }\n    this._isInIcu = true;\n\n    // TODO(vicb): support ICU messages\n    // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n    // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n    const nodes: xml.Node[] = [];\n\n    this._isInIcu = false;\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const ctype = getCtypeForTag(ph.tag);\n\n    const startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype});\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name})];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    this._isInIcu = false;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// TODO(vicb): add error management (structure)\n// Extract messages as xml nodes from the xliff file\nclass XliffParser implements ml.Visitor {\n  private _unitMlNodes: ml.Node[];\n  private _errors: I18nError[];\n  private _mlNodesByMsgId: {[msgId: string]: ml.Node[]};\n\n  parse(xliff: string, url: string) {\n    this._unitMlNodes = [];\n    this._mlNodesByMsgId = {};\n\n    const xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      mlNodesByMsgId: this._mlNodesByMsgId,\n      errors: this._errors,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlNodes = null;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._mlNodesByMsgId.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (this._unitMlNodes) {\n              this._mlNodesByMsgId[id] = this._unitMlNodes;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        this._unitMlNodes = element.children;\n        break;\n\n      default:\n        // TODO(vicb): assert file structure, xliff version\n        // For now only recurse on unhandled nodes\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\n// Convert ml nodes (xliff syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  private _errors: I18nError[];\n\n  convert(nodes: ml.Node[]) {\n    this._errors = [];\n    return {\n      i18nNodes: ml.visitAll(this, nodes),\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n\n  visitElement(el: ml.Element, context: any): i18n.Placeholder {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const nameAttr = el.attrs.find((attr) => attr.name === 'id');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {}\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}