{"version":3,"sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xtb.ts"],"names":[],"mappings":"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","file":"xtb.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport {digest, toPublicName} from './xmb';\n\nconst /** @type {?} */ _TRANSLATIONS_TAG = 'translationbundle';\nconst /** @type {?} */ _TRANSLATION_TAG = 'translation';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nexport class Xtb extends Serializer {\n/**\n * @param {?} messages\n * @return {?}\n */\nwrite(messages: i18n.Message[]): string { throw new Error('Unsupported'); }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string): {[msgId: string]: i18n.Node[]} {\n    // xtb to xml nodes\n    const /** @type {?} */ xtbParser = new XtbParser();\n    const {msgIdToHtml, errors} = xtbParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    // Because we should be able to load xtb files that rely on features not supported by angular,\n    // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n    // converted\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const /** @type {?} */ valueFn = function() {\n        const {i18nNodes, errors} = converter.convert(msgIdToHtml[msgId], url);\n        if (errors.length) {\n          throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n        }\n        return i18nNodes;\n      };\n      createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n    });\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return i18nNodesByMsgId;\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages: any, id: string, valueFn: () => any) {\n  Object.defineProperty(messages, id, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      const /** @type {?} */ value = valueFn();\n      Object.defineProperty(messages, id, {enumerable: true, value});\n      return value;\n    },\n    set: _ => { throw new Error('Could not overwrite an XTB translation'); },\n  });\n}\nclass XtbParser implements ml.Visitor {\nprivate _bundleDepth: number;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\n/**\n * @param {?} xtb\n * @param {?} url\n * @return {?}\n */\nparse(xtb: string, url: string) {\n    this._bundleDepth = 0;\n    this._msgIdToHtml = {};\n\n    // We can not parse the ICU messages at this point as some messages might not originate\n    // from Angular that could not be lex'd.\n    const /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            const /** @type {?} */ innerTextStart = element.startSourceSpan.end.offset;\n            const /** @type {?} */ innerTextEnd = element.endSourceSpan.start.offset;\n            const /** @type {?} */ content = element.startSourceSpan.start.file.content;\n            const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n            this._msgIdToHtml[id] = innerText;\n          }\n        }\n        break;\n\n      default:\n        this._addError(element, 'Unexpected tag');\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XtbParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXtbParser.prototype._bundleDepth;\n/** @type {?} */\nXtbParser.prototype._errors;\n/** @type {?} */\nXtbParser.prototype._msgIdToHtml;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach(c => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'name');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n"]}