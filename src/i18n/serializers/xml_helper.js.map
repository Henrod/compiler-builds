{"version":3,"sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xml_helper.ts"],"names":[],"mappings":"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","file":"xml_helper.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface IVisitor {\n  visitTag(tag: Tag): any;\n  visitText(text: Text): any;\n  visitDeclaration(decl: Declaration): any;\n  visitDoctype(doctype: Doctype): any;\n}\nclass _Visitor implements IVisitor {\n/**\n * @param {?} tag\n * @return {?}\n */\nvisitTag(tag: Tag): string {\n    const /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n\n    if (tag.children.length == 0) {\n      return `<${tag.name}${strAttrs}/>`;\n    }\n\n    const /** @type {?} */ strChildren = tag.children.map(node => node.visit(this));\n    return `<${tag.name}${strAttrs}>${strChildren.join('')}</${tag.name}>`;\n  }\n/**\n * @param {?} text\n * @return {?}\n */\nvisitText(text: Text): string { return text.value; }\n/**\n * @param {?} decl\n * @return {?}\n */\nvisitDeclaration(decl: Declaration): string {\n    return `<?xml${this._serializeAttributes(decl.attrs)} ?>`;\n  }\n/**\n * @param {?} attrs\n * @return {?}\n */\nprivate _serializeAttributes(attrs: {[k: string]: string}) {\n    const /** @type {?} */ strAttrs = Object.keys(attrs).map((name: string) => `${name}=\"${attrs[name]}\"`).join(' ');\n    return strAttrs.length > 0 ? ' ' + strAttrs : '';\n  }\n/**\n * @param {?} doctype\n * @return {?}\n */\nvisitDoctype(doctype: Doctype): any {\n    return `<!DOCTYPE ${doctype.rootTag} [\\n${doctype.dtd}\\n]>`;\n  }\n}\n\nconst /** @type {?} */ _visitor = new _Visitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serialize(nodes: Node[]): string {\n  return nodes.map((node: Node): string => node.visit(_visitor)).join('');\n}\n\nexport interface Node { visit(visitor: IVisitor): any; }\nexport class Declaration implements Node {\npublic attrs: {[k: string]: string} = {};\n/**\n * @param {?} unescapedAttrs\n */\nconstructor(unescapedAttrs: {[k: string]: string}) {\n    Object.keys(unescapedAttrs).forEach((k: string) => {\n      this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n    });\n  }\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitDeclaration(this); }\n}\n\nfunction Declaration_tsickle_Closure_declarations() {\n/** @type {?} */\nDeclaration.prototype.attrs;\n}\n\nexport class Doctype implements Node {\n/**\n * @param {?} rootTag\n * @param {?} dtd\n */\nconstructor(public rootTag: string,\npublic dtd: string){};\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitDoctype(this); }\n}\n\nfunction Doctype_tsickle_Closure_declarations() {\n/** @type {?} */\nDoctype.prototype.rootTag;\n/** @type {?} */\nDoctype.prototype.dtd;\n}\n\nexport class Tag implements Node {\npublic attrs: {[k: string]: string} = {};\n/**\n * @param {?} name\n * @param {?=} unescapedAttrs\n * @param {?=} children\n */\nconstructor(\npublic name: string, unescapedAttrs: {[k: string]: string} = {},\npublic children: Node[] = []) {\n    Object.keys(unescapedAttrs).forEach((k: string) => {\n      this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n    });\n  }\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitTag(this); }\n}\n\nfunction Tag_tsickle_Closure_declarations() {\n/** @type {?} */\nTag.prototype.attrs;\n/** @type {?} */\nTag.prototype.name;\n/** @type {?} */\nTag.prototype.children;\n}\n\nexport class Text implements Node {\n  value: string;\n/**\n * @param {?} unescapedValue\n */\nconstructor(unescapedValue: string) { this.value = _escapeXml(unescapedValue); };\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitText(this); }\n}\n\nfunction Text_tsickle_Closure_declarations() {\n/** @type {?} */\nText.prototype.value;\n}\n\nexport class CR extends Text {\n/**\n * @param {?=} ws\n */\nconstructor(ws: number = 0) { super(`\\n${new Array(ws + 1).join(' ')}`); }\n}\n\nconst /** @type {?} */ _ESCAPED_CHARS: [RegExp, string][] = [\n  [/&/g, '&amp;'],\n  [/\"/g, '&quot;'],\n  [/'/g, '&apos;'],\n  [/</g, '&lt;'],\n  [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text: string): string {\n  return _ESCAPED_CHARS.reduce(\n      (text: string, entry: [RegExp, string]) => text.replace(entry[0], entry[1]), text);\n}\n"]}