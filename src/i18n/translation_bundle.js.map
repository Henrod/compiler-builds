{"version":3,"file":"translation_bundle.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/i18n/translation_bundle.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '@angular/core/index';\n\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {Console} from '../private_import_core';\n\nimport * as i18n from './i18n_ast';\nimport {I18nError} from './parse_util';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\nprivate _i18nToHtml: I18nToHtmlVisitor;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?} digest\n * @param {?=} mapperFactory\n * @param {?=} missingTranslationStrategy\n * @param {?=} console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {},\npublic digest: (m: i18n.Message) => string,\npublic mapperFactory?: (m: i18n.Message) => PlaceholderMapper,\n      missingTranslationStrategy: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    this._i18nToHtml = new I18nToHtmlVisitor(\n        _i18nNodesByMsgId, digest, mapperFactory, missingTranslationStrategy, console);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @param {?} serializer\n * @param {?} missingTranslationStrategy\n * @param {?=} console\n * @return {?}\n */\nstatic load(\n      content: string, url: string, serializer: Serializer,\n      missingTranslationStrategy: MissingTranslationStrategy,\n      console?: Console): TranslationBundle {\n    const /** @type {?} */ i18nNodesByMsgId = serializer.load(content, url);\n    const /** @type {?} */ digestFn = (m: i18n.Message) => serializer.digest(m);\n    const /** @type {?} */ mapperFactory = (m: i18n.Message) => serializer.createNameMapper(m);\n    return new TranslationBundle(\n        i18nNodesByMsgId, digestFn, mapperFactory, missingTranslationStrategy, console);\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nget(srcMsg: i18n.Message): html.Node[] {\n    const /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n\n    if (html.errors.length) {\n      throw new Error(html.errors.join('\\n'));\n    }\n\n    return html.nodes;\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nhas(srcMsg: i18n.Message): boolean { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\n\nfunction TranslationBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationBundle.prototype._i18nToHtml;\n/** @type {?} */\nTranslationBundle.prototype._i18nNodesByMsgId;\n/** @type {?} */\nTranslationBundle.prototype.digest;\n/** @type {?} */\nTranslationBundle.prototype.mapperFactory;\n}\n\nclass I18nToHtmlVisitor implements i18n.Visitor {\nprivate _srcMsg: i18n.Message;\nprivate _contextStack: {msg: i18n.Message, mapper: (name: string) => string}[] = [];\nprivate _errors: I18nError[] = [];\nprivate _mapper: (name: string) => string;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?} _digest\n * @param {?} _mapperFactory\n * @param {?} _missingTranslationStrategy\n * @param {?=} _console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {},\nprivate _digest: (m: i18n.Message) => string,\nprivate _mapperFactory: (m: i18n.Message) => PlaceholderMapper,\nprivate _missingTranslationStrategy: MissingTranslationStrategy,\nprivate _console?: Console) {\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nconvert(srcMsg: i18n.Message): {nodes: html.Node[], errors: I18nError[]} {\n    this._contextStack.length = 0;\n    this._errors.length = 0;\n\n    // i18n to text\n    const /** @type {?} */ text = this._convertToText(srcMsg);\n\n    // text to html\n    const /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n    const /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n\n    return {\n      nodes: html.rootNodes,\n      errors: [...this._errors, ...html.errors],\n    };\n  }\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): string { return text.value; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): any {\n    return container.children.map(n => n.visit(this)).join('');\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): any {\n    const /** @type {?} */ cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n\n    // TODO(vicb): Once all format switch to using expression placeholders\n    // we should throw when the placeholder is not in the source message\n    const /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n        this._srcMsg.placeholders[icu.expression] :\n        icu.expression;\n\n    return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): string {\n    const /** @type {?} */ phName = this._mapper(ph.name);\n    if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n      return this._srcMsg.placeholders[phName];\n    }\n\n    if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n      return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n    }\n\n    this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n    return '';\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): string {\n    const /** @type {?} */ tag = `${ph.tag}`;\n    const /** @type {?} */ attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n    if (ph.isVoid) {\n      return `<${tag} ${attrs}/>`;\n    }\n    const /** @type {?} */ children = ph.children.map((c: i18n.Node) => c.visit(this)).join('');\n    return `<${tag} ${attrs}>${children}</${tag}>`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): string {\n    // An ICU placeholder references the source message to be serialized\n    return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n  }\n/**\n * Convert a source message to a translated text string:\n * - text nodes are replaced with their translation,\n * - placeholders are replaced with their content,\n * - ICU nodes are converted to ICU expressions.\n * @param {?} srcMsg\n * @return {?}\n */\nprivate _convertToText(srcMsg: i18n.Message): string {\n    const /** @type {?} */ id = this._digest(srcMsg);\n    const /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n    let /** @type {?} */ nodes: i18n.Node[];\n\n    this._contextStack.push({msg: this._srcMsg, mapper: this._mapper});\n    this._srcMsg = srcMsg;\n\n    if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n      // When there is a translation use its nodes as the source\n      // And create a mapper to convert serialized placeholder names to internal names\n      nodes = this._i18nNodesByMsgId[id];\n      this._mapper = (name: string) => mapper ? mapper.toInternalName(name) : name;\n    } else {\n      // When no translation has been found\n      // - report an error / a warning / nothing,\n      // - use the nodes from the original message\n      // - placeholders are already internal and need no mapper\n      if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n        this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"`);\n      } else if (\n          this._console &&\n          this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n        this._console.warn(`Missing translation for message \"${id}\"`);\n      }\n      nodes = srcMsg.nodes;\n      this._mapper = (name: string) => name;\n    }\n    const /** @type {?} */ text = nodes.map(node => node.visit(this)).join('');\n    const /** @type {?} */ context = this._contextStack.pop();\n    this._srcMsg = context.msg;\n    this._mapper = context.mapper;\n    return text;\n  }\n/**\n * @param {?} el\n * @param {?} msg\n * @return {?}\n */\nprivate _addError(el: i18n.Node, msg: string) {\n    this._errors.push(new I18nError(el.sourceSpan, msg));\n  }\n}\n\nfunction I18nToHtmlVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nToHtmlVisitor.prototype._srcMsg;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._contextStack;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._errors;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapper;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._i18nNodesByMsgId;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._digest;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapperFactory;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._missingTranslationStrategy;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._console;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}