{"version":3,"sources":["../../../../../modules/@angular/compiler/src/i18n/translation_bundle.ts"],"names":[],"mappings":"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","file":"translation_bundle.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '@angular/core/index';\n\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {Console} from '../private_import_core';\n\nimport * as i18n from './i18n_ast';\nimport {I18nError} from './parse_util';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\nprivate _i18nToHtml: I18nToHtmlVisitor;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?} digest\n * @param {?=} mapperFactory\n * @param {?=} missingTranslationStrategy\n * @param {?=} console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {},\npublic digest: (m: i18n.Message) => string,\npublic mapperFactory?: (m: i18n.Message) => PlaceholderMapper,\n      missingTranslationStrategy: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    this._i18nToHtml = new I18nToHtmlVisitor(\n        _i18nNodesByMsgId, digest, mapperFactory, missingTranslationStrategy, console);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @param {?} serializer\n * @param {?} missingTranslationStrategy\n * @param {?=} console\n * @return {?}\n */\nstatic load(\n      content: string, url: string, serializer: Serializer,\n      missingTranslationStrategy: MissingTranslationStrategy,\n      console?: Console): TranslationBundle {\n    const /** @type {?} */ i18nNodesByMsgId = serializer.load(content, url);\n    const /** @type {?} */ digestFn = (m: i18n.Message) => serializer.digest(m);\n    const /** @type {?} */ mapperFactory = (m: i18n.Message) => serializer.createNameMapper(m);\n    return new TranslationBundle(\n        i18nNodesByMsgId, digestFn, mapperFactory, missingTranslationStrategy, console);\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nget(srcMsg: i18n.Message): html.Node[] {\n    const /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n\n    if (html.errors.length) {\n      throw new Error(html.errors.join('\\n'));\n    }\n\n    return html.nodes;\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nhas(srcMsg: i18n.Message): boolean { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\n\nfunction TranslationBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationBundle.prototype._i18nToHtml;\n/** @type {?} */\nTranslationBundle.prototype._i18nNodesByMsgId;\n/** @type {?} */\nTranslationBundle.prototype.digest;\n/** @type {?} */\nTranslationBundle.prototype.mapperFactory;\n}\n\nclass I18nToHtmlVisitor implements i18n.Visitor {\nprivate _srcMsg: i18n.Message;\nprivate _contextStack: {msg: i18n.Message, mapper: (name: string) => string}[] = [];\nprivate _errors: I18nError[] = [];\nprivate _mapper: (name: string) => string;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?} _digest\n * @param {?} _mapperFactory\n * @param {?} _missingTranslationStrategy\n * @param {?=} _console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {},\nprivate _digest: (m: i18n.Message) => string,\nprivate _mapperFactory: (m: i18n.Message) => PlaceholderMapper,\nprivate _missingTranslationStrategy: MissingTranslationStrategy,\nprivate _console?: Console) {\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nconvert(srcMsg: i18n.Message): {nodes: html.Node[], errors: I18nError[]} {\n    this._contextStack.length = 0;\n    this._errors.length = 0;\n\n    // i18n to text\n    const /** @type {?} */ text = this._convertToText(srcMsg);\n\n    // text to html\n    const /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n    const /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n\n    return {\n      nodes: html.rootNodes,\n      errors: [...this._errors, ...html.errors],\n    };\n  }\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): string { return text.value; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): any {\n    return container.children.map(n => n.visit(this)).join('');\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): any {\n    const /** @type {?} */ cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n\n    // TODO(vicb): Once all format switch to using expression placeholders\n    // we should throw when the placeholder is not in the source message\n    const /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n        this._srcMsg.placeholders[icu.expression] :\n        icu.expression;\n\n    return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): string {\n    const /** @type {?} */ phName = this._mapper(ph.name);\n    if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n      return this._srcMsg.placeholders[phName];\n    }\n\n    if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n      return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n    }\n\n    this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n    return '';\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): string {\n    const /** @type {?} */ tag = `${ph.tag}`;\n    const /** @type {?} */ attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n    if (ph.isVoid) {\n      return `<${tag} ${attrs}/>`;\n    }\n    const /** @type {?} */ children = ph.children.map((c: i18n.Node) => c.visit(this)).join('');\n    return `<${tag} ${attrs}>${children}</${tag}>`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): string {\n    // An ICU placeholder references the source message to be serialized\n    return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n  }\n/**\n * Convert a source message to a translated text string:\n * - text nodes are replaced with their translation,\n * - placeholders are replaced with their content,\n * - ICU nodes are converted to ICU expressions.\n * @param {?} srcMsg\n * @return {?}\n */\nprivate _convertToText(srcMsg: i18n.Message): string {\n    const /** @type {?} */ id = this._digest(srcMsg);\n    const /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n    let /** @type {?} */ nodes: i18n.Node[];\n\n    this._contextStack.push({msg: this._srcMsg, mapper: this._mapper});\n    this._srcMsg = srcMsg;\n\n    if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n      // When there is a translation use its nodes as the source\n      // And create a mapper to convert serialized placeholder names to internal names\n      nodes = this._i18nNodesByMsgId[id];\n      this._mapper = (name: string) => mapper ? mapper.toInternalName(name) : name;\n    } else {\n      // When no translation has been found\n      // - report an error / a warning / nothing,\n      // - use the nodes from the original message\n      // - placeholders are already internal and need no mapper\n      if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n        this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"`);\n      } else if (\n          this._console &&\n          this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n        this._console.warn(`Missing translation for message \"${id}\"`);\n      }\n      nodes = srcMsg.nodes;\n      this._mapper = (name: string) => name;\n    }\n    const /** @type {?} */ text = nodes.map(node => node.visit(this)).join('');\n    const /** @type {?} */ context = this._contextStack.pop();\n    this._srcMsg = context.msg;\n    this._mapper = context.mapper;\n    return text;\n  }\n/**\n * @param {?} el\n * @param {?} msg\n * @return {?}\n */\nprivate _addError(el: i18n.Node, msg: string) {\n    this._errors.push(new I18nError(el.sourceSpan, msg));\n  }\n}\n\nfunction I18nToHtmlVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nToHtmlVisitor.prototype._srcMsg;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._contextStack;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._errors;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapper;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._i18nNodesByMsgId;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._digest;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapperFactory;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._missingTranslationStrategy;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._console;\n}\n\n"]}