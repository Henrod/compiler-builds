{"version":3,"sources":["../../../../../modules/@angular/compiler/src/i18n/i18n_html_parser.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,0BAAE,EAA0B,MAAA,qBAAA,CAAA;AAGnC,OAAO,EAAA,4BAAE,EAAiD,MAAA,mCAAA,CAAA;AAC1D,OAAO,EAAA,eAAE,EAAe,MAAA,qBAAA,CAAA;AAGxB,OAAO,EAAA,iBAAE,EAAiB,MAAA,oBAAA,CAAA;AAE1B,OAAO,EAAA,KAAE,EAAK,MAAA,qBAAA,CAAA;AACd,OAAO,EAAA,GAAE,EAAG,MAAA,mBAAA,CAAA;AACZ,OAAO,EAAA,GAAE,EAAG,MAAA,mBAAA,CAAA;AACZ,OAAO,EAAA,iBAAE,EAAiB,MAAA,sBAAA,CAAA;AAC1B,MACC;IAGD;;;;;;OAMG;IACH,YAHc,WAAa,EAAY,YAAe,EAAQ,kBAAqB,EAK7E,qBAJiD,0BAAA,CAA2B,OAAC,EAK7E,OAJU;QAFF,gBAAA,GAAA,WAAA,CAAa;QAOvB,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,UAAU,GAAG,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;YACxD,IAAI,CAAC,kBAAkB;gBACnB,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;QAC5F,CAAC;IACH,CAAC;IACH;;;;;;OAMG;IACH,KAVG,CAWG,MAAc,EAAE,GAAW,EAAE,sBAA+B,KAAK,EACjE,sBAA2C,4BAA4B;QACzE,MAAM,gBAAgB,CAVhB,WAAA,GAWF,IAAI,CAVC,WAAC,CAAW,KAAC,CAAK,MAAC,EAAO,GAAA,EAAK,mBAAA,EAAqB,mBAAA,CAAoB,CAAC;QAYlF,EAAE,CAAC,CAAC,CAVC,IAAC,CAAI,kBAAC,CAAkB,CAAC,CAAA;YAW5B,4DAA4D;YAC5D,MAAM,CAVC,WAAA,CAAY;QAWrB,CAAC;QAED,EAAE,CAAC,CAAC,WAVC,CAAW,MAAC,CAAM,MAAC,CAAM,CAAC,CAAA;YAW7B,MAAM,CAVC,IAAI,eAAA,CAAgB,WAAC,CAAW,SAAC,EAAU,WAAA,CAAY,MAAC,CAAM,CAAC;QAWxE,CAAC;QAED,MAAM,CAVC,iBAAA,CAWH,WAAW,CAVC,SAAC,EAAU,IAAA,CAAK,kBAAC,EAAmB,mBAAA,EAAqB,EAAA,EAAI,EAAA,CAAG,CAAC;IAWnF,CAAC;CACF;AAED;IACA,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC1C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;IAC5C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,CAAC;AAED;;;GAGG;AACH,0BAvBC,MAAA;IAwBC,MAAM,GAvBG,CAAA,MAAE,IAAS,KAAA,CAAM,CAAC,WAAC,EAAW,CAAE;IAyBzC,MAAM,CAAC,CAAC,MAvBC,CAAM,CAAC,CAAA;QAwBd,KAvBK,KAAA;YAwBH,MAAM,CAvBC,IAAI,GAAA,EAAI,CAAE;QAwBnB,KAvBK,KAAA;YAwBH,MAAM,CAvBC,IAAI,GAAA,EAAI,CAAE;QAwBnB,KAvBK,OAAA,CAAQ;QAwBb,KAvBK,KAAA,CAAM;QAwBX;YACE,MAAM,CAvBC,IAAI,KAAA,EAAM,CAAE;IAwBvB,CAAC;AACH,CAAC","file":"i18n_html_parser.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '@angular/core/index';\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\nimport {Console} from '../private_import_core';\n\nimport {mergeTranslations} from './extractor_merger';\nimport {Serializer} from './serializers/serializer';\nimport {Xliff} from './serializers/xliff';\nimport {Xmb} from './serializers/xmb';\nimport {Xtb} from './serializers/xtb';\nimport {TranslationBundle} from './translation_bundle';\nexport class I18NHtmlParser implements HtmlParser {\n  // @override\n  getTagDefinition: any;\nprivate _translationBundle: TranslationBundle;\n/**\n * @param {?} _htmlParser\n * @param {?=} translations\n * @param {?=} translationsFormat\n * @param {?=} missingTranslation\n * @param {?=} console\n */\nconstructor(\nprivate _htmlParser: HtmlParser, translations?: string, translationsFormat?: string,\n      missingTranslation: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    if (translations) {\n      const serializer = createSerializer(translationsFormat);\n      this._translationBundle =\n          TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n    }\n  }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ parseResult =\n        this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\n    if (!this._translationBundle) {\n      // Do not enable i18n when no translation bundle is provided\n      return parseResult;\n    }\n\n    if (parseResult.errors.length) {\n      return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n    }\n\n    return mergeTranslations(\n        parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n  }\n}\n\nfunction I18NHtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nI18NHtmlParser.prototype.getTagDefinition;\n/** @type {?} */\nI18NHtmlParser.prototype._translationBundle;\n/** @type {?} */\nI18NHtmlParser.prototype._htmlParser;\n}\n\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format?: string): Serializer {\n  format = (format || 'xlf').toLowerCase();\n\n  switch (format) {\n    case 'xmb':\n      return new Xmb();\n    case 'xtb':\n      return new Xtb();\n    case 'xliff':\n    case 'xlf':\n    default:\n      return new Xliff();\n  }\n}\n"]}