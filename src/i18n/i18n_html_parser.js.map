{"version":3,"sources":["../../../../../modules/@angular/compiler/src/i18n/i18n_html_parser.ts"],"names":[],"mappings":"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","file":"i18n_html_parser.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '@angular/core/index';\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\nimport {Console} from '../private_import_core';\n\nimport {mergeTranslations} from './extractor_merger';\nimport {Serializer} from './serializers/serializer';\nimport {Xliff} from './serializers/xliff';\nimport {Xmb} from './serializers/xmb';\nimport {Xtb} from './serializers/xtb';\nimport {TranslationBundle} from './translation_bundle';\nexport class I18NHtmlParser implements HtmlParser {\n  // @override\n  getTagDefinition: any;\n/**\n * @param {?} _htmlParser\n * @param {?=} _translations\n * @param {?=} _translationsFormat\n * @param {?=} _missingTranslation\n * @param {?=} _console\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _translations?: string,\nprivate _translationsFormat?: string,\nprivate _missingTranslation: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\nprivate _console?: Console) {}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ parseResult =\n        this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\n    if (!this._translations || this._translations === '') {\n      // Do not enable i18n when no translation bundle is provided\n      return parseResult;\n    }\n\n    // TODO(vicb): add support for implicit tags / attributes\n\n    if (parseResult.errors.length) {\n      return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n    }\n\n    const /** @type {?} */ serializer = this._createSerializer();\n    const /** @type {?} */ translationBundle = TranslationBundle.load(\n        this._translations, url, serializer, this._missingTranslation, this._console);\n\n    return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n  }\n/**\n * @return {?}\n */\nprivate _createSerializer(): Serializer {\n    const /** @type {?} */ format = (this._translationsFormat || 'xlf').toLowerCase();\n\n    switch (format) {\n      case 'xmb':\n        return new Xmb();\n      case 'xtb':\n        return new Xtb();\n      case 'xliff':\n      case 'xlf':\n      default:\n        return new Xliff();\n    }\n  }\n}\n\nfunction I18NHtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nI18NHtmlParser.prototype.getTagDefinition;\n/** @type {?} */\nI18NHtmlParser.prototype._htmlParser;\n/** @type {?} */\nI18NHtmlParser.prototype._translations;\n/** @type {?} */\nI18NHtmlParser.prototype._translationsFormat;\n/** @type {?} */\nI18NHtmlParser.prototype._missingTranslation;\n/** @type {?} */\nI18NHtmlParser.prototype._console;\n}\n\n"]}