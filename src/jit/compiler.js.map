{"version":3,"sources":["../../../../../modules/@angular/compiler/src/jit/compiler.ts"],"names":[],"mappings":"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","file":"compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, Inject, Injector, ModuleWithComponentFactories, NgModuleFactory, RendererTypeV2, Type} from '@angular/core/index';\n\nimport {AnimationCompiler} from '../animation/animation_compiler';\nimport {AnimationParser} from '../animation/animation_parser';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, ProviderMeta, ProxyClass, createHostComponentMeta, identifierName} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {DirectiveWrapperCompiler} from '../directive_wrapper_compiler';\nimport {stringify} from '../facade/lang';\nimport {CompilerInjectable} from '../injectable';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport {interpretStatements} from '../output/output_interpreter';\nimport {jitStatements} from '../output/output_jit';\nimport {view_utils} from '../private_import_core';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {SyncAsyncResult} from '../util';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n * \n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\n@CompilerInjectable()\nexport class JitCompiler implements Compiler {\nprivate _compiledTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledHostTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledDirectiveWrapperCache = new Map<Type<any>, Type<any>>();\nprivate _compiledNgModuleCache = new Map<Type<any>, NgModuleFactory<any>>();\nprivate _animationCompiler = new AnimationCompiler();\n/**\n * @param {?} _injector\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _directiveWrapperCompiler\n * @param {?} _compilerConfig\n * @param {?} _animationParser\n */\nconstructor(\nprivate _injector: Injector,\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _directiveWrapperCompiler: DirectiveWrapperCompiler,\nprivate _compilerConfig: CompilerConfig,\nprivate _animationParser: AnimationParser) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._compileModuleAndComponents(moduleType, true).syncResult;\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._compileModuleAndComponents(moduleType, false).asyncResult;\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    const /** @type {?} */ template = this._compiledTemplateCache.get(component);\n    if (!template) {\n      throw new Error(`The component ${stringify(component)} is not yet compiled!`);\n    }\n    return template.compMeta.template.ngContentSelectors;\n  }\n/**\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\nprivate _compileModuleAndComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<NgModuleFactory<T>> {\n    const /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n    const /** @type {?} */ createResult = () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    };\n    if (isSync) {\n      return new SyncAsyncResult(createResult());\n    } else {\n      return new SyncAsyncResult(null, loadingPromise.then(createResult));\n    }\n  }\n/**\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\nprivate _compileModuleAndAllComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<ModuleWithComponentFactories<T>> {\n    const /** @type {?} */ loadingPromise = this._loadModules(moduleType, isSync);\n    const /** @type {?} */ createResult = () => {\n      const /** @type {?} */ componentFactories: ComponentFactory<any>[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return new ModuleWithComponentFactories(this._compileModule(moduleType), componentFactories);\n    };\n    if (isSync) {\n      return new SyncAsyncResult(createResult());\n    } else {\n      return new SyncAsyncResult(null, loadingPromise.then(createResult));\n    }\n  }\n/**\n * @param {?} mainModule\n * @param {?} isSync\n * @return {?}\n */\nprivate _loadModules(mainModule: any, isSync: boolean): Promise<any> {\n    const /** @type {?} */ loadingPromises: Promise<any>[] = [];\n    const /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    // Note: the loadingPromise for a module only includes the loading of the exported directives\n    // of imported modules.\n    // However, for runtime compilation, we want to transitively compile all modules,\n    // so we also need to call loadNgModuleDirectiveAndPipeMetadata for all nested modules.\n    ngModule.transitiveModule.modules.forEach((localModuleMeta) => {\n      loadingPromises.push(this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n          localModuleMeta.reference, isSync));\n    });\n    return Promise.all(loadingPromises);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\nprivate _compileModule<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    let /** @type {?} */ ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n    if (!ngModuleFactory) {\n      const /** @type {?} */ moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n      // Always provide a bound Compiler\n      const /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(\n          Compiler, {useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference)}))];\n      const /** @type {?} */ compileResult = this._ngModuleCompiler.compile(moduleMeta, extraProviders);\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(compileResult.statements, [compileResult.ngModuleFactoryVar])[0];\n      } else {\n        ngModuleFactory = jitStatements(\n            `/${identifierName(moduleMeta.type)}/module.ngfactory.js`, compileResult.statements,\n            [compileResult.ngModuleFactoryVar])[0];\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n/**\n * \\@internal\n * @param {?} mainModule\n * @param {?} allComponentFactories\n * @return {?}\n */\n_compileComponents(mainModule: Type<any>, allComponentFactories: ComponentFactory<any>[]) {\n    const /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    const /** @type {?} */ moduleByDirective = new Map<any, CompileNgModuleMetadata>();\n    const /** @type {?} */ templates = new Set<CompiledTemplate>();\n\n    ngModule.transitiveModule.modules.forEach((localModuleSummary) => {\n      const /** @type {?} */ localModuleMeta =\n          this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n      localModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n        moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n        this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const /** @type {?} */ template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push( /** @type {?} */((<ComponentFactory<any>>dirMeta.componentFactory)));\n          }\n        }\n      });\n    });\n    ngModule.transitiveModule.modules.forEach((localModuleSummary) => {\n      const /** @type {?} */ localModuleMeta =\n          this._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);\n      localModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.componentType);\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        const /** @type {?} */ moduleMeta = moduleByDirective.get(entryComponentType.componentType);\n        templates.add(\n            this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n/**\n * @param {?} compType\n * @param {?} ngModule\n * @return {?}\n */\nprivate _createCompiledHostTemplate(compType: Type<any>, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n\n      const /** @type {?} */ componentFactory = /** @type {?} */(( <ComponentFactory<any>>compMeta.componentFactory));\n      const /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n      const /** @type {?} */ hostMeta = createHostComponentMeta(\n          hostClass, compMeta, /** @type {?} */(( <any>view_utils.getComponentFactoryViewClass(componentFactory))));\n      compiledTemplate =\n          new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @return {?}\n */\nprivate _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} dirMeta\n * @param {?} moduleMeta\n * @return {?}\n */\nprivate _compileDirectiveWrapper(\n      dirMeta: CompileDirectiveMetadata, moduleMeta: CompileNgModuleMetadata): void {\n    if (this._compilerConfig.useViewEngine) {\n      return;\n    }\n    const /** @type {?} */ compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n    const /** @type {?} */ statements = compileResult.statements;\n    let /** @type {?} */ directiveWrapperClass: any;\n    if (!this._compilerConfig.useJit) {\n      directiveWrapperClass =\n          interpretStatements(statements, [compileResult.dirWrapperClassVar])[0];\n    } else {\n      directiveWrapperClass = jitStatements(\n          `/${identifierName(moduleMeta.type)}/${identifierName(dirMeta.type)}/wrapper.ngfactory.js`,\n          statements, [compileResult.dirWrapperClassVar])[0];\n    }\n    ( /** @type {?} */((<ProxyClass>dirMeta.wrapperType))).setDelegate(directiveWrapperClass);\n    this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n  }\n/**\n * @param {?} template\n * @return {?}\n */\nprivate _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const /** @type {?} */ compMeta = template.compMeta;\n    const /** @type {?} */ externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const /** @type {?} */ stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n    stylesCompileResult.externalStylesheets.forEach(\n        (r) => { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n    this._resolveStylesCompileResult(\n        stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n    const /** @type {?} */ parsedAnimations = this._animationParser.parseComponent(compMeta);\n    const /** @type {?} */ directives =\n        template.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const {template: parsedTemplate, pipes: usedPipes} = this._templateParser.parse(\n        compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas,\n        identifierName(compMeta.type));\n    const /** @type {?} */ compiledAnimations =\n        this._animationCompiler.compile(identifierName(compMeta.type), parsedAnimations);\n    const /** @type {?} */ compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, ir.variable(stylesCompileResult.componentStylesheet.stylesVar),\n        usedPipes, compiledAnimations);\n    const /** @type {?} */ statements = stylesCompileResult.componentStylesheet.statements\n                           .concat(...compiledAnimations.map(ca => ca.statements))\n                           .concat(compileResult.statements);\n    let /** @type {?} */ viewClass: any;\n    let /** @type {?} */ rendererType: any;\n    if (!this._compilerConfig.useJit) {\n      [viewClass, rendererType] = interpretStatements(\n          statements, [compileResult.viewClassVar, compileResult.rendererTypeVar]);\n    } else {\n      const /** @type {?} */ sourceUrl =\n          `/${identifierName(template.ngModule.type)}/${identifierName(template.compType)}/${template.isHost?'host':'component'}.ngfactory.js`;\n      [viewClass, rendererType] = jitStatements(\n          sourceUrl, statements, [compileResult.viewClassVar, compileResult.rendererTypeVar]);\n    }\n    template.compiled(viewClass, rendererType);\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\nprivate _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const /** @type {?} */ nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n      const /** @type {?} */ nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.valuePlaceholder.reference = nestedStylesArr;\n    });\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\nprivate _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.statements, [result.stylesVar])[0];\n    } else {\n      return jitStatements(\n          `/${result.meta.moduleUrl}.ngstyle.js`, result.statements, [result.stylesVar])[0];\n    }\n  }\n}\n\nfunction JitCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nJitCompiler.prototype._compiledTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledHostTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledDirectiveWrapperCache;\n/** @type {?} */\nJitCompiler.prototype._compiledNgModuleCache;\n/** @type {?} */\nJitCompiler.prototype._animationCompiler;\n/** @type {?} */\nJitCompiler.prototype._injector;\n/** @type {?} */\nJitCompiler.prototype._metadataResolver;\n/** @type {?} */\nJitCompiler.prototype._templateParser;\n/** @type {?} */\nJitCompiler.prototype._styleCompiler;\n/** @type {?} */\nJitCompiler.prototype._viewCompiler;\n/** @type {?} */\nJitCompiler.prototype._ngModuleCompiler;\n/** @type {?} */\nJitCompiler.prototype._directiveWrapperCompiler;\n/** @type {?} */\nJitCompiler.prototype._compilerConfig;\n/** @type {?} */\nJitCompiler.prototype._animationParser;\n}\n\nclass CompiledTemplate {\nprivate _viewClass: Function = null;\n  isCompiled = false;\n/**\n * @param {?} isHost\n * @param {?} compType\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directives\n */\nconstructor(\npublic isHost: boolean,\npublic compType: CompileIdentifierMetadata,\npublic compMeta: CompileDirectiveMetadata,\npublic ngModule: CompileNgModuleMetadata,\npublic directives: CompileIdentifierMetadata[]) {}\n/**\n * @param {?} viewClass\n * @param {?} rendererType\n * @return {?}\n */\ncompiled(viewClass: Function, rendererType: any) {\n    this._viewClass = viewClass;\n    ( /** @type {?} */((<ProxyClass>this.compMeta.componentViewType))).setDelegate(viewClass);\n    for (let /** @type {?} */ prop in rendererType) {\n      ( /** @type {?} */((<any>this.compMeta.rendererType)))[prop] = rendererType[prop];\n    }\n    this.isCompiled = true;\n  }\n}\n\nfunction CompiledTemplate_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledTemplate.prototype._viewClass;\n/** @type {?} */\nCompiledTemplate.prototype.isCompiled;\n/** @type {?} */\nCompiledTemplate.prototype.isHost;\n/** @type {?} */\nCompiledTemplate.prototype.compType;\n/** @type {?} */\nCompiledTemplate.prototype.compMeta;\n/** @type {?} */\nCompiledTemplate.prototype.ngModule;\n/** @type {?} */\nCompiledTemplate.prototype.directives;\n}\n\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler {\n/**\n * @param {?} _delegate\n * @param {?} _ngModule\n */\nconstructor(private _delegate: JitCompiler,\nprivate _ngModule: Type<any>) {}\n/**\n * @return {?}\n */\nget _injector(): Injector { return this._delegate.injector; }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    return this._delegate.getNgContentSelectors(component);\n  }\n/**\n * Clears all caches\n * @return {?}\n */\nclearCache(): void { this._delegate.clearCache(); }\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\nfunction ModuleBoundCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleBoundCompiler.prototype._delegate;\n/** @type {?} */\nModuleBoundCompiler.prototype._ngModule;\n}\n\n"]}