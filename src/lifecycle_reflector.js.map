{"version":3,"sources":["../../../../modules/@angular/compiler/src/lifecycle_reflector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAA,cAAE,EAAe,SAAA,EAAU,MAAA,uBAAA;AAClC;;;;GAIG;AACH,iCAHC,IAAA,EAAA,KAAA;IAIC,MAAM,CAHC,SAAA,CAAU,gBAAC,CAAgB,KAAC,EAAM,WAAA,CAAY,IAAC,CAAI,CAAC,CAAC;AAI9D,CAAC;AACD;;;GAGG;AACH,qBANC,IAAA;IAOC,MAAM,CAAC,CAAC,IANC,CAAI,CAAC,CAAA;QAOZ,KANK,cAAA,CAAe,MAAC;YAOnB,MAAM,CANC,UAAA,CAAW;QAOpB,KANK,cAAA,CAAe,SAAC;YAOnB,MAAM,CANC,aAAA,CAAc;QAOvB,KANK,cAAA,CAAe,OAAC;YAOnB,MAAM,CANC,WAAA,CAAY;QAOrB,KANK,cAAA,CAAe,SAAC;YAOnB,MAAM,CANC,aAAA,CAAc;QAOvB,KANK,cAAA,CAAe,gBAAC;YAOnB,MAAM,CANC,oBAAA,CAAqB;QAO9B,KANK,cAAA,CAAe,mBAAC;YAOnB,MAAM,CANC,uBAAA,CAAwB;QAOjC,KANK,cAAA,CAAe,aAAC;YAOnB,MAAM,CANC,iBAAA,CAAkB;QAO3B,KANK,cAAA,CAAe,gBAAC;YAOnB,MAAM,CANC,oBAAA,CAAqB;IAOhC,CAAC;AACH,CAAC","file":"lifecycle_reflector.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LifecycleHooks, reflector} from './private_import_core';\n/**\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nexport function hasLifecycleHook(hook: LifecycleHooks, token: any): boolean {\n  return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook: LifecycleHooks): string {\n  switch (hook) {\n    case LifecycleHooks.OnInit:\n      return 'ngOnInit';\n    case LifecycleHooks.OnDestroy:\n      return 'ngOnDestroy';\n    case LifecycleHooks.DoCheck:\n      return 'ngDoCheck';\n    case LifecycleHooks.OnChanges:\n      return 'ngOnChanges';\n    case LifecycleHooks.AfterContentInit:\n      return 'ngAfterContentInit';\n    case LifecycleHooks.AfterContentChecked:\n      return 'ngAfterContentChecked';\n    case LifecycleHooks.AfterViewInit:\n      return 'ngAfterViewInit';\n    case LifecycleHooks.AfterViewChecked:\n      return 'ngAfterViewChecked';\n  }\n}"]}