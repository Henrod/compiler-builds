{"version":3,"sources":["../../../../modules/@angular/compiler/src/ng_module_compiler.ts"],"names":[],"mappings":"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","file":"ng_module_compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDiDependencyMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileProviderMetadata, CompileTokenMetadata, identifierModuleUrl, identifierName, tokenName, tokenReference} from './compile_metadata';\nimport {createDiTokenExpression} from './compiler_util/identifier_util';\nimport {isPresent} from './facade/lang';\nimport {Identifiers, createIdentifier, resolveIdentifier} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {ClassBuilder, createClassStmt} from './output/class_builder';\nimport * as o from './output/output_ast';\nimport {convertValueToOutputAst} from './output/value_util';\nimport {ParseLocation, ParseSourceFile, ParseSourceSpan} from './parse_util';\nimport {LifecycleHooks} from './private_import_core';\nimport {NgModuleProviderAnalyzer} from './provider_analyzer';\nimport {ProviderAst} from './template_parser/template_ast';\n/**\n * This is currently not read, but will probably be used in the future.\n * We keep it as we already pass it through all the rigth places...\n */\nexport class ComponentFactoryDependency {\n/**\n * @param {?} compType\n */\nconstructor(public compType: any) {}\n}\n\nfunction ComponentFactoryDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryDependency.prototype.compType;\n}\n\nexport class NgModuleCompileResult {\n/**\n * @param {?} statements\n * @param {?} ngModuleFactoryVar\n * @param {?} dependencies\n */\nconstructor(\npublic statements: o.Statement[],\npublic ngModuleFactoryVar: string,\npublic dependencies: ComponentFactoryDependency[]) {}\n}\n\nfunction NgModuleCompileResult_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleCompileResult.prototype.statements;\n/** @type {?} */\nNgModuleCompileResult.prototype.ngModuleFactoryVar;\n/** @type {?} */\nNgModuleCompileResult.prototype.dependencies;\n}\n\n@CompilerInjectable()\nexport class NgModuleCompiler {\n/**\n * @param {?} ngModuleMeta\n * @param {?} extraProviders\n * @return {?}\n */\ncompile(ngModuleMeta: CompileNgModuleMetadata, extraProviders: CompileProviderMetadata[]):\n      NgModuleCompileResult {\n    const /** @type {?} */ moduleUrl = identifierModuleUrl(ngModuleMeta.type);\n    const /** @type {?} */ sourceFileName = isPresent(moduleUrl) ?\n        `in NgModule ${identifierName(ngModuleMeta.type)} in ${moduleUrl}` :\n        `in NgModule ${identifierName(ngModuleMeta.type)}`;\n    const /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n        new ParseLocation(sourceFile, null, null, null),\n        new ParseLocation(sourceFile, null, null, null));\n    const /** @type {?} */ deps: ComponentFactoryDependency[] = [];\n    const /** @type {?} */ bootstrapComponentFactories: CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ entryComponentFactories =\n        ngModuleMeta.transitiveModule.entryComponents.map((entryComponent) => {\n          if (ngModuleMeta.bootstrapComponents.some(\n                  (id) => id.reference === entryComponent.componentType)) {\n            bootstrapComponentFactories.push({reference: entryComponent.componentFactory});\n          }\n          deps.push(new ComponentFactoryDependency(entryComponent.componentType));\n          return {reference: entryComponent.componentFactory};\n        });\n    const /** @type {?} */ builder = new _InjectorBuilder(\n        ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n\n    const /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n    providerParser.parse().forEach((provider) => builder.addProvider(provider));\n    const /** @type {?} */ injectorClass = builder.build();\n    const /** @type {?} */ ngModuleFactoryVar = `${identifierName(ngModuleMeta.type)}NgFactory`;\n    const /** @type {?} */ ngModuleFactoryStmt =\n        o.variable(ngModuleFactoryVar)\n            .set(o.importExpr(createIdentifier(Identifiers.NgModuleFactory))\n                     .instantiate(\n                         [o.variable(injectorClass.name), o.importExpr(ngModuleMeta.type)],\n                         o.importType(\n                             createIdentifier(Identifiers.NgModuleFactory),\n                             [o.importType(ngModuleMeta.type)], [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]);\n\n    const /** @type {?} */ stmts: o.Statement[] = [injectorClass, ngModuleFactoryStmt];\n    if (ngModuleMeta.id) {\n      const /** @type {?} */ registerFactoryStmt =\n          o.importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn))\n              .callFn([o.literal(ngModuleMeta.id), o.variable(ngModuleFactoryVar)])\n              .toStmt();\n      stmts.push(registerFactoryStmt);\n    }\n\n    return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n  }\n}\nclass _InjectorBuilder implements ClassBuilder {\n  fields: o.ClassField[] = [];\n  getters: o.ClassGetter[] = [];\n  methods: o.ClassMethod[] = [];\n  ctorStmts: o.Statement[] = [];\nprivate _tokens: CompileTokenMetadata[] = [];\nprivate _instances = new Map<any, o.Expression>();\nprivate _createStmts: o.Statement[] = [];\nprivate _destroyStmts: o.Statement[] = [];\n/**\n * @param {?} _ngModuleMeta\n * @param {?} _entryComponentFactories\n * @param {?} _bootstrapComponentFactories\n * @param {?} _sourceSpan\n */\nconstructor(\nprivate _ngModuleMeta: CompileNgModuleMetadata,\nprivate _entryComponentFactories: CompileIdentifierMetadata[],\nprivate _bootstrapComponentFactories: CompileIdentifierMetadata[],\nprivate _sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} resolvedProvider\n * @return {?}\n */\naddProvider(resolvedProvider: ProviderAst) {\n    const /** @type {?} */ providerValueExpressions =\n        resolvedProvider.providers.map((provider) => this._getProviderValue(provider));\n    const /** @type {?} */ propName = `_${tokenName(resolvedProvider.token)}_${this._instances.size}`;\n    const /** @type {?} */ instance = this._createProviderProperty(\n        propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider,\n        resolvedProvider.eager);\n    if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n      this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n    }\n    this._tokens.push(resolvedProvider.token);\n    this._instances.set(tokenReference(resolvedProvider.token), instance);\n  }\n/**\n * @return {?}\n */\nbuild(): o.ClassStmt {\n    const /** @type {?} */ getMethodStmts: o.Statement[] = this._tokens.map((token) => {\n      const /** @type {?} */ providerExpr = this._instances.get(tokenReference(token));\n      return new o.IfStmt(\n          InjectMethodVars.token.identical(createDiTokenExpression(token)),\n          [new o.ReturnStatement(providerExpr)]);\n    });\n    const /** @type {?} */ methods = [\n      new o.ClassMethod(\n          'createInternal', [], this._createStmts.concat(new o.ReturnStatement(\n                                    this._instances.get(this._ngModuleMeta.type.reference))),\n          o.importType(this._ngModuleMeta.type)),\n      new o.ClassMethod(\n          'getInternal',\n          [\n            new o.FnParam(InjectMethodVars.token.name, o.DYNAMIC_TYPE),\n            new o.FnParam(InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)\n          ],\n          getMethodStmts.concat([new o.ReturnStatement(InjectMethodVars.notFoundResult)]),\n          o.DYNAMIC_TYPE),\n      new o.ClassMethod('destroyInternal', [], this._destroyStmts),\n    ];\n\n    const /** @type {?} */ parentArgs = [\n      o.variable(InjectorProps.parent.name),\n      o.literalArr(\n          this._entryComponentFactories.map((componentFactory) => o.importExpr(componentFactory))),\n      o.literalArr(this._bootstrapComponentFactories.map(\n          (componentFactory) => o.importExpr(componentFactory)))\n    ];\n    const /** @type {?} */ injClassName = `${identifierName(this._ngModuleMeta.type)}Injector`;\n    return createClassStmt({\n      name: injClassName,\n      ctorParams: [new o.FnParam(\n          InjectorProps.parent.name, o.importType(createIdentifier(Identifiers.Injector)))],\n      parent: o.importExpr(\n          createIdentifier(Identifiers.NgModuleInjector), [o.importType(this._ngModuleMeta.type)]),\n      parentArgs: parentArgs,\n      builders: [{methods}, this]\n    });\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _getProviderValue(provider: CompileProviderMetadata): o.Expression {\n    let /** @type {?} */ result: o.Expression;\n    if (isPresent(provider.useExisting)) {\n      result = this._getDependency({token: provider.useExisting});\n    } else if (isPresent(provider.useFactory)) {\n      const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n      const /** @type {?} */ depsExpr = deps.map((dep) => this._getDependency(dep));\n      result = o.importExpr(provider.useFactory).callFn(depsExpr);\n    } else if (isPresent(provider.useClass)) {\n      const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n      const /** @type {?} */ depsExpr = deps.map((dep) => this._getDependency(dep));\n      result =\n          o.importExpr(provider.useClass).instantiate(depsExpr, o.importType(provider.useClass));\n    } else {\n      result = convertValueToOutputAst(provider.useValue);\n    }\n    return result;\n  }\n/**\n * @param {?} propName\n * @param {?} provider\n * @param {?} providerValueExpressions\n * @param {?} isMulti\n * @param {?} isEager\n * @return {?}\n */\nprivate _createProviderProperty(\n      propName: string, provider: ProviderAst, providerValueExpressions: o.Expression[],\n      isMulti: boolean, isEager: boolean): o.Expression {\n    let /** @type {?} */ resolvedProviderValueExpr: o.Expression;\n    let /** @type {?} */ type: o.Type;\n    if (isMulti) {\n      resolvedProviderValueExpr = o.literalArr(providerValueExpressions);\n      type = new o.ArrayType(o.DYNAMIC_TYPE);\n    } else {\n      resolvedProviderValueExpr = providerValueExpressions[0];\n      type = providerValueExpressions[0].type;\n    }\n    if (!type) {\n      type = o.DYNAMIC_TYPE;\n    }\n    if (isEager) {\n      this.fields.push(new o.ClassField(propName, type));\n      this._createStmts.push(o.THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n    } else {\n      const /** @type {?} */ internalField = `_${propName}`;\n      this.fields.push(new o.ClassField(internalField, type));\n      // Note: Equals is important for JS so that it also checks the undefined case!\n      const /** @type {?} */ getterStmts = [\n        new o.IfStmt(\n            o.THIS_EXPR.prop(internalField).isBlank(),\n            [o.THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n        new o.ReturnStatement(o.THIS_EXPR.prop(internalField))\n      ];\n      this.getters.push(new o.ClassGetter(propName, getterStmts, type));\n    }\n    return o.THIS_EXPR.prop(propName);\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\nprivate _getDependency(dep: CompileDiDependencyMetadata): o.Expression {\n    let /** @type {?} */ result: o.Expression = null;\n    if (dep.isValue) {\n      result = o.literal(dep.value);\n    }\n    if (!dep.isSkipSelf) {\n      if (dep.token &&\n          (tokenReference(dep.token) === resolveIdentifier(Identifiers.Injector) ||\n           tokenReference(dep.token) === resolveIdentifier(Identifiers.ComponentFactoryResolver))) {\n        result = o.THIS_EXPR;\n      }\n      if (!result) {\n        result = this._instances.get(tokenReference(dep.token));\n      }\n    }\n    if (!result) {\n      const /** @type {?} */ args = [createDiTokenExpression(dep.token)];\n      if (dep.isOptional) {\n        args.push(o.NULL_EXPR);\n      }\n      result = InjectorProps.parent.callMethod('get', args);\n    }\n    return result;\n  }\n}\n\nfunction _InjectorBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\n_InjectorBuilder.prototype.fields;\n/** @type {?} */\n_InjectorBuilder.prototype.getters;\n/** @type {?} */\n_InjectorBuilder.prototype.methods;\n/** @type {?} */\n_InjectorBuilder.prototype.ctorStmts;\n/** @type {?} */\n_InjectorBuilder.prototype._tokens;\n/** @type {?} */\n_InjectorBuilder.prototype._instances;\n/** @type {?} */\n_InjectorBuilder.prototype._createStmts;\n/** @type {?} */\n_InjectorBuilder.prototype._destroyStmts;\n/** @type {?} */\n_InjectorBuilder.prototype._ngModuleMeta;\n/** @type {?} */\n_InjectorBuilder.prototype._entryComponentFactories;\n/** @type {?} */\n_InjectorBuilder.prototype._bootstrapComponentFactories;\n/** @type {?} */\n_InjectorBuilder.prototype._sourceSpan;\n}\n\nclass InjectorProps {\n  static parent = o.THIS_EXPR.prop('parent');\n}\n\nfunction InjectorProps_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectorProps.parent;\n}\n\nclass InjectMethodVars {\n  static token = o.variable('token');\n  static notFoundResult = o.variable('notFoundResult');\n}\n\nfunction InjectMethodVars_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectMethodVars.token;\n/** @type {?} */\nInjectMethodVars.notFoundResult;\n}\n\n"]}