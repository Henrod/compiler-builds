{"version":3,"sources":["../../../../../modules/@angular/compiler/src/output/output_jit.ts"],"names":[],"mappings":"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","file":"output_jit.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {identifierName} from '../compile_metadata';\n\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport * as o from './output_ast';\n/**\n * @param {?} sourceUrl\n * @param {?} expr\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(\n    sourceUrl: string, expr: string, ctx: EmitterVisitorContext, vars: {[key: string]: any}): any {\n  const /** @type {?} */ fnBody =\n      `${ctx.toSource()}\\nreturn ${expr}\\n//# sourceURL=${sourceUrl}\\n${ctx.toSourceMapGenerator().toJsComment()}`;\n  const /** @type {?} */ fnArgNames: string[] = [];\n  const /** @type {?} */ fnArgValues: any[] = [];\n  for (const /** @type {?} */ argName in vars) {\n    fnArgNames.push(argName);\n    fnArgValues.push(vars[argName]);\n  }\n  return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVar\n * @return {?}\n */\nexport function jitStatements(\n    sourceUrl: string, statements: o.Statement[], resultVar: string): any {\n  const /** @type {?} */ converter = new JitEmitterVisitor();\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot([resultVar]);\n  converter.visitAllStatements(statements, ctx);\n  return evalExpression(sourceUrl, resultVar, ctx, converter.getArgs());\n}\nclass JitEmitterVisitor extends AbstractJsEmitterVisitor {\nprivate _evalArgNames: string[] = [];\nprivate _evalArgValues: any[] = [];\n/**\n * @return {?}\n */\ngetArgs(): {[key: string]: any} {\n    const /** @type {?} */ result: {[key: string]: any} = {};\n    for (let /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value.reference;\n    let /** @type {?} */ id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      const /** @type {?} */ name = identifierName(ast.value) || 'val';\n      this._evalArgNames.push(`jit_${name}${id}`);\n    }\n    ctx.print(ast, this._evalArgNames[id]);\n    return null;\n  }\n}\n\nfunction JitEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgNames;\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgValues;\n}\n\n"]}