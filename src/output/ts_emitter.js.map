{"version":3,"sources":["../../../../../modules/@angular/compiler/src/output/ts_emitter.ts"],"names":[],"mappings":"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","file":"ts_emitter.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileIdentifierMetadata} from '../compile_metadata';\nimport {isBlank, isPresent} from '../facade/lang';\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext, OutputEmitter} from './abstract_emitter';\nimport * as o from './output_ast';\nimport {ImportResolver} from './path_util';\n\nconst /** @type {?} */ _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function debugOutputAstAsTypeScript(ast: o.Statement | o.Expression | o.Type | any[]):\n    string {\n  const /** @type {?} */ converter = new _TsEmitterVisitor(_debugFilePath, {\n/**\n * @param {?} filePath\n * @param {?} containingFilePath\n * @return {?}\n */\nfileNameToModuleName(filePath: string, containingFilePath: string) { return filePath; },\n/**\n * @param {?} symbol\n * @return {?}\n */\ngetImportAs(symbol: StaticSymbol) { return null; },\n    getTypeArity: symbol => null\n  });\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot([]);\n  const /** @type {?} */ asts: any[] = Array.isArray(ast) ? ast : [ast];\n\n  asts.forEach((ast) => {\n    if (ast instanceof o.Statement) {\n      ast.visitStatement(converter, ctx);\n    } else if (ast instanceof o.Expression) {\n      ast.visitExpression(converter, ctx);\n    } else if (ast instanceof o.Type) {\n      ast.visitType(converter, ctx);\n    } else {\n      throw new Error(`Don't know how to print debug info for ${ast}`);\n    }\n  });\n  return ctx.toSource();\n}\nexport class TypeScriptEmitter implements OutputEmitter {\n/**\n * @param {?} _importResolver\n */\nconstructor(private _importResolver: ImportResolver) {}\n/**\n * @param {?} genFilePath\n * @param {?} stmts\n * @param {?} exportedVars\n * @return {?}\n */\nemitStatements(genFilePath: string, stmts: o.Statement[], exportedVars: string[]): string {\n    const /** @type {?} */ converter = new _TsEmitterVisitor(genFilePath, this._importResolver);\n\n    const /** @type {?} */ ctx = EmitterVisitorContext.createRoot(exportedVars);\n\n    converter.visitAllStatements(stmts, ctx);\n\n    const /** @type {?} */ srcParts: string[] = [];\n\n    converter.reexports.forEach((reexports, exportedFilePath) => {\n      const /** @type {?} */ reexportsCode =\n          reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n      srcParts.push(\n          `export {${reexportsCode}} from '${this._importResolver.fileNameToModuleName(exportedFilePath, genFilePath)}';`);\n    });\n\n    converter.importsWithPrefixes.forEach((prefix, importedFilePath) => {\n      // Note: can't write the real word for import as it screws up system.js auto detection...\n      srcParts.push(\n          `imp` +\n          `ort * as ${prefix} from '${this._importResolver.fileNameToModuleName(importedFilePath, genFilePath)}';`);\n    });\n\n    srcParts.push(ctx.toSource());\n\n    const /** @type {?} */ prefixLines = converter.reexports.size + converter.importsWithPrefixes.size;\n    const /** @type {?} */ sm = ctx.toSourceMapGenerator(null, prefixLines).toJsComment();\n    if (sm) {\n      srcParts.push(sm);\n    }\n\n    return srcParts.join('\\n');\n  }\n}\n\nfunction TypeScriptEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeScriptEmitter.prototype._importResolver;\n}\n\nclass _TsEmitterVisitor extends AbstractEmitterVisitor implements o.TypeVisitor {\nprivate typeExpression = 0;\n/**\n * @param {?} _genFilePath\n * @param {?} _importResolver\n */\nconstructor(private _genFilePath: string,\nprivate _importResolver: ImportResolver) {\n    super(false);\n  }\n\n  importsWithPrefixes = new Map<string, string>();\n  reexports = new Map<string, {name: string, as: string}[]>();\n/**\n * @param {?} t\n * @param {?} ctx\n * @param {?=} defaultType\n * @return {?}\n */\nvisitType(t: o.Type, ctx: EmitterVisitorContext, defaultType: string = 'any') {\n    if (isPresent(t)) {\n      this.typeExpression++;\n      t.visitType(this, ctx);\n      this.typeExpression--;\n    } else {\n      ctx.print(null, defaultType);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value;\n    if (isBlank(value) && ast.type != o.NULL_TYPE) {\n      ctx.print(ast, `(${value} as any)`);\n      return null;\n    }\n    return super.visitLiteralExpr(ast, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    if (ast.entries.length === 0) {\n      ctx.print(ast, '(');\n    }\n    const /** @type {?} */ result = super.visitLiteralArrayExpr(ast, ctx);\n    if (ast.entries.length === 0) {\n      ctx.print(ast, ' as any[])');\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (ctx.isExportedVar(stmt.name) && stmt.value instanceof o.ExternalExpr && !stmt.type) {\n      // check for a reexport\n      const {name, filePath, members} = this._resolveStaticSymbol(stmt.value.value);\n      if (members.length === 0 && filePath !== this._genFilePath) {\n        let /** @type {?} */ reexports = this.reexports.get(filePath);\n        if (!reexports) {\n          reexports = [];\n          this.reexports.set(filePath, reexports);\n        }\n        reexports.push({name, as: stmt.name});\n        return null;\n      }\n    }\n    if (ctx.isExportedVar(stmt.name)) {\n      ctx.print(stmt, `export `);\n    }\n    if (stmt.hasModifier(o.StmtModifier.Final)) {\n      ctx.print(stmt, `const`);\n    } else {\n      ctx.print(stmt, `var`);\n    }\n    ctx.print(stmt, ` ${stmt.name}:`);\n    this.visitType(stmt.type, ctx);\n    ctx.print(stmt, ` = `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(stmt, `;`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(<`);\n    ast.type.visitType(this, ctx);\n    ctx.print(ast, `>`);\n    ast.value.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    this.typeExpression++;\n    ast.classExpr.visitExpression(this, ctx);\n    this.typeExpression--;\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    if (ctx.isExportedVar(stmt.name)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `class ${stmt.name}`);\n    if (isPresent(stmt.parent)) {\n      ctx.print(stmt, ` extends `);\n      this.typeExpression++;\n      stmt.parent.visitExpression(this, ctx);\n      this.typeExpression--;\n    }\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n    if (isPresent(stmt.constructorMethod)) {\n      this._visitClassConstructor(stmt, ctx);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    ctx.popClass();\n    return null;\n  }\n/**\n * @param {?} field\n * @param {?} ctx\n * @return {?}\n */\nprivate _visitClassField(field: o.ClassField, ctx: EmitterVisitorContext) {\n    if (field.hasModifier(o.StmtModifier.Private)) {\n      // comment out as a workaround for #10967\n      ctx.print(null, `/*private*/ `);\n    }\n    ctx.print(null, field.name);\n    ctx.print(null, ':');\n    this.visitType(field.type, ctx);\n    ctx.println(null, `;`);\n  }\n/**\n * @param {?} getter\n * @param {?} ctx\n * @return {?}\n */\nprivate _visitClassGetter(getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    if (getter.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `get ${getter.name}()`);\n    ctx.print(null, ':');\n    this.visitType(getter.type, ctx);\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(getter.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nprivate _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `constructor(`);\n    this._visitParams(stmt.constructorMethod.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n/**\n * @param {?} method\n * @param {?} ctx\n * @return {?}\n */\nprivate _visitClassMethod(method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    if (method.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `${method.name}(`);\n    this._visitParams(method.params, ctx);\n    ctx.print(null, `):`);\n    this.visitType(method.type, ctx, 'void');\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(method.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(`);\n    this._visitParams(ast.params, ctx);\n    ctx.print(ast, `):`);\n    this.visitType(ast.type, ctx, 'void');\n    ctx.println(ast, ` => {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (ctx.isExportedVar(stmt.name)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.print(stmt, `):`);\n    this.visitType(stmt.type, ctx, 'void');\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const /** @type {?} */ catchStmts =\n        [ /** @type {?} */((<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])))].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitBuiltintType(type: o.BuiltinType, ctx: EmitterVisitorContext): any {\n    let /** @type {?} */ typeStr: string;\n    switch (type.name) {\n      case o.BuiltinTypeName.Bool:\n        typeStr = 'boolean';\n        break;\n      case o.BuiltinTypeName.Dynamic:\n        typeStr = 'any';\n        break;\n      case o.BuiltinTypeName.Function:\n        typeStr = 'Function';\n        break;\n      case o.BuiltinTypeName.Number:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.Int:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.String:\n        typeStr = 'string';\n        break;\n      default:\n        throw new Error(`Unsupported builtin type ${type.name}`);\n    }\n    ctx.print(null, typeStr);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExpressionType(ast: o.ExpressionType, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitArrayType(type: o.ArrayType, ctx: EmitterVisitorContext): any {\n    this.visitType(type.of, ctx);\n    ctx.print(null, `[]`);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitMapType(type: o.MapType, ctx: EmitterVisitorContext): any {\n    ctx.print(null, `{[key: string]:`);\n    this.visitType(type.valueType, ctx);\n    ctx.print(null, `}`);\n    return null;\n  }\n/**\n * @param {?} method\n * @return {?}\n */\ngetBuiltinMethodName(method: o.BuiltinMethod): string {\n    let /** @type {?} */ name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n/**\n * @param {?} params\n * @param {?} ctx\n * @return {?}\n */\nprivate _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => {\n      ctx.print(null, param.name);\n      ctx.print(null, ':');\n      this.visitType(param.type, ctx);\n    }, params, ctx, ',');\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _resolveStaticSymbol(value: CompileIdentifierMetadata):\n      {name: string, filePath: string, members?: string[], arity?: number} {\n    const /** @type {?} */ reference = value.reference;\n    if (!(reference instanceof StaticSymbol)) {\n      throw new Error(`Internal error: unknown identifier ${JSON.stringify(value)}`);\n    }\n    const /** @type {?} */ arity = this._importResolver.getTypeArity(reference) || undefined;\n    const /** @type {?} */ importReference = this._importResolver.getImportAs(reference) || reference;\n    return {\n      name: importReference.name,\n      filePath: importReference.filePath,\n      members: importReference.members, arity\n    };\n  }\n/**\n * @param {?} value\n * @param {?} typeParams\n * @param {?} ctx\n * @return {?}\n */\nprivate _visitIdentifier(\n      value: CompileIdentifierMetadata, typeParams: o.Type[], ctx: EmitterVisitorContext): void {\n    const {name, filePath, members, arity} = this._resolveStaticSymbol(value);\n    if (filePath != this._genFilePath) {\n      let /** @type {?} */ prefix = this.importsWithPrefixes.get(filePath);\n      if (isBlank(prefix)) {\n        prefix = `import${this.importsWithPrefixes.size}`;\n        this.importsWithPrefixes.set(filePath, prefix);\n      }\n      ctx.print(null, `${prefix}.`);\n    }\n    if (members.length) {\n      ctx.print(null, name);\n      ctx.print(null, '.');\n      ctx.print(null, members.join('.'));\n    } else {\n      ctx.print(null, name);\n    }\n\n    if (this.typeExpression > 0) {\n      // If we are in a type expression that refers to a generic type then supply\n      // the required type parameters. If there were not enough type parameters\n      // supplied, supply any as the type. Outside a type expression the reference\n      // should not supply type parameters and be treated as a simple value reference\n      // to the constructor function itself.\n      const /** @type {?} */ suppliedParameters = (typeParams && typeParams.length) || 0;\n      const /** @type {?} */ additionalParameters = (arity || 0) - suppliedParameters;\n      if (suppliedParameters > 0 || additionalParameters > 0) {\n        ctx.print(null, `<`);\n        if (suppliedParameters > 0) {\n          this.visitAllObjects(type => type.visitType(this, ctx), typeParams, ctx, ',');\n        }\n        if (additionalParameters > 0) {\n          for (let /** @type {?} */ i = 0; i < additionalParameters; i++) {\n            if (i > 0 || suppliedParameters > 0) ctx.print(null, ',');\n            ctx.print(null, 'any');\n          }\n        }\n        ctx.print(null, `>`);\n      }\n    }\n  }\n}\n\nfunction _TsEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_TsEmitterVisitor.prototype.typeExpression;\n/** @type {?} */\n_TsEmitterVisitor.prototype.importsWithPrefixes;\n/** @type {?} */\n_TsEmitterVisitor.prototype.reexports;\n/** @type {?} */\n_TsEmitterVisitor.prototype._genFilePath;\n/** @type {?} */\n_TsEmitterVisitor.prototype._importResolver;\n}\n\n"]}