{"version":3,"sources":["../../../../../modules/@angular/compiler/src/output/class_builder.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,KAAK,CAAA,MAAA,cAAA;AACZ;;;;GAIG;AACH,gCADC,MAOA;IACC,IAAM,gBAAgB,CADhB,UAAA,GAAa,MAAA,CAAO,UAAC,IAAa,EAAA,CAAG;IAE3C,IAAM,gBAAgB,CADhB,cAAA,GAAiB,MAAA,CAAO,MAAC,GAAQ,CAAA,CAAE,CAAC,UAAC,CAAU,MAAC,CAAM,UAAC,CAAU,CAAC,MAAC,EAAM,CAAE,GAAG,EAAA,CAAG;IAEvF,IAAM,gBAAgB,CADhB,OAAA,GAEF,uBAAuB,CADC,KAAC,CAAK,OAAC,CAAO,MAAC,CAAM,QAAC,CAAQ,GAAG,MAAA,CAAO,QAAC,GAAU,CAAA,MAAE,CAAM,QAAC,CAAQ,CAAC,CAAC;IAElG,IAAM,gBAAgB,CADhB,IAAA,GAEF,IADI,CAAA,CAAE,WAAC,CAAW,IAAC,EAAK,MAAA,CAAO,UAAC,IAAa,EAAA,EAAI,cAAA,CAAe,MAAC,CAAM,OAAC,CAAO,SAAC,CAAS,CAAC,CAAC;IAG/F,MAAM,CADC,IAAI,CAAA,CAAE,SAAC,CAEV,MAAM,CADC,IAAC,EAAK,MAAA,CAAO,MAAC,EAAO,OAAA,CAAQ,MAAC,EAAO,OAAA,CAAQ,OAAC,EAAQ,IAAA,EAAM,OAAA,CAAQ,OAAC,EAE5E,MAAM,CADC,SAAC,IAAY,EAAA,CAAG,CAAC;AAE9B,CAAC;AACD;;;GAGG;AACH,iCAJC,QAAA;IAKC,MAAM,CAJC;QAKL,MAAM,EAJE,MAAA,EAAA,EAAG,MAAC,WAAO,QAAG,CAAQ,GAAC,CAAG,UAAA,OAAC,IAAU,OAAA,OAAA,CAAQ,MAAC,IAAS,EAAA,EAAlB,CAAkB,CAAG,CAAC;QAKnE,OAAO,EAJE,MAAA,EAAA,EAAG,MAAC,WAAO,QAAG,CAAQ,GAAC,CAAG,UAAA,OAAC,IAAU,OAAA,OAAA,CAAQ,OAAC,IAAU,EAAA,EAAnB,CAAmB,CAAG,CAAC;QAKrE,OAAO,EAJE,MAAA,EAAA,EAAG,MAAC,WAAO,QAAG,CAAQ,GAAC,CAAG,UAAA,OAAC,IAAU,OAAA,OAAA,CAAQ,OAAC,IAAU,EAAA,EAAnB,CAAmB,CAAG,CAAC;QAKrE,SAAS,EAJE,MAAA,EAAA,EAAG,MAAC,WAAO,QAAG,CAAQ,GAAC,CAAG,UAAA,OAAC,IAAU,OAAA,OAAA,CAAQ,SAAC,IAAY,EAAA,EAArB,CAAqB,CAAG,CAAC;KAK1E,CAJC;;AAKJ,CAAC","file":"class_builder.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from './output_ast';\n/**\n * Create a new class stmts based on the given data.\n * @param {?} config\n * @return {?}\n */\nexport function createClassStmt(config: {\n  name: string,\n  parent?: o.Expression,\n  parentArgs?: o.Expression[],\n  ctorParams?: o.FnParam[],\n  builders: ClassBuilderPart | ClassBuilderPart[], modifiers?: o.StmtModifier[]\n}): o.ClassStmt {\n  const /** @type {?} */ parentArgs = config.parentArgs || [];\n  const /** @type {?} */ superCtorStmts = config.parent ? [o.SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n  const /** @type {?} */ builder =\n      concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n  const /** @type {?} */ ctor =\n      new o.ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n\n  return new o.ClassStmt(\n      config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods,\n      config.modifiers || []);\n}\n/**\n * @param {?} builders\n * @return {?}\n */\nfunction concatClassBuilderParts(builders: ClassBuilderPart[]) {\n  return {\n    fields: [].concat(...builders.map(builder => builder.fields || [])),\n    methods: [].concat(...builders.map(builder => builder.methods || [])),\n    getters: [].concat(...builders.map(builder => builder.getters || [])),\n    ctorStmts: [].concat(...builders.map(builder => builder.ctorStmts || [])),\n  };\n}\n\n/**\n * Collects data for a generated class.\n */\nexport interface ClassBuilderPart {\n  fields?: o.ClassField[];\n  methods?: o.ClassMethod[];\n  getters?: o.ClassGetter[];\n  ctorStmts?: o.Statement[];\n}\n\n/**\n * Collects data for a generated class.\n */\nexport interface ClassBuilder {\n  fields: o.ClassField[];\n  methods: o.ClassMethod[];\n  getters: o.ClassGetter[];\n  ctorStmts: o.Statement[];\n}\n"]}