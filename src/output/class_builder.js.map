{"version":3,"sources":["../../../../../modules/@angular/compiler/src/output/class_builder.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,KAAK,CAAA,MAAA,cAAA,CAAA;AACZ;;;;GAIG;AACH,MAAC,0BAAA,MAQA;IACC,MAAM,gBAAgB,CAAhB,UAAA,GAAa,MAAA,CAAO,UAAC,IAAa,EAAA,CAAG;IAC3C,MAAM,gBAAgB,CAAhB,cAAA,GAAiB,MAAA,CAAO,MAAC,GAAQ,CAAA,CAAE,CAAC,UAAC,CAAU,MAAC,CAAM,UAAC,CAAU,CAAC,MAAC,EAAM,CAAE,GAAG,EAAA,CAAG;IACvF,MAAM,gBAAgB,CAAhB,OAAA,GACF,uBAAuB,CAAC,KAAC,CAAK,OAAC,CAAO,MAAC,CAAM,QAAC,CAAQ,GAAG,MAAA,CAAO,QAAC,GAAU,CAAA,MAAE,CAAM,QAAC,CAAQ,CAAC,CAAC;IAClG,MAAM,gBAAgB,CAAhB,IAAA,GACF,IAAI,CAAA,CAAE,WAAC,CAAW,IAAC,EAAK,MAAA,CAAO,UAAC,IAAa,EAAA,EAAI,cAAA,CAAe,MAAC,CAAM,OAAC,CAAO,SAAC,CAAS,CAAC,CAAC;IAE/F,MAAM,CAAC,IAAI,CAAA,CAAE,SAAC,CACV,MAAM,CAAC,IAAC,EAAK,MAAA,CAAO,MAAC,EAAO,OAAA,CAAQ,MAAC,EAAO,OAAA,CAAQ,OAAC,EAAQ,IAAA,EAAM,OAAA,CAAQ,OAAC,EAC5E,MAAM,CAAC,SAAC,IAAY,EAAA,EAAI,MAAA,CAAO,UAAC,CAAU,CAAC;AACjD,CAAC;AACD;;;GAGG;AACH,iCAHC,QAAA;IAIC,MAAM,CAHC;QAIL,MAAM,EAHE,EAAA,CAAG,MAAC,CAAM,GAAC,QAAG,CAAQ,GAAC,CAAG,OAAC,IAAU,OAAA,CAAQ,MAAC,IAAS,EAAA,CAAG,CAAC;QAInE,OAAO,EAHE,EAAA,CAAG,MAAC,CAAM,GAAC,QAAG,CAAQ,GAAC,CAAG,OAAC,IAAU,OAAA,CAAQ,OAAC,IAAU,EAAA,CAAG,CAAC;QAIrE,OAAO,EAHE,EAAA,CAAG,MAAC,CAAM,GAAC,QAAG,CAAQ,GAAC,CAAG,OAAC,IAAU,OAAA,CAAQ,OAAC,IAAU,EAAA,CAAG,CAAC;QAIrE,SAAS,EAHE,EAAA,CAAG,MAAC,CAAM,GAAC,QAAG,CAAQ,GAAC,CAAG,OAAC,IAAU,OAAA,CAAQ,SAAC,IAAY,EAAA,CAAG,CAAC;KAI1E,CAHC;AAIJ,CAAC","file":"class_builder.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nimport * as o from './output_ast';\n/**\n * Create a new class stmts based on the given data.\n * @param {?} config\n * @return {?}\n */\nexport function createClassStmt(config: {\n  name: string,\n  parent?: o.Expression,\n  parentArgs?: o.Expression[],\n  ctorParams?: o.FnParam[],\n  builders: ClassBuilderPart | ClassBuilderPart[],\n  modifiers?: o.StmtModifier[],\n  sourceSpan?: ParseSourceSpan\n}): o.ClassStmt {\n  const /** @type {?} */ parentArgs = config.parentArgs || [];\n  const /** @type {?} */ superCtorStmts = config.parent ? [o.SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n  const /** @type {?} */ builder =\n      concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n  const /** @type {?} */ ctor =\n      new o.ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n\n  return new o.ClassStmt(\n      config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods,\n      config.modifiers || [], config.sourceSpan);\n}\n/**\n * @param {?} builders\n * @return {?}\n */\nfunction concatClassBuilderParts(builders: ClassBuilderPart[]) {\n  return {\n    fields: [].concat(...builders.map(builder => builder.fields || [])),\n    methods: [].concat(...builders.map(builder => builder.methods || [])),\n    getters: [].concat(...builders.map(builder => builder.getters || [])),\n    ctorStmts: [].concat(...builders.map(builder => builder.ctorStmts || [])),\n  };\n}\n\n/**\n * Collects data for a generated class.\n */\nexport interface ClassBuilderPart {\n  fields?: o.ClassField[];\n  methods?: o.ClassMethod[];\n  getters?: o.ClassGetter[];\n  ctorStmts?: o.Statement[];\n}\n\n/**\n * Collects data for a generated class.\n */\nexport interface ClassBuilder {\n  fields: o.ClassField[];\n  methods: o.ClassMethod[];\n  getters: o.ClassGetter[];\n  ctorStmts: o.Statement[];\n}\n"]}