{"version":3,"file":"directive_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/directive_resolver.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, Directive, HostBinding, HostListener, Injectable, Input, Output, Query, Type, resolveForwardRef} from '@angular/core';\n\nimport {StringMapWrapper} from './facade/collection';\nimport {stringify} from './facade/lang';\nimport {ReflectorReader, reflector} from './private_import_core';\nimport {splitAtColon} from './util';\n\n/*\n * Resolve a `Type` for {@link Directive}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\n\nexport class DirectiveResolver {\n/**\n * @param {?=} _reflector\n */\nconstructor(private _reflector: ReflectorReader = reflector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: Type<any>) {\n    const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n  }\n/**\n *  Return {@link Directive} for a given `Type`.\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): Directive {\n    const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    if (typeMetadata) {\n      const /** @type {?} */ metadata = typeMetadata.find(isDirectiveMetadata);\n      if (metadata) {\n        const /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n        return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n      }\n    }\n\n    if (throwIfNotFound) {\n      throw new Error(`No Directive annotation found on ${stringify(type)}`);\n    }\n\n    return null;\n  }\n/**\n * @param {?} dm\n * @param {?} propertyMetadata\n * @param {?} directiveType\n * @return {?}\n */\nprivate _mergeWithPropertyMetadata(\n      dm: Directive, propertyMetadata: {[key: string]: any[]},\n      directiveType: Type<any>): Directive {\n    const /** @type {?} */ inputs: string[] = [];\n    const /** @type {?} */ outputs: string[] = [];\n    const /** @type {?} */ host: {[key: string]: string} = {};\n    const /** @type {?} */ queries: {[key: string]: any} = {};\n\n    Object.keys(propertyMetadata).forEach((propName: string) => {\n\n      propertyMetadata[propName].forEach(a => {\n        if (a instanceof Input) {\n          if (a.bindingPropertyName) {\n            inputs.push(`${propName}: ${a.bindingPropertyName}`);\n          } else {\n            inputs.push(propName);\n          }\n        } else if (a instanceof Output) {\n          const /** @type {?} */ output: Output = a;\n          if (output.bindingPropertyName) {\n            outputs.push(`${propName}: ${output.bindingPropertyName}`);\n          } else {\n            outputs.push(propName);\n          }\n        } else if (a instanceof HostBinding) {\n          const /** @type {?} */ hostBinding: HostBinding = a;\n          if (hostBinding.hostPropertyName) {\n            const /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n            if (startWith === '(') {\n              throw new Error(`@HostBinding can not bind to events. Use @HostListener instead.`);\n            } else if (startWith === '[') {\n              throw new Error(\n                  `@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.`);\n            }\n            host[`[${hostBinding.hostPropertyName}]`] = propName;\n          } else {\n            host[`[${propName}]`] = propName;\n          }\n        } else if (a instanceof HostListener) {\n          const /** @type {?} */ hostListener: HostListener = a;\n          const /** @type {?} */ args = hostListener.args || [];\n          host[`(${hostListener.eventName})`] = `${propName}(${args.join(',')})`;\n        } else if (a instanceof Query) {\n          queries[propName] = a;\n        }\n      });\n    });\n    return this._merge(dm, inputs, outputs, host, queries, directiveType);\n  }\n/**\n * @param {?} def\n * @return {?}\n */\nprivate _extractPublicName(def: string) { return splitAtColon(def, [null, def])[1].trim(); }\n/**\n * @param {?} directive\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} host\n * @param {?} queries\n * @param {?} directiveType\n * @return {?}\n */\nprivate _merge(\n      directive: Directive, inputs: string[], outputs: string[], host: {[key: string]: string},\n      queries: {[key: string]: any}, directiveType: Type<any>): Directive {\n    const /** @type {?} */ mergedInputs: string[] = inputs;\n\n    if (directive.inputs) {\n      const /** @type {?} */ inputNames: string[] =\n          directive.inputs.map((def: string): string => this._extractPublicName(def));\n\n      inputs.forEach((inputDef: string) => {\n        const /** @type {?} */ publicName = this._extractPublicName(inputDef);\n        if (inputNames.indexOf(publicName) > -1) {\n          throw new Error(\n              `Input '${publicName}' defined multiple times in '${stringify(directiveType)}'`);\n        }\n      });\n\n      mergedInputs.unshift(...directive.inputs);\n    }\n\n    const /** @type {?} */ mergedOutputs: string[] = outputs;\n\n    if (directive.outputs) {\n      const /** @type {?} */ outputNames: string[] =\n          directive.outputs.map((def: string): string => this._extractPublicName(def));\n\n      outputs.forEach((outputDef: string) => {\n        const /** @type {?} */ publicName = this._extractPublicName(outputDef);\n        if (outputNames.indexOf(publicName) > -1) {\n          throw new Error(\n              `Output event '${publicName}' defined multiple times in '${stringify(directiveType)}'`);\n        }\n      });\n      mergedOutputs.unshift(...directive.outputs);\n    }\n\n    const /** @type {?} */ mergedHost = directive.host ? StringMapWrapper.merge(directive.host, host) : host;\n    const /** @type {?} */ mergedQueries =\n        directive.queries ? StringMapWrapper.merge(directive.queries, queries) : queries;\n\n    if (directive instanceof Component) {\n      return new Component({\n        selector: directive.selector,\n        inputs: mergedInputs,\n        outputs: mergedOutputs,\n        host: mergedHost,\n        exportAs: directive.exportAs,\n        moduleId: directive.moduleId,\n        queries: mergedQueries,\n        changeDetection: directive.changeDetection,\n        providers: directive.providers,\n        viewProviders: directive.viewProviders,\n        entryComponents: directive.entryComponents,\n        template: directive.template,\n        templateUrl: directive.templateUrl,\n        styles: directive.styles,\n        styleUrls: directive.styleUrls,\n        encapsulation: directive.encapsulation,\n        animations: directive.animations,\n        interpolation: directive.interpolation\n      });\n    } else {\n      return new Directive({\n        selector: directive.selector,\n        inputs: mergedInputs,\n        outputs: mergedOutputs,\n        host: mergedHost,\n        exportAs: directive.exportAs,\n        queries: mergedQueries,\n        providers: directive.providers\n      });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ReflectorReader, },\n];\n}\n\nfunction DirectiveResolver_tsickle_Closure_declarations() {\n /** @type {?} */\nDirectiveResolver.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nDirectiveResolver.ctorParameters;\n /** @type {?} */\nDirectiveResolver.prototype._reflector;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type: any): type is Directive {\n  return type instanceof Directive;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}