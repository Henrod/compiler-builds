{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler/view_builder.ts"],"names":[],"mappings":"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","file":"view_builder.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '@angular/core';\n\nimport {CompileDirectiveSummary, identifierModuleUrl, identifierName} from '../compile_metadata';\nimport {legacyCreateSharedBindingVariablesIfNeeded} from '../compiler_util/expression_converter';\nimport {createDiTokenExpression, createInlineArray} from '../compiler_util/identifier_util';\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, createIdentifier, identifierToken} from '../identifiers';\nimport {createClassStmt} from '../output/class_builder';\nimport * as o from '../output/output_ast';\nimport {ChangeDetectorStatus, ViewType, isDefaultChangeDetectionStrategy} from '../private_import_core';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\n\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileView, CompileViewRootNode, CompileViewRootNodeType} from './compile_view';\nimport {ChangeDetectorStatusEnum, InjectMethodVars, ViewConstructorVars, ViewEncapsulationEnum, ViewProperties, ViewTypeEnum} from './constants';\nimport {ComponentFactoryDependency, ComponentViewDependency, DirectiveWrapperDependency} from './deps';\n\nconst /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\nconst /** @type {?} */ NG_CONTAINER_TAG = 'ng-container';\n\nconst /** @type {?} */ parentRenderNodeVar = o.variable('parentRenderNode');\nconst /** @type {?} */ rootSelectorVar = o.variable('rootSelector');\n/**\n * @param {?} view\n * @param {?} template\n * @param {?} targetDependencies\n * @return {?}\n */\nexport function buildView(\n    view: CompileView, template: TemplateAst[],\n    targetDependencies:\n        Array<ComponentViewDependency|ComponentFactoryDependency|DirectiveWrapperDependency>):\n    number {\n  const /** @type {?} */ builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n  const /** @type {?} */ parentEl =\n      view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent;\n  templateVisitAll(builderVisitor, template, parentEl);\n  if (view.viewType === ViewType.EMBEDDED || view.viewType === ViewType.HOST) {\n    view.lastRenderNode = builderVisitor.getOrCreateLastRenderNode();\n  }\n  return builderVisitor.nestedViewCount;\n}\n/**\n * @param {?} view\n * @param {?} targetStatements\n * @return {?}\n */\nexport function finishView(view: CompileView, targetStatements: o.Statement[]) {\n  view.nodes.forEach((node) => {\n    if (node instanceof CompileElement) {\n      node.finish();\n      if (node.hasEmbeddedView) {\n        finishView(node.embeddedView, targetStatements);\n      }\n    }\n  });\n  view.finish();\n  createViewTopLevelStmts(view, targetStatements);\n}\nclass ViewBuilderVisitor implements TemplateAstVisitor {\n  nestedViewCount: number = 0;\n/**\n * @param {?} view\n * @param {?} targetDependencies\n */\nconstructor(\npublic view: CompileView,\npublic targetDependencies:\n          Array<ComponentViewDependency|ComponentFactoryDependency|DirectiveWrapperDependency>) {}\n/**\n * @param {?} parent\n * @return {?}\n */\nprivate _isRootNode(parent: CompileElement): boolean { return parent.view !== this.view; }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate _addRootNodeAndProject(node: CompileNode) {\n    const /** @type {?} */ projectedNode = _getOuterContainerOrSelf(node);\n    const /** @type {?} */ parent = projectedNode.parent;\n    const /** @type {?} */ ngContentIndex = ( /** @type {?} */((<any>projectedNode.sourceAst))).ngContentIndex;\n    const /** @type {?} */ viewContainer =\n        (node instanceof CompileElement && node.hasViewContainer) ? node.viewContainer : null;\n    if (this._isRootNode(parent)) {\n      if (this.view.viewType !== ViewType.COMPONENT) {\n        this.view.rootNodes.push(new CompileViewRootNode(\n            viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node,\n            viewContainer || node.renderNode));\n      }\n    } else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n      parent.addContentNode(\n          ngContentIndex,\n          new CompileViewRootNode(\n              viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node,\n              viewContainer || node.renderNode));\n    }\n  }\n/**\n * @param {?} parent\n * @return {?}\n */\nprivate _getParentRenderNode(parent: CompileElement): o.Expression {\n    parent = _getOuterContainerParentOrSelf(parent);\n    if (this._isRootNode(parent)) {\n      if (this.view.viewType === ViewType.COMPONENT) {\n        return parentRenderNodeVar;\n      } else {\n        // root node of an embedded/host view\n        return o.NULL_EXPR;\n      }\n    } else {\n      return isPresent(parent.component) &&\n              parent.component.template.encapsulation !== ViewEncapsulation.Native ?\n          o.NULL_EXPR :\n          parent.renderNode;\n    }\n  }\n/**\n * @return {?}\n */\ngetOrCreateLastRenderNode(): o.Expression {\n    const /** @type {?} */ view = this.view;\n    if (view.rootNodes.length === 0 ||\n        view.rootNodes[view.rootNodes.length - 1].type !== CompileViewRootNodeType.Node) {\n      const /** @type {?} */ fieldName = `_el_${view.nodes.length}`;\n      view.fields.push(\n          new o.ClassField(fieldName, o.importType(view.genConfig.renderTypes.renderElement)));\n      view.createMethod.addStmt(o.THIS_EXPR.prop(fieldName)\n                                    .set(ViewProperties.renderer.callMethod(\n                                        'createTemplateAnchor', [o.NULL_EXPR, o.NULL_EXPR]))\n                                    .toStmt());\n      view.rootNodes.push(\n          new CompileViewRootNode(CompileViewRootNodeType.Node, o.THIS_EXPR.prop(fieldName)));\n    }\n    return view.rootNodes[view.rootNodes.length - 1].expr;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    return this._visitText(ast, '', parent);\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitText(ast: TextAst, parent: CompileElement): any {\n    return this._visitText(ast, ast.value, parent);\n  }\n/**\n * @param {?} ast\n * @param {?} value\n * @param {?} parent\n * @return {?}\n */\nprivate _visitText(ast: TemplateAst, value: string, parent: CompileElement): o.Expression {\n    const /** @type {?} */ fieldName = `_text_${this.view.nodes.length}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderText)));\n    const /** @type {?} */ renderNode = o.THIS_EXPR.prop(fieldName);\n    const /** @type {?} */ compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n    const /** @type {?} */ createRenderNode =\n        o.THIS_EXPR.prop(fieldName)\n            .set(ViewProperties.renderer.callMethod(\n                'createText',\n                [\n                  this._getParentRenderNode(parent), o.literal(value),\n                  this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n                ]))\n            .toStmt();\n    this.view.nodes.push(compileNode);\n    this.view.createMethod.addStmt(createRenderNode);\n    this._addRootNodeAndProject(compileNode);\n    return renderNode;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, parent: CompileElement): any {\n    // the projected nodes originate from a different view, so we don't\n    // have debug information for them...\n    this.view.createMethod.resetDebugInfo(null, ast);\n    const /** @type {?} */ parentRenderNode = this._getParentRenderNode(parent);\n    if (parentRenderNode !== o.NULL_EXPR) {\n      this.view.createMethod.addStmt(\n          o.THIS_EXPR.callMethod('projectNodes', [parentRenderNode, o.literal(ast.index)])\n              .toStmt());\n    } else if (this._isRootNode(parent)) {\n      if (this.view.viewType !== ViewType.COMPONENT) {\n        // store root nodes only for embedded/host views\n        this.view.rootNodes.push(\n            new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n      }\n    } else {\n      if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n        parent.addContentNode(\n            ast.ngContentIndex,\n            new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: ElementAst, parent: CompileElement): any {\n    const /** @type {?} */ nodeIndex = this.view.nodes.length;\n    let /** @type {?} */ createRenderNodeExpr: o.Expression;\n    const /** @type {?} */ debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n    const /** @type {?} */ directives = ast.directives.map(directiveAst => directiveAst.directive);\n    const /** @type {?} */ component = directives.find(directive => directive.isComponent);\n    if (ast.name === NG_CONTAINER_TAG) {\n      createRenderNodeExpr = ViewProperties.renderer.callMethod(\n          'createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n    } else {\n      const /** @type {?} */ htmlAttrs = _readHtmlAttrs(ast.attrs);\n      const /** @type {?} */ attrNameAndValues = createInlineArray(\n          _mergeHtmlAndDirectiveAttrs(htmlAttrs, directives).map(v => o.literal(v)));\n      if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n        createRenderNodeExpr =\n            o.importExpr(createIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([\n              ViewProperties.renderer, o.literal(ast.name), attrNameAndValues, rootSelectorVar,\n              debugContextExpr\n            ]);\n      } else {\n        createRenderNodeExpr =\n            o.importExpr(createIdentifier(Identifiers.createRenderElement)).callFn([\n              ViewProperties.renderer, this._getParentRenderNode(parent), o.literal(ast.name),\n              attrNameAndValues, debugContextExpr\n            ]);\n      }\n    }\n    const /** @type {?} */ fieldName = `_el_${nodeIndex}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderElement)));\n    this.view.createMethod.addStmt(o.THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n\n    const /** @type {?} */ renderNode = o.THIS_EXPR.prop(fieldName);\n\n    const /** @type {?} */ compileElement = new CompileElement(\n        parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers,\n        ast.hasViewContainer, false, ast.references);\n    this.view.nodes.push(compileElement);\n    let /** @type {?} */ compViewExpr: o.ReadPropExpr = null;\n    if (isPresent(component)) {\n      this.targetDependencies.push(new ComponentViewDependency(component.type.reference));\n\n      compViewExpr = o.THIS_EXPR.prop(`compView_${nodeIndex}`);  // fix highlighting: `\n      this.view.fields.push(new o.ClassField(\n          compViewExpr.name,\n          o.importType(createIdentifier(Identifiers.AppView), [o.importType(component.type)])));\n      this.view.viewChildren.push(compViewExpr);\n      compileElement.setComponentView(compViewExpr);\n      this.view.createMethod.addStmt(\n          compViewExpr\n              .set(o.importExpr({reference: component.componentViewType}).instantiate([\n                ViewProperties.viewUtils, o.THIS_EXPR, o.literal(nodeIndex), renderNode\n              ]))\n              .toStmt());\n    }\n    compileElement.beforeChildren();\n    this._addRootNodeAndProject(compileElement);\n    templateVisitAll(this, ast.children, compileElement);\n    compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n\n    if (isPresent(compViewExpr)) {\n      this.view.createMethod.addStmt(\n          compViewExpr.callMethod('create', [compileElement.getComponent()]).toStmt());\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    const /** @type {?} */ nodeIndex = this.view.nodes.length;\n    const /** @type {?} */ fieldName = `_anchor_${nodeIndex}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderComment)));\n    this.view.createMethod.addStmt(\n        o.THIS_EXPR.prop(fieldName)\n            .set(ViewProperties.renderer.callMethod(\n                'createTemplateAnchor',\n                [\n                  this._getParentRenderNode(parent),\n                  this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n                ]))\n            .toStmt());\n    const /** @type {?} */ renderNode = o.THIS_EXPR.prop(fieldName);\n\n    const /** @type {?} */ templateVariableBindings = ast.variables.map(\n        varAst => [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]);\n\n    const /** @type {?} */ directives = ast.directives.map(directiveAst => directiveAst.directive);\n    const /** @type {?} */ compileElement = new CompileElement(\n        parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers,\n        ast.hasViewContainer, true, ast.references);\n    this.view.nodes.push(compileElement);\n\n    this.nestedViewCount++;\n    const /** @type {?} */ embeddedView = new CompileView(\n        this.view.component, this.view.genConfig, this.view.pipeMetas, o.NULL_EXPR,\n        this.view.animations, this.view.viewIndex + this.nestedViewCount, compileElement,\n        templateVariableBindings, this.targetDependencies);\n    this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n\n    compileElement.beforeChildren();\n    this._addRootNodeAndProject(compileElement);\n    compileElement.afterChildren(0);\n\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitAttr(ast: AttrAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} eventTargetAndNames\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitVariable(ast: VariableAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n}\n\nfunction ViewBuilderVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nViewBuilderVisitor.prototype.nestedViewCount;\n/** @type {?} */\nViewBuilderVisitor.prototype.view;\n/** @type {?} */\nViewBuilderVisitor.prototype.targetDependencies;\n}\n\n/**\n * Walks up the nodes while the direct parent is a container.\n * \n * Returns the outer container or the node itself when it is not a direct child of a container.\n * \n * \\@internal\n * @param {?} node\n * @return {?}\n */\nfunction _getOuterContainerOrSelf(node: CompileNode): CompileNode {\n  const /** @type {?} */ view = node.view;\n\n  while (_isNgContainer(node.parent, view)) {\n    node = node.parent;\n  }\n\n  return node;\n}\n/**\n * Walks up the nodes while they are container and returns the first parent which is not.\n * \n * Returns the parent of the outer container or the node itself when it is not a container.\n * \n * \\@internal\n * @param {?} el\n * @return {?}\n */\nfunction _getOuterContainerParentOrSelf(el: CompileElement): CompileElement {\n  const /** @type {?} */ view = el.view;\n\n  while (_isNgContainer(el, view)) {\n    el = el.parent;\n  }\n\n  return el;\n}\n/**\n * @param {?} node\n * @param {?} view\n * @return {?}\n */\nfunction _isNgContainer(node: CompileNode, view: CompileView): boolean {\n  return !node.isNull() && ( /** @type {?} */((<ElementAst>node.sourceAst))).name === NG_CONTAINER_TAG &&\n      node.view === view;\n}\n/**\n * @param {?} declaredHtmlAttrs\n * @param {?} directives\n * @return {?}\n */\nfunction _mergeHtmlAndDirectiveAttrs(\n    declaredHtmlAttrs: {[key: string]: string}, directives: CompileDirectiveSummary[]): string[] {\n  const /** @type {?} */ mapResult: {[key: string]: string} = {};\n  Object.keys(declaredHtmlAttrs).forEach(key => { mapResult[key] = declaredHtmlAttrs[key]; });\n  directives.forEach(directiveMeta => {\n    Object.keys(directiveMeta.hostAttributes).forEach(name => {\n      const /** @type {?} */ value = directiveMeta.hostAttributes[name];\n      const /** @type {?} */ prevValue = mapResult[name];\n      mapResult[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  const /** @type {?} */ arrResult: string[] = [];\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  Object.keys(mapResult).sort().forEach(\n      (attrName) => { arrResult.push(attrName, mapResult[attrName]); });\n  return arrResult;\n}\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction _readHtmlAttrs(attrs: AttrAst[]): {[key: string]: string} {\n  const /** @type {?} */ htmlAttrs: {[key: string]: string} = {};\n  attrs.forEach((ast) => { htmlAttrs[ast.name] = ast.value; });\n  return htmlAttrs;\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n/**\n * @param {?} view\n * @param {?} targetStatements\n * @return {?}\n */\nfunction createViewTopLevelStmts(view: CompileView, targetStatements: o.Statement[]) {\n  let /** @type {?} */ nodeDebugInfosVar: o.Expression = o.NULL_EXPR;\n  if (view.genConfig.genDebugInfo) {\n    nodeDebugInfosVar = o.variable(\n        `nodeDebugInfos_${identifierName(view.component.type)}${view.viewIndex}`);  // fix\n                                                                                    // highlighting:\n                                                                                    // `\n    targetStatements.push(\n        ( /** @type {?} */((<o.ReadVarExpr>nodeDebugInfosVar)))\n            .set(o.literalArr(\n                view.nodes.map(createStaticNodeDebugInfo),\n                new o.ArrayType(\n                    o.importType(createIdentifier(Identifiers.StaticNodeDebugInfo)),\n                    [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n\n\n  const /** @type {?} */ renderCompTypeVar: o.ReadVarExpr =\n      o.variable(view.renderComponentTypeName);  // fix highlighting: `\n  if (view.viewIndex === 0) {\n    let /** @type {?} */ templateUrlInfo: string;\n    if (view.component.template.templateUrl == identifierModuleUrl(view.component.type)) {\n      templateUrlInfo =\n          `${identifierModuleUrl(view.component.type)} class ${identifierName(view.component.type)} - inline template`;\n    } else {\n      templateUrlInfo = view.component.template.templateUrl;\n    }\n    targetStatements.push(\n        renderCompTypeVar\n            .set(o.importExpr(createIdentifier(Identifiers.createRenderComponentType)).callFn([\n              view.genConfig.genDebugInfo ? o.literal(templateUrlInfo) : o.literal(''),\n              o.literal(view.component.template.ngContentSelectors.length),\n              ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),\n              view.styles,\n              o.literalMap(\n                  view.animations.map((entry): [string, o.Expression] => [entry.name, entry.fnExp]),\n                  null, true),\n            ]))\n            .toDeclStmt(o.importType(createIdentifier(Identifiers.RenderComponentType))));\n  }\n\n  const /** @type {?} */ viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n  targetStatements.push(viewClass);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction createStaticNodeDebugInfo(node: CompileNode): o.Expression {\n  const /** @type {?} */ compileElement = node instanceof CompileElement ? node : null;\n  let /** @type {?} */ providerTokens: o.Expression[] = [];\n  let /** @type {?} */ componentToken: o.Expression = o.NULL_EXPR;\n  const /** @type {?} */ varTokenEntries: any[] = [];\n  if (isPresent(compileElement)) {\n    providerTokens =\n        compileElement.getProviderTokens().map((token) => createDiTokenExpression(token));\n\n    if (isPresent(compileElement.component)) {\n      componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n    }\n    Object.keys(compileElement.referenceTokens).forEach(varName => {\n      const /** @type {?} */ token = compileElement.referenceTokens[varName];\n      varTokenEntries.push(\n          [varName, isPresent(token) ? createDiTokenExpression(token) : o.NULL_EXPR]);\n    });\n  }\n  return o.importExpr(createIdentifier(Identifiers.StaticNodeDebugInfo))\n      .instantiate(\n          [\n            o.literalArr(providerTokens, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])),\n            componentToken,\n            o.literalMap(varTokenEntries, new o.MapType(o.DYNAMIC_TYPE, [o.TypeModifier.Const]))\n          ],\n          o.importType(\n              createIdentifier(Identifiers.StaticNodeDebugInfo), null, [o.TypeModifier.Const]));\n}\n/**\n * @param {?} view\n * @param {?} renderCompTypeVar\n * @param {?} nodeDebugInfosVar\n * @return {?}\n */\nfunction createViewClass(\n    view: CompileView, renderCompTypeVar: o.ReadVarExpr,\n    nodeDebugInfosVar: o.Expression): o.ClassStmt {\n  const /** @type {?} */ viewConstructorArgs = [\n    new o.FnParam(\n        ViewConstructorVars.viewUtils.name, o.importType(createIdentifier(Identifiers.ViewUtils))),\n    new o.FnParam(\n        ViewConstructorVars.parentView.name,\n        o.importType(createIdentifier(Identifiers.AppView), [o.DYNAMIC_TYPE])),\n    new o.FnParam(ViewConstructorVars.parentIndex.name, o.NUMBER_TYPE),\n    new o.FnParam(ViewConstructorVars.parentElement.name, o.DYNAMIC_TYPE)\n  ];\n  const /** @type {?} */ superConstructorArgs = [\n    o.variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n    ViewConstructorVars.viewUtils, ViewConstructorVars.parentView, ViewConstructorVars.parentIndex,\n    ViewConstructorVars.parentElement,\n    ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))\n  ];\n  if (view.genConfig.genDebugInfo) {\n    superConstructorArgs.push(nodeDebugInfosVar);\n  }\n  if (view.viewType === ViewType.EMBEDDED) {\n    viewConstructorArgs.push(new o.FnParam(\n        'declaredViewContainer', o.importType(createIdentifier(Identifiers.ViewContainer))));\n    superConstructorArgs.push(o.variable('declaredViewContainer'));\n  }\n  const /** @type {?} */ viewMethods = [\n    new o.ClassMethod(\n        'createInternal', [new o.FnParam(rootSelectorVar.name, o.STRING_TYPE)],\n        generateCreateMethod(view),\n        o.importType(createIdentifier(Identifiers.ComponentRef), [o.DYNAMIC_TYPE])),\n    new o.ClassMethod(\n        'injectorGetInternal',\n        [\n          new o.FnParam(InjectMethodVars.token.name, o.DYNAMIC_TYPE),\n          // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n          new o.FnParam(InjectMethodVars.requestNodeIndex.name, o.NUMBER_TYPE),\n          new o.FnParam(InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)\n        ],\n        addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult),\n        o.DYNAMIC_TYPE),\n    new o.ClassMethod('detectChangesInternal', [], generateDetectChangesMethod(view)),\n    new o.ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n    new o.ClassMethod('destroyInternal', [], generateDestroyMethod(view)),\n    new o.ClassMethod('detachInternal', [], view.detachMethod.finish()),\n    generateVisitRootNodesMethod(view), generateVisitProjectableNodesMethod(view),\n    generateCreateEmbeddedViewsMethod(view)\n  ].filter((method) => method.body.length > 0);\n  const /** @type {?} */ superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n\n  const /** @type {?} */ viewClass = createClassStmt({\n    name: view.className,\n    parent: o.importExpr(createIdentifier(superClass), [getContextType(view)]),\n    parentArgs: superConstructorArgs,\n    ctorParams: viewConstructorArgs,\n    builders: [{methods: viewMethods}, view]\n  });\n  return viewClass;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateDestroyMethod(view: CompileView): o.Statement[] {\n  const /** @type {?} */ stmts: o.Statement[] = [];\n  view.viewContainers.forEach((viewContainer) => {\n    stmts.push(viewContainer.callMethod('destroyNestedViews', []).toStmt());\n  });\n  view.viewChildren.forEach(\n      (viewChild) => { stmts.push(viewChild.callMethod('destroy', []).toStmt()); });\n  stmts.push(...view.destroyMethod.finish());\n  return stmts;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateCreateMethod(view: CompileView): o.Statement[] {\n  let /** @type {?} */ parentRenderNodeExpr: o.Expression = o.NULL_EXPR;\n  let /** @type {?} */ parentRenderNodeStmts: any[] = [];\n  if (view.viewType === ViewType.COMPONENT) {\n    parentRenderNodeExpr =\n        ViewProperties.renderer.callMethod('createViewRoot', [o.THIS_EXPR.prop('parentElement')]);\n    parentRenderNodeStmts =\n        [parentRenderNodeVar.set(parentRenderNodeExpr)\n             .toDeclStmt(\n                 o.importType(view.genConfig.renderTypes.renderNode), [o.StmtModifier.Final])];\n  }\n  let /** @type {?} */ resultExpr: o.Expression;\n  if (view.viewType === ViewType.HOST) {\n    const /** @type {?} */ hostEl = /** @type {?} */(( <CompileElement>view.nodes[0]));\n    resultExpr =\n        o.importExpr(createIdentifier(Identifiers.ComponentRef_), [o.DYNAMIC_TYPE]).instantiate([\n          o.literal(hostEl.nodeIndex), o.THIS_EXPR, hostEl.renderNode, hostEl.getComponent()\n        ]);\n  } else {\n    resultExpr = o.NULL_EXPR;\n  }\n  const /** @type {?} */ allNodesExpr: o.Expression =\n      ViewProperties.renderer.cast(o.DYNAMIC_TYPE)\n          .prop('directRenderer')\n          .conditional(o.NULL_EXPR, o.literalArr(view.nodes.map(node => node.renderNode)));\n\n  return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n    o.THIS_EXPR\n        .callMethod(\n            'init',\n            [\n              view.lastRenderNode,\n              allNodesExpr,\n              view.disposables.length ? o.literalArr(view.disposables) : o.NULL_EXPR,\n            ])\n        .toStmt(),\n    new o.ReturnStatement(resultExpr)\n  ]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateDetectChangesMethod(view: CompileView): o.Statement[] {\n  const /** @type {?} */ stmts: any[] = [];\n  if (view.animationBindingsMethod.isEmpty() && view.detectChangesInInputsMethod.isEmpty() &&\n      view.updateContentQueriesMethod.isEmpty() &&\n      view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n      view.detectChangesRenderPropertiesMethod.isEmpty() &&\n      view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty() &&\n      view.viewContainers.length === 0 && view.viewChildren.length === 0) {\n    return stmts;\n  }\n  stmts.push(...view.animationBindingsMethod.finish());\n  stmts.push(...view.detectChangesInInputsMethod.finish());\n  view.viewContainers.forEach((viewContainer) => {\n    stmts.push(\n        viewContainer.callMethod('detectChangesInNestedViews', [ViewProperties.throwOnChange])\n            .toStmt());\n  });\n  const /** @type {?} */ afterContentStmts = view.updateContentQueriesMethod.finish().concat(\n      view.afterContentLifecycleCallbacksMethod.finish());\n  if (afterContentStmts.length > 0) {\n    stmts.push(new o.IfStmt(o.not(ViewProperties.throwOnChange), afterContentStmts));\n  }\n  stmts.push(...view.detectChangesRenderPropertiesMethod.finish());\n  view.viewChildren.forEach((viewChild) => {\n    stmts.push(\n        viewChild.callMethod('internalDetectChanges', [ViewProperties.throwOnChange]).toStmt());\n  });\n  const /** @type {?} */ afterViewStmts =\n      view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n  if (afterViewStmts.length > 0) {\n    stmts.push(new o.IfStmt(o.not(ViewProperties.throwOnChange), afterViewStmts));\n  }\n\n  const /** @type {?} */ varStmts = legacyCreateSharedBindingVariablesIfNeeded(stmts);\n  return varStmts.concat(stmts);\n}\n/**\n * @param {?} statements\n * @param {?} value\n * @return {?}\n */\nfunction addReturnValuefNotEmpty(statements: o.Statement[], value: o.Expression): o.Statement[] {\n  if (statements.length > 0) {\n    return statements.concat([new o.ReturnStatement(value)]);\n  } else {\n    return statements;\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getContextType(view: CompileView): o.Type {\n  if (view.viewType === ViewType.COMPONENT) {\n    return o.importType(view.component.type);\n  }\n  return o.DYNAMIC_TYPE;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getChangeDetectionMode(view: CompileView): ChangeDetectorStatus {\n  let /** @type {?} */ mode: ChangeDetectorStatus;\n  if (view.viewType === ViewType.COMPONENT) {\n    mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n        ChangeDetectorStatus.CheckAlways :\n        ChangeDetectorStatus.CheckOnce;\n  } else {\n    mode = ChangeDetectorStatus.CheckAlways;\n  }\n  return mode;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateVisitRootNodesMethod(view: CompileView): o.ClassMethod {\n  const /** @type {?} */ cbVar = o.variable('cb');\n  const /** @type {?} */ ctxVar = o.variable('ctx');\n  const /** @type {?} */ stmts: o.Statement[] = generateVisitNodesStmts(view.rootNodes, cbVar, ctxVar);\n  return new o.ClassMethod(\n      'visitRootNodesInternal',\n      [new o.FnParam(cbVar.name, o.DYNAMIC_TYPE), new o.FnParam(ctxVar.name, o.DYNAMIC_TYPE)],\n      stmts);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateVisitProjectableNodesMethod(view: CompileView): o.ClassMethod {\n  const /** @type {?} */ nodeIndexVar = o.variable('nodeIndex');\n  const /** @type {?} */ ngContentIndexVar = o.variable('ngContentIndex');\n  const /** @type {?} */ cbVar = o.variable('cb');\n  const /** @type {?} */ ctxVar = o.variable('ctx');\n  const /** @type {?} */ stmts: o.Statement[] = [];\n  view.nodes.forEach((node) => {\n    if (node instanceof CompileElement && node.component) {\n      node.contentNodesByNgContentIndex.forEach((projectedNodes, ngContentIndex) => {\n        stmts.push(new o.IfStmt(\n            nodeIndexVar.equals(o.literal(node.nodeIndex))\n                .and(ngContentIndexVar.equals(o.literal(ngContentIndex))),\n            generateVisitNodesStmts(projectedNodes, cbVar, ctxVar)));\n      });\n    }\n  });\n  return new o.ClassMethod(\n      'visitProjectableNodesInternal',\n      [\n        new o.FnParam(nodeIndexVar.name, o.NUMBER_TYPE),\n        new o.FnParam(ngContentIndexVar.name, o.NUMBER_TYPE),\n        new o.FnParam(cbVar.name, o.DYNAMIC_TYPE), new o.FnParam(ctxVar.name, o.DYNAMIC_TYPE)\n      ],\n      stmts);\n}\n/**\n * @param {?} nodes\n * @param {?} cb\n * @param {?} ctx\n * @return {?}\n */\nfunction generateVisitNodesStmts(\n    nodes: CompileViewRootNode[], cb: o.Expression, ctx: o.Expression): o.Statement[] {\n  const /** @type {?} */ stmts: o.Statement[] = [];\n  nodes.forEach((node) => {\n    switch (node.type) {\n      case CompileViewRootNodeType.Node:\n        stmts.push(cb.callFn([node.expr, ctx]).toStmt());\n        break;\n      case CompileViewRootNodeType.ViewContainer:\n        stmts.push(cb.callFn([node.expr.prop('nativeElement'), ctx]).toStmt());\n        stmts.push(node.expr.callMethod('visitNestedViewRootNodes', [cb, ctx]).toStmt());\n        break;\n      case CompileViewRootNodeType.NgContent:\n        stmts.push(\n            o.THIS_EXPR.callMethod('visitProjectedNodes', [o.literal(node.ngContentIndex), cb, ctx])\n                .toStmt());\n        break;\n    }\n  });\n  return stmts;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateCreateEmbeddedViewsMethod(view: CompileView): o.ClassMethod {\n  const /** @type {?} */ nodeIndexVar = o.variable('nodeIndex');\n  const /** @type {?} */ stmts: o.Statement[] = [];\n  view.nodes.forEach((node) => {\n    if (node instanceof CompileElement) {\n      if (node.embeddedView) {\n        stmts.push(new o.IfStmt(\n            nodeIndexVar.equals(o.literal(node.nodeIndex)),\n            [new o.ReturnStatement(node.embeddedView.classExpr.instantiate([\n              ViewProperties.viewUtils, o.THIS_EXPR, o.literal(node.nodeIndex), node.renderNode,\n              node.viewContainer\n            ]))]));\n      }\n    }\n  });\n  if (stmts.length > 0) {\n    stmts.push(new o.ReturnStatement(o.NULL_EXPR));\n  }\n  return new o.ClassMethod(\n      'createEmbeddedViewInternal', [new o.FnParam(nodeIndexVar.name, o.NUMBER_TYPE)], stmts,\n      o.importType(createIdentifier(Identifiers.AppView), [o.DYNAMIC_TYPE]));\n}\n"]}