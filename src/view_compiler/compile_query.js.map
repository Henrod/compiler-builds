{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler/compile_query.ts"],"names":[],"mappings":"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","file":"compile_query.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileQueryMetadata, tokenReference} from '../compile_metadata';\nimport {ListWrapper} from '../facade/collection';\nimport {Identifiers, createIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompileView} from './compile_view';\nimport {getPropertyInView} from './util';\nclass ViewQueryValues {\n/**\n * @param {?} view\n * @param {?} values\n */\nconstructor(public view: CompileView,\npublic values: Array<o.Expression|ViewQueryValues>) {}\n}\n\nfunction ViewQueryValues_tsickle_Closure_declarations() {\n/** @type {?} */\nViewQueryValues.prototype.view;\n/** @type {?} */\nViewQueryValues.prototype.values;\n}\n\nexport class CompileQuery {\nprivate _values: ViewQueryValues;\n/**\n * @param {?} meta\n * @param {?} queryList\n * @param {?} ownerDirectiveExpression\n * @param {?} view\n */\nconstructor(\npublic meta: CompileQueryMetadata,\npublic queryList: o.Expression,\npublic ownerDirectiveExpression: o.Expression,\npublic view: CompileView) {\n    this._values = new ViewQueryValues(view, []);\n  }\n/**\n * @param {?} value\n * @param {?} view\n * @return {?}\n */\naddValue(value: o.Expression, view: CompileView) {\n    let /** @type {?} */ currentView = view;\n    const /** @type {?} */ elPath: CompileElement[] = [];\n    while (currentView && currentView !== this.view) {\n      const /** @type {?} */ parentEl = currentView.declarationElement;\n      elPath.unshift(parentEl);\n      currentView = parentEl.view;\n    }\n    const /** @type {?} */ queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n\n    let /** @type {?} */ viewValues = this._values;\n    elPath.forEach((el) => {\n      const /** @type {?} */ last =\n          viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n      if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n        viewValues = last;\n      } else {\n        const /** @type {?} */ newViewValues = new ViewQueryValues(el.embeddedView, []);\n        viewValues.values.push(newViewValues);\n        viewValues = newViewValues;\n      }\n    });\n    viewValues.values.push(value);\n\n    if (elPath.length > 0) {\n      view.dirtyParentQueriesMethod.addStmt(\n          queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n    }\n  }\n/**\n * @return {?}\n */\nprivate _isStatic(): boolean {\n    return !this._values.values.some(value => value instanceof ViewQueryValues);\n  }\n/**\n * @param {?} targetStaticMethod\n * @param {?} targetDynamicMethod\n * @return {?}\n */\ngenerateStatements(targetStaticMethod: CompileMethod, targetDynamicMethod: CompileMethod) {\n    const /** @type {?} */ values = createQueryValues(this._values);\n    const /** @type {?} */ updateStmts = [this.queryList.callMethod('reset', [o.literalArr(values)]).toStmt()];\n    if (this.ownerDirectiveExpression) {\n      const /** @type {?} */ valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n      updateStmts.push(\n          this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n    }\n    if (!this.meta.first) {\n      updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n    }\n    if (this.meta.first && this._isStatic()) {\n      // for queries that don't change and the user asked for a single element,\n      // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n      // we don't do this for QueryLists for now as this would break the timing when\n      // we call QueryList listeners...\n      targetStaticMethod.addStmts(updateStmts);\n    } else {\n      targetDynamicMethod.addStmt(new o.IfStmt(this.queryList.prop('dirty'), updateStmts));\n    }\n  }\n}\n\nfunction CompileQuery_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileQuery.prototype._values;\n/** @type {?} */\nCompileQuery.prototype.meta;\n/** @type {?} */\nCompileQuery.prototype.queryList;\n/** @type {?} */\nCompileQuery.prototype.ownerDirectiveExpression;\n/** @type {?} */\nCompileQuery.prototype.view;\n}\n\n/**\n * @param {?} viewValues\n * @return {?}\n */\nfunction createQueryValues(viewValues: ViewQueryValues): o.Expression[] {\n  return ListWrapper.flatten(viewValues.values.map((entry) => {\n    if (entry instanceof ViewQueryValues) {\n      return mapNestedViews(\n          entry.view.declarationElement.viewContainer, entry.view, createQueryValues(entry));\n    } else {\n      return /** @type {?} */(( <o.Expression>entry));\n    }\n  }));\n}\n/**\n * @param {?} viewContainer\n * @param {?} view\n * @param {?} expressions\n * @return {?}\n */\nfunction mapNestedViews(\n    viewContainer: o.Expression, view: CompileView, expressions: o.Expression[]): o.Expression {\n  const /** @type {?} */ adjustedExpressions: o.Expression[] = expressions.map(\n      (expr) => o.replaceVarInExpression(o.THIS_EXPR.name, o.variable('nestedView'), expr));\n  return viewContainer.callMethod('mapNestedViews', [\n    o.variable(view.className),\n    o.fn(\n        [new o.FnParam('nestedView', view.classType)],\n        [new o.ReturnStatement(o.literalArr(adjustedExpressions))], o.DYNAMIC_TYPE)\n  ]);\n}\n/**\n * @param {?} propertyName\n * @param {?} compileView\n * @return {?}\n */\nexport function createQueryList(propertyName: string, compileView: CompileView): o.Expression {\n  compileView.fields.push(new o.ClassField(\n      propertyName, o.importType(createIdentifier(Identifiers.QueryList), [o.DYNAMIC_TYPE])));\n  const /** @type {?} */ expr = o.THIS_EXPR.prop(propertyName);\n  compileView.createMethod.addStmt(\n      o.THIS_EXPR.prop(propertyName)\n          .set(o.importExpr(createIdentifier(Identifiers.QueryList), [o.DYNAMIC_TYPE]).instantiate([\n          ]))\n          .toStmt());\n  return expr;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nexport function addQueryToTokenMap(map: Map<any, CompileQuery[]>, query: CompileQuery) {\n  query.meta.selectors.forEach((selector) => {\n    let /** @type {?} */ entry = map.get(tokenReference(selector));\n    if (!entry) {\n      entry = [];\n      map.set(tokenReference(selector), entry);\n    }\n    entry.push(query);\n  });\n}\n"]}