{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler/event_binder.ts"],"names":[],"mappings":"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","file":"event_binder.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventHandlerVars, convertActionBinding} from '../compiler_util/expression_converter';\nimport {createInlineArray} from '../compiler_util/identifier_util';\nimport {DirectiveWrapperExpressions} from '../directive_wrapper_compiler';\nimport {Identifiers, createIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {BoundEventAst, DirectiveAst} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {getHandleEventMethodName} from './util';\n/**\n * @param {?} boundEvents\n * @param {?} directives\n * @param {?} compileElement\n * @param {?} bindToRenderer\n * @return {?}\n */\nexport function bindOutputs(\n    boundEvents: BoundEventAst[], directives: DirectiveAst[], compileElement: CompileElement,\n    bindToRenderer: boolean): boolean {\n  const /** @type {?} */ usedEvents = collectEvents(boundEvents, directives);\n  if (!usedEvents.size) {\n    return false;\n  }\n  if (bindToRenderer) {\n    subscribeToRenderEvents(usedEvents, compileElement);\n  }\n  subscribeToDirectiveEvents(usedEvents, directives, compileElement);\n  generateHandleEventMethod(boundEvents, directives, compileElement);\n  return true;\n}\n/**\n * @param {?} boundEvents\n * @param {?} directives\n * @return {?}\n */\nfunction collectEvents(\n    boundEvents: BoundEventAst[], directives: DirectiveAst[]): Map<string, EventSummary> {\n  const /** @type {?} */ usedEvents = new Map<string, EventSummary>();\n  boundEvents.forEach((event) => { usedEvents.set(event.fullName, event); });\n  directives.forEach((dirAst) => {\n    dirAst.hostEvents.forEach((event) => { usedEvents.set(event.fullName, event); });\n  });\n  return usedEvents;\n}\n/**\n * @param {?} usedEvents\n * @param {?} compileElement\n * @return {?}\n */\nfunction subscribeToRenderEvents(\n    usedEvents: Map<string, EventSummary>, compileElement: CompileElement) {\n  const /** @type {?} */ eventAndTargetExprs: o.Expression[] = [];\n  usedEvents.forEach((event) => {\n    if (!event.phase) {\n      eventAndTargetExprs.push(o.literal(event.name), o.literal(event.target));\n    }\n  });\n  if (eventAndTargetExprs.length) {\n    const /** @type {?} */ disposableVar = o.variable(`disposable_${compileElement.view.disposables.length}`);\n    compileElement.view.disposables.push(disposableVar);\n    compileElement.view.createMethod.addStmt(\n        disposableVar\n            .set(o.importExpr(createIdentifier(Identifiers.subscribeToRenderElement)).callFn([\n              o.THIS_EXPR, compileElement.renderNode, createInlineArray(eventAndTargetExprs),\n              handleEventExpr(compileElement)\n            ]))\n            .toDeclStmt(o.FUNCTION_TYPE, [o.StmtModifier.Private]));\n  }\n}\n/**\n * @param {?} usedEvents\n * @param {?} directives\n * @param {?} compileElement\n * @return {?}\n */\nfunction subscribeToDirectiveEvents(\n    usedEvents: Map<string, EventSummary>, directives: DirectiveAst[],\n    compileElement: CompileElement) {\n  const /** @type {?} */ usedEventNames = Array.from(usedEvents.keys());\n  directives.forEach((dirAst) => {\n    const /** @type {?} */ dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n    compileElement.view.createMethod.addStmts(DirectiveWrapperExpressions.subscribe(\n        dirAst.directive, dirAst.hostProperties, usedEventNames, dirWrapper, o.THIS_EXPR,\n        handleEventExpr(compileElement)));\n  });\n}\n/**\n * @param {?} boundEvents\n * @param {?} directives\n * @param {?} compileElement\n * @return {?}\n */\nfunction generateHandleEventMethod(\n    boundEvents: BoundEventAst[], directives: DirectiveAst[], compileElement: CompileElement) {\n  const /** @type {?} */ hasComponentHostListener =\n      directives.some((dirAst) => dirAst.hostEvents.some((event) => dirAst.directive.isComponent));\n\n  const /** @type {?} */ markPathToRootStart = hasComponentHostListener ? compileElement.compViewExpr : o.THIS_EXPR;\n  const /** @type {?} */ handleEventStmts = new CompileMethod(compileElement.view);\n  handleEventStmts.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n  handleEventStmts.push(markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt());\n  const /** @type {?} */ eventNameVar = o.variable('eventName');\n  const /** @type {?} */ resultVar = o.variable('result');\n  handleEventStmts.push(resultVar.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE));\n\n  directives.forEach((dirAst, dirIdx) => {\n    const /** @type {?} */ dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n    if (dirAst.hostEvents.length > 0) {\n      handleEventStmts.push(\n          resultVar\n              .set(DirectiveWrapperExpressions\n                       .handleEvent(\n                           dirAst.hostEvents, dirWrapper, eventNameVar, EventHandlerVars.event)\n                       .and(resultVar))\n              .toStmt());\n    }\n  });\n  boundEvents.forEach((renderEvent, renderEventIdx) => {\n    const /** @type {?} */ evalResult = convertActionBinding(\n        compileElement.view, compileElement.view, compileElement.view.componentContext,\n        renderEvent.handler, `sub_${renderEventIdx}`);\n    const /** @type {?} */ trueStmts = evalResult.stmts;\n    if (evalResult.preventDefault) {\n      trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n    }\n    // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n    handleEventStmts.push(\n        new o.IfStmt(eventNameVar.equals(o.literal(renderEvent.fullName)), trueStmts));\n  });\n\n  handleEventStmts.push(new o.ReturnStatement(resultVar));\n  compileElement.view.methods.push(new o.ClassMethod(\n      getHandleEventMethodName(compileElement.nodeIndex),\n      [\n        new o.FnParam(eventNameVar.name, o.STRING_TYPE),\n        new o.FnParam(EventHandlerVars.event.name, o.DYNAMIC_TYPE)\n      ],\n      handleEventStmts.finish(), o.BOOL_TYPE));\n}\n/**\n * @param {?} compileElement\n * @return {?}\n */\nfunction handleEventExpr(compileElement: CompileElement) {\n  const /** @type {?} */ handleEventMethodName = getHandleEventMethodName(compileElement.nodeIndex);\n  return o.THIS_EXPR.callMethod('eventHandler', [o.THIS_EXPR.prop(handleEventMethodName)]);\n}\n\ntype EventSummary = {\n  name: string,\n  target: string,\n  phase: string\n};"]}