{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler/constants.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAII,EAAA,oBAAE,EAAoB,MAAA,kCAAA;OACtB,EAAA,WAAE,EAAW,MAAA,gBAAA;OACb,KAAK,CAAA,MAAA,sBAAA;AAEZ;IAAA;IAQA,CAAC;IAPD;;;OAGG;IAFA,sBAAA,GAGH,UAHG,KAAA;QAIC,MAAM,CAHC,oBAAA,CAAqB,WAAC,CAAW,QAAC,EAAS,KAAA,CAAM,CAAC;IAI3D,CAAC;IACH,mBAAC;AAAD,CARA,AAQC,IAAA;AACD;IAAA;IAQA,CAAC;IAPD;;;OAGG;IALA,+BAAA,GAMH,UANG,KAAA;QAOC,MAAM,CANC,oBAAA,CAAqB,WAAC,CAAW,iBAAC,EAAkB,KAAA,CAAM,CAAC;IAOpE,CAAC;IACH,4BAAC;AAAD,CARA,AAQC,IAAA;AACD;IAAA;IAQA,CAAC;IAPD;;;OAGG;IARA,kCAAA,GASH,UATG,KAAA;QAUC,MAAM,CATC,oBAAA,CAAqB,WAAC,CAAW,oBAAC,EAAqB,KAAA,CAAM,CAAC;IAUvE,CAAC;IACH,+BAAC;AAAD,CARA,AAQC,IAAA;AACD;IAAA;IAKA,CAAC;IAZQ,6BAAA,GAAY,CAAA,CAAE,QAAC,CAAQ,WAAC,CAAW,CAAC;IACpC,8BAAA,GAAa,CAAA,CAAE,QAAC,CAAQ,YAAC,CAAY,CAAC;IACtC,+BAAA,GAAc,CAAA,CAAE,QAAC,CAAQ,aAAC,CAAa,CAAC;IACxC,iCAAA,GAAgB,CAAA,CAAE,QAAC,CAAQ,eAAC,CAAe,CAAC;IASrD,0BAAC;AAAD,CALA,AAKC,IAAA;AAED;IACA,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC;IAC9B,gBAAgB;IAChB,mBAAmB,CAAC,UAAU,CAAC;IAC/B,gBAAgB;IAChB,mBAAmB,CAAC,WAAW,CAAC;IAChC,gBAAgB;IAChB,mBAAmB,CAAC,aAAa,CAAC;AAClC,CAAC;AAED;IAAA;IAIA,CAAC;IAtBQ,uBAAA,GAAW,CAAA,CAAE,SAAC,CAAS,IAAC,CAAI,UAAC,CAAU,CAAC;IACxC,wBAAA,GAAY,CAAA,CAAE,SAAC,CAAS,IAAC,CAAI,WAAC,CAAW,CAAC;IAC1C,4BAAA,GAAgB,CAAA,CAAE,SAAC,CAAS,IAAC,CAAI,eAAC,CAAe,CAAC;IAoB3D,qBAAC;AAAD,CAJA,AAIC,IAAA;AAED;IACA,gBAAgB;IAChB,cAAc,CAAC,QAAQ,CAAC;IACxB,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC;IACzB,gBAAgB;IAChB,cAAc,CAAC,aAAa,CAAC;AAC7B,CAAC;AAED;IAAA;IAIA,CAAC;IA/BQ,sBAAA,GAAQ,CAAA,CAAE,QAAC,CAAQ,OAAC,CAAO,CAAC;IAC5B,iCAAA,GAAmB,CAAA,CAAE,QAAC,CAAQ,kBAAC,CAAkB,CAAC;IAClD,+BAAA,GAAiB,CAAA,CAAE,QAAC,CAAQ,gBAAC,CAAgB,CAAC;IA6BvD,uBAAC;AAAD,CAJA,AAIC,IAAA;AAED;IACA,gBAAgB;IAChB,gBAAgB,CAAC,KAAK,CAAC;IACvB,gBAAgB;IAChB,gBAAgB,CAAC,gBAAgB,CAAC;IAClC,gBAAgB;IAChB,gBAAgB,CAAC,cAAc,CAAC;AAChC,CAAC","file":"constants.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\n\nimport {createEnumExpression} from '../compiler_util/identifier_util';\nimport {Identifiers} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {ViewType} from '../private_import_core';\nexport class ViewTypeEnum {\n/**\n * @param {?} value\n * @return {?}\n */\nstatic fromValue(value: ViewType): o.Expression {\n    return createEnumExpression(Identifiers.ViewType, value);\n  }\n}\nexport class ViewEncapsulationEnum {\n/**\n * @param {?} value\n * @return {?}\n */\nstatic fromValue(value: ViewEncapsulation): o.Expression {\n    return createEnumExpression(Identifiers.ViewEncapsulation, value);\n  }\n}\nexport class ChangeDetectorStatusEnum {\n/**\n * @param {?} value\n * @return {?}\n */\nstatic fromValue(value: ChangeDetectorStatusEnum): o.Expression {\n    return createEnumExpression(Identifiers.ChangeDetectorStatus, value);\n  }\n}\nexport class ViewConstructorVars {\n  static viewUtils = o.variable('viewUtils');\n  static parentView = o.variable('parentView');\n  static parentIndex = o.variable('parentIndex');\n  static parentElement = o.variable('parentElement');\n}\n\nfunction ViewConstructorVars_tsickle_Closure_declarations() {\n/** @type {?} */\nViewConstructorVars.viewUtils;\n/** @type {?} */\nViewConstructorVars.parentView;\n/** @type {?} */\nViewConstructorVars.parentIndex;\n/** @type {?} */\nViewConstructorVars.parentElement;\n}\n\nexport class ViewProperties {\n  static renderer = o.THIS_EXPR.prop('renderer');\n  static viewUtils = o.THIS_EXPR.prop('viewUtils');\n  static throwOnChange = o.THIS_EXPR.prop('throwOnChange');\n}\n\nfunction ViewProperties_tsickle_Closure_declarations() {\n/** @type {?} */\nViewProperties.renderer;\n/** @type {?} */\nViewProperties.viewUtils;\n/** @type {?} */\nViewProperties.throwOnChange;\n}\n\nexport class InjectMethodVars {\n  static token = o.variable('token');\n  static requestNodeIndex = o.variable('requestNodeIndex');\n  static notFoundResult = o.variable('notFoundResult');\n}\n\nfunction InjectMethodVars_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectMethodVars.token;\n/** @type {?} */\nInjectMethodVars.requestNodeIndex;\n/** @type {?} */\nInjectMethodVars.notFoundResult;\n}\n\n"]}