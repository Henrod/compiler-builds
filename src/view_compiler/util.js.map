{"version":3,"sources":["../../../../../modules/@angular/compiler/src/view_compiler/util.ts"],"names":[],"mappings":"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","file":"util.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompileTokenMetadata} from '../compile_metadata';\nimport {createDiTokenExpression} from '../compiler_util/identifier_util';\nimport * as o from '../output/output_ast';\nimport {ViewType} from '../private_import_core';\n\nimport {CompileView} from './compile_view';\n/**\n * @param {?} property\n * @param {?} callingView\n * @param {?} definedView\n * @return {?}\n */\nexport function getPropertyInView(\n    property: o.Expression, callingView: CompileView, definedView: CompileView): o.Expression {\n  if (callingView === definedView) {\n    return property;\n  } else {\n    let /** @type {?} */ viewProp: o.Expression = o.THIS_EXPR;\n    let /** @type {?} */ currView: CompileView = callingView;\n    while (currView !== definedView && currView.declarationElement.view) {\n      currView = currView.declarationElement.view;\n      viewProp = viewProp.prop('parentView');\n    }\n    if (currView !== definedView) {\n      throw new Error(\n          `Internal error: Could not calculate a property in a parent view: ${property}`);\n    }\n    return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n  }\n}\nclass _ReplaceViewTransformer extends o.ExpressionTransformer {\n/**\n * @param {?} _viewExpr\n * @param {?} _view\n */\nconstructor(private _viewExpr: o.Expression,\nprivate _view: CompileView) { super(); }\n/**\n * @param {?} expr\n * @return {?}\n */\nprivate _isThis(expr: o.Expression): boolean {\n    return expr instanceof o.ReadVarExpr && expr.builtin === o.BuiltinVar.This;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: o.ReadVarExpr, context: any): any {\n    return this._isThis(ast) ? this._viewExpr : ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadPropExpr(ast: o.ReadPropExpr, context: any): any {\n    if (this._isThis(ast.receiver)) {\n      // Note: Don't cast for members of the AppView base class...\n      if (this._view.fields.some((field) => field.name == ast.name) ||\n          this._view.getters.some((field) => field.name == ast.name)) {\n        return this._viewExpr.cast(this._view.classType).prop(ast.name);\n      }\n    }\n    return super.visitReadPropExpr(ast, context);\n  }\n}\n\nfunction _ReplaceViewTransformer_tsickle_Closure_declarations() {\n/** @type {?} */\n_ReplaceViewTransformer.prototype._viewExpr;\n/** @type {?} */\n_ReplaceViewTransformer.prototype._view;\n}\n\n/**\n * @param {?} view\n * @param {?} token\n * @param {?} optional\n * @return {?}\n */\nexport function injectFromViewParentInjector(\n    view: CompileView, token: CompileTokenMetadata, optional: boolean): o.Expression {\n  let /** @type {?} */ viewExpr: o.Expression;\n  if (view.viewType === ViewType.HOST) {\n    viewExpr = o.THIS_EXPR;\n  } else {\n    viewExpr = o.THIS_EXPR.prop('parentView');\n  }\n  const /** @type {?} */ args = [createDiTokenExpression(token), o.THIS_EXPR.prop('parentIndex')];\n  if (optional) {\n    args.push(o.NULL_EXPR);\n  }\n  return viewExpr.callMethod('injectorGet', args);\n}\n/**\n * @param {?} elementIndex\n * @return {?}\n */\nexport function getHandleEventMethodName(elementIndex: number): string {\n  return `handleEvent_${elementIndex}`;\n}\n"]}