{"version":3,"sources":["../../../../modules/@angular/compiler/src/ng_module_resolver.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;;;;AAEH,OAAO,EAAA,QAAE,EAAc,MAAA,qBAAA,CAAA;AAEvB,OAAO,EAAA,WAAE,EAAW,MAAA,qBAAA,CAAA;AACpB,OAAO,EAAA,SAAE,EAAS,MAAA,eAAA,CAAA;AAClB,OAAO,EAAA,kBAAE,EAAkB,MAAA,cAAA,CAAA;AAC3B,OAAO,EAAA,eAAE,EAAgB,SAAA,EAAU,MAAA,uBAAA,CAAA;AACnC;;;GAGG;AACH,6BAHC,GAAA;IAIC,MAAM,CAHC,GAAA,YAAe,QAAA,CAAS;AAIjC,CAAC;AACD;;GAEG;AAEH,IAAa,gBAAgB,GAA7B;IACA;;OAEG;IACH,YALsB,aAA8B,SAAA;QAA9B,eAAA,GAAA,UAAA,CAA8B;IAAU,CAAA;IAM9D;;;OAGG;IACH,UARG,CAAA,IAAA,IAAuB,MAAA,CAAO,IAAA,CAAK,UAAC,CAAU,WAAC,CAAW,IAAC,CAAI,CAAC,IAAC,CAAI,mBAAC,CAAmB,CAAC,CAAC,CAAA;IAS9F;;;;OAIG;IACH,OAZG,CAAA,IAAA,EAAA,eAAA,GAAA,IAAA;QAaC,MAAM,gBAAgB,CAZhB,YAAA,GAaF,WAAW,CAZC,QAAC,CAAQ,IAAC,CAAI,UAAC,CAAU,WAAC,CAAW,IAAC,CAAI,EAAE,mBAAA,CAAoB,CAAC;QAcjF,EAAE,CAAC,CAAC,YAZC,CAAY,CAAC,CAAA;YAahB,MAAM,CAZC,YAAA,CAAa;QAatB,CAAC;QAZC,IAAA,CAAK,CAAA;YAaL,EAAE,CAAC,CAAC,eAZC,CAAe,CAAC,CAAA;gBAanB,MAZM,IAAI,KAAA,CAAM,mCAAC,SAAmC,CAAS,IAAC,CAAI,IAAC,CAAI,CAAC;YAa1E,CAAC;YACD,MAAM,CAZC,IAAA,CAAK;QAad,CAAC;IACH,CAAC;CACF,CAAA;AA5BY,gBAAgB;IAH5B,kBAAA,EAAA;yDAEiC,eAAA,oBAAA,eAAA;GACrB,gBAAgB,CA4B5B;SA5BY,gBAAgB;AA8B7B;IACA,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC;AACtC,CAAC","file":"ng_module_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, Type} from '@angular/core/index';\n\nimport {ListWrapper} from './facade/collection';\nimport {stringify} from './facade/lang';\nimport {CompilerInjectable} from './injectable';\nimport {ReflectorReader, reflector} from './private_import_core';\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj: any): obj is NgModule {\n  return obj instanceof NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\n@CompilerInjectable()\nexport class NgModuleResolver {\n/**\n * @param {?=} _reflector\n */\nconstructor(private _reflector: ReflectorReader = reflector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nisNgModule(type: any) { return this._reflector.annotations(type).some(_isNgModuleMetadata); }\n/**\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): NgModule {\n    const /** @type {?} */ ngModuleMeta: NgModule =\n        ListWrapper.findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n\n    if (ngModuleMeta) {\n      return ngModuleMeta;\n    } else {\n      if (throwIfNotFound) {\n        throw new Error(`No NgModule metadata found for '${stringify(type)}'.`);\n      }\n      return null;\n    }\n  }\n}\n\nfunction NgModuleResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleResolver.prototype._reflector;\n}\n\n"]}