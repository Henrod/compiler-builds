{"version":3,"sources":["../../../../modules/@angular/compiler/src/selector.ts"],"names":[],"mappings":"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","file":"selector.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +  // \"[name]\", \"[name=value]\"\n        '(\\\\))|' +                                 // \")\"\n        '(\\\\s*,\\\\s*)',                             // \",\"\n    'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n/**\n * @param {?} selector\n * @return {?}\n */\nstatic parse(selector: string): CssSelector[] {\n    const /** @type {?} */ results: CssSelector[] = [];\n    const /** @type {?} */ _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let /** @type {?} */ cssSelector = new CssSelector();\n    let /** @type {?} */ match: string[];\n    let /** @type {?} */ current = cssSelector;\n    let /** @type {?} */ inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (match[6]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[7]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n/**\n * @return {?}\n */\nisElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n/**\n * @return {?}\n */\nhasElementSelector(): boolean { return !!this.element; }\n/**\n * @param {?=} element\n * @return {?}\n */\nsetElement(element: string = null) { this.element = element; }\n/**\n * Gets a template string for an element that matches the selector.\n * @return {?}\n */\ngetMatchingElementTemplate(): string {\n    const /** @type {?} */ tagName = this.element || 'div';\n    const /** @type {?} */ classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let /** @type {?} */ attrs = '';\n    for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n      const /** @type {?} */ attrName = this.attrs[i];\n      const /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n/**\n * @param {?} name\n * @param {?=} value\n * @return {?}\n */\naddAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\naddClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n        const /** @type {?} */ name = this.attrs[i];\n        const /** @type {?} */ value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\nfunction CssSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nCssSelector.prototype.element;\n/** @type {?} */\nCssSelector.prototype.classNames;\n/** @type {?} */\nCssSelector.prototype.attrs;\n/** @type {?} */\nCssSelector.prototype.notSelectors;\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n/**\n * @param {?} notSelectors\n * @return {?}\n */\nstatic createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const /** @type {?} */ notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\nprivate _elementMap = new Map<string, SelectorContext[]>();\nprivate _elementPartialMap = new Map<string, SelectorMatcher>();\nprivate _classMap = new Map<string, SelectorContext[]>();\nprivate _classPartialMap = new Map<string, SelectorMatcher>();\nprivate _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\nprivate _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\nprivate _listContexts: SelectorListContext[] = [];\n/**\n * @param {?} cssSelectors\n * @param {?=} callbackCtxt\n * @return {?}\n */\naddSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let /** @type {?} */ listContext: SelectorListContext = null;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n/**\n * Add an object that can be found later on by calling `match`.\n * @param {?} cssSelector A css selector\n * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n * @param {?} listContext\n * @return {?}\n */\nprivate _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let /** @type {?} */ matcher: SelectorMatcher = this;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n    const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const /** @type {?} */ className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ isTerminal = i === attrs.length - 2;\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n        if (isTerminal) {\n          const /** @type {?} */ terminalMap = matcher._attrValueMap;\n          let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n          let /** @type {?} */ partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @param {?} selectable\n * @return {?}\n */\nprivate _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let /** @type {?} */ terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @return {?}\n */\nprivate _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let /** @type {?} */ matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n/**\n * Find the objects that have been added via `addSelectable`\n * whose css selector is contained in the given css selector.\n * @param {?} cssSelector A css selector\n * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n * @return {?} boolean true if a match was found\n */\nmatch(cssSelector: CssSelector, matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = false;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n\n    for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n\n        const /** @type {?} */ terminalValuesMap = this._attrValueMap.get(name);\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const /** @type {?} */ partialValuesMap = this._attrValuePartialMap.get(name);\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let /** @type {?} */ selectables: SelectorContext[] = map.get(name) || [];\n    const /** @type {?} */ starSelectables: SelectorContext[] = map.get('*');\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let /** @type {?} */ selectable: SelectorContext;\n    let /** @type {?} */ result = false;\n    for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const /** @type {?} */ nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorMatcher.prototype._elementMap;\n/** @type {?} */\nSelectorMatcher.prototype._elementPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._classMap;\n/** @type {?} */\nSelectorMatcher.prototype._classPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValueMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValuePartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._listContexts;\n}\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n/**\n * @param {?} selectors\n */\nconstructor(public selectors: CssSelector[]) {}\n}\n\nfunction SelectorListContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorListContext.prototype.alreadyMatched;\n/** @type {?} */\nSelectorListContext.prototype.selectors;\n}\n\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n/**\n * @param {?} selector\n * @param {?} cbContext\n * @param {?} listContext\n */\nconstructor(\npublic selector: CssSelector,\npublic cbContext: any,\npublic listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n/**\n * @param {?} cssSelector\n * @param {?} callback\n * @return {?}\n */\nfinalize(cssSelector: CssSelector, callback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n\nfunction SelectorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorContext.prototype.notSelectors;\n/** @type {?} */\nSelectorContext.prototype.selector;\n/** @type {?} */\nSelectorContext.prototype.cbContext;\n/** @type {?} */\nSelectorContext.prototype.listContext;\n}\n\n"]}