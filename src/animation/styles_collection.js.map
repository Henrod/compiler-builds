{"version":3,"sources":["../../../../../modules/@angular/compiler/src/animation/styles_collection.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,SAAE,EAAS,MAAA,gBAAA,CAAA;AAClB,MACC;IAAD;;;OAGG;IACH,YAHqB,IAAM,EAAe,KAAe;QAApC,SAAA,GAAA,IAAA,CAAM;QAAe,UAAA,GAAA,KAAA,CAAe;IAAM,CAAA;IAK/D;;;;OAIG;IACH,OARG,CAAA,IAAA,EAAA,KAAA;QASC,MAAM,CARC,IAAA,IAAQ,IAAA,CAAK,IAAC,IAAO,KAAA,IAAS,IAAA,CAAK,KAAC,CAAK;IASlD,CAAC;CACF;AAED;IACA,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC;IACrC,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,KAAK,CAAC;AACtC,CAAC;AAED,MAfC;IAeD;QACE,WAAM,GAf6C,EAAA,CAAG;IAmExD,CAAC;IAnDD;;;;;OAKG;IACH,YApBG,CAAA,QAAA,EAAA,IAAA,EAAA,KAAA;QAqBC,MAAM,gBAAgB,CApBhB,KAAA,GAAQ,IAAI,qBAAA,CAAsB,IAAC,EAAK,KAAA,CAAM,CAAC;QAqBrD,IAAI,gBAAgB,CApBhB,OAAA,GAAU,IAAA,CAAK,MAAC,CAAM,QAAC,CAAQ,CAAC;QAqBpC,EAAE,CAAC,CAAC,CApBC,SAAC,CAAS,OAAC,CAAO,CAAC,CAAC,CAAA;YAqBvB,OAAO,GApBG,IAAA,CAAK,MAAC,CAAM,QAAC,CAAQ,GAAG,EAAA,CAAG;QAqBvC,CAAC;QAED,6CAA6C;QAC7C,iCAAiC;QACjC,IAAI,gBAAgB,CApBhB,cAAA,GAAiB,CAAA,CAAE;QAqBvB,GAAG,CAAC,CAAC,IApBC,gBAAA,CAAG,CAAA,GAAI,OAAA,CAAQ,MAAC,GAAQ,CAAA,EAAG,CAAA,IAAK,CAAA,EAAG,CAAA,EAAE,EAAG,CAAA;YAqB5C,EAAE,CAAC,CAAC,OApBC,CAAO,CAAC,CAAC,CAAC,IAAC,IAAO,IAAA,CAAK,CAAC,CAAA;gBAqB3B,cAAc,GApBG,CAAA,GAAI,CAAA,CAAE;gBAqBvB,KAAK,CAAC;YACR,CAAC;QACH,CAAC;QAED,OAAO,CApBC,MAAC,CAAM,cAAC,EAAe,CAAA,EAAG,KAAA,CAAM,CAAC;IAqB3C,CAAC;IACH;;;;OAIG;IACH,UAxBG,CAAA,QAAA,EAAA,KAAA;QAyBC,MAAM,gBAAgB,CAxBhB,KAAA,GAAQ,IAAA,CAAK,MAAC,CAAM,QAAC,CAAQ,CAAC;QAyBpC,EAAE,CAAC,CAAC,SAxBC,CAAS,KAAC,CAAK,CAAC,CAAC,CAAA;YAyBpB,MAAM,CAxBC,KAAA,IAAS,KAAA,CAAM,MAAC,GAAQ,IAAA,GAAO,KAAA,CAAM,KAAC,CAAK,CAAC;QAyBrD,CAAC;QACD,MAAM,CAxBC,IAAA,CAAK;IAyBd,CAAC;IACH;;;;OAIG;IACH,qBA5BG,CAAA,QAAA,EAAA,IAAA;QA6BC,MAAM,gBAAgB,CA5BhB,OAAA,GAAU,IAAA,CAAK,MAAC,CAAM,QAAC,CAAQ,CAAC;QA6BtC,EAAE,CAAC,CAAC,SA5BC,CAAS,OAAC,CAAO,CAAC,CAAC,CAAA;YA6BtB,GAAG,CAAC,CAAC,IA5BC,gBAAA,CAAG,CAAA,GAAI,OAAA,CAAQ,MAAC,GAAQ,CAAA,EAAG,CAAA,IAAK,CAAA,EAAG,CAAA,EAAE,EAAG,CAAA;gBA6B5C,EAAE,CAAC,CAAC,OA5BC,CAAO,CAAC,CAAC,CAAC,IAAC,IAAO,IAAA,CAAK;oBAAC,MAAA,CAAO,CAAA,CAAE;YA6BxC,CAAC;QACH,CAAC;QACD,MAAM,CA5BC,IAAA,CAAK;IA6Bd,CAAC;CACF;AAED;IACA,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;AAClC,CAAC","file":"styles_collection.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPresent} from '../facade/lang';\nexport class StylesCollectionEntry {\n/**\n * @param {?} time\n * @param {?} value\n */\nconstructor(public time: number,\npublic value: string|number) {}\n/**\n * @param {?} time\n * @param {?} value\n * @return {?}\n */\nmatches(time: number, value: string|number): boolean {\n    return time == this.time && value == this.value;\n  }\n}\n\nfunction StylesCollectionEntry_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCollectionEntry.prototype.time;\n/** @type {?} */\nStylesCollectionEntry.prototype.value;\n}\n\nexport class StylesCollection {\n  styles: {[key: string]: StylesCollectionEntry[]} = {};\n/**\n * @param {?} property\n * @param {?} time\n * @param {?} value\n * @return {?}\n */\ninsertAtTime(property: string, time: number, value: string|number) {\n    const /** @type {?} */ tuple = new StylesCollectionEntry(time, value);\n    let /** @type {?} */ entries = this.styles[property];\n    if (!isPresent(entries)) {\n      entries = this.styles[property] = [];\n    }\n\n    // insert this at the right stop in the array\n    // this way we can keep it sorted\n    let /** @type {?} */ insertionIndex = 0;\n    for (let /** @type {?} */ i = entries.length - 1; i >= 0; i--) {\n      if (entries[i].time <= time) {\n        insertionIndex = i + 1;\n        break;\n      }\n    }\n\n    entries.splice(insertionIndex, 0, tuple);\n  }\n/**\n * @param {?} property\n * @param {?} index\n * @return {?}\n */\ngetByIndex(property: string, index: number): StylesCollectionEntry {\n    const /** @type {?} */ items = this.styles[property];\n    if (isPresent(items)) {\n      return index >= items.length ? null : items[index];\n    }\n    return null;\n  }\n/**\n * @param {?} property\n * @param {?} time\n * @return {?}\n */\nindexOfAtOrBeforeTime(property: string, time: number): number {\n    const /** @type {?} */ entries = this.styles[property];\n    if (isPresent(entries)) {\n      for (let /** @type {?} */ i = entries.length - 1; i >= 0; i--) {\n        if (entries[i].time <= time) return i;\n      }\n    }\n    return null;\n  }\n}\n\nfunction StylesCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCollection.prototype.styles;\n}\n\n"]}