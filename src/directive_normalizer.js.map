{"version":3,"sources":["../../../../modules/@angular/compiler/src/directive_normalizer.ts"],"names":[],"mappings":"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","file":"directive_normalizer.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '@angular/core/index';\n\nimport {CompileAnimationEntryMetadata, CompileDirectiveMetadata, CompileStylesheetMetadata, CompileTemplateMetadata} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {stringify} from './facade/lang';\nimport {CompilerInjectable} from './injectable';\nimport * as html from './ml_parser/ast';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {InterpolationConfig} from './ml_parser/interpolation_config';\nimport {ResourceLoader} from './resource_loader';\nimport {extractStyleUrls, isStyleUrlResolvable} from './style_url_resolver';\nimport {PreparsedElementType, preparseElement} from './template_parser/template_preparser';\nimport {UrlResolver} from './url_resolver';\nimport {SyncAsyncResult, syntaxError} from './util';\n\nexport interface PrenormalizedTemplateMetadata {\n  componentType: any;\n  moduleUrl: string;\n  template?: string;\n  templateUrl?: string;\n  styles?: string[];\n  styleUrls?: string[];\n  interpolation?: [string, string];\n  encapsulation?: ViewEncapsulation;\n  animations?: CompileAnimationEntryMetadata[];\n}\n@CompilerInjectable()\nexport class DirectiveNormalizer {\nprivate _resourceLoaderCache = new Map<string, Promise<string>>();\n/**\n * @param {?} _resourceLoader\n * @param {?} _urlResolver\n * @param {?} _htmlParser\n * @param {?} _config\n */\nconstructor(\nprivate _resourceLoader: ResourceLoader,\nprivate _urlResolver: UrlResolver,\nprivate _htmlParser: HtmlParser,\nprivate _config: CompilerConfig) {}\n/**\n * @return {?}\n */\nclearCache(): void { this._resourceLoaderCache.clear(); }\n/**\n * @param {?} normalizedDirective\n * @return {?}\n */\nclearCacheFor(normalizedDirective: CompileDirectiveMetadata): void {\n    if (!normalizedDirective.isComponent) {\n      return;\n    }\n    this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n    normalizedDirective.template.externalStylesheets.forEach(\n        (stylesheet) => { this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nprivate _fetch(url: string): Promise<string> {\n    let /** @type {?} */ result = this._resourceLoaderCache.get(url);\n    if (!result) {\n      result = this._resourceLoader.get(url);\n      this._resourceLoaderCache.set(url, result);\n    }\n    return result;\n  }\n/**\n * @param {?} prenormData\n * @return {?}\n */\nnormalizeTemplate(prenormData: PrenormalizedTemplateMetadata):\n      SyncAsyncResult<CompileTemplateMetadata> {\n    let /** @type {?} */ normalizedTemplateSync: CompileTemplateMetadata = null;\n    let /** @type {?} */ normalizedTemplateAsync: Promise<CompileTemplateMetadata>;\n    if (prenormData.template != null) {\n      if (typeof prenormData.template !== 'string') {\n        throw syntaxError(\n            `The template specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n      normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n      normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n    } else if (prenormData.templateUrl) {\n      if (typeof prenormData.templateUrl !== 'string') {\n        throw syntaxError(\n            `The templateUrl specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n      normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n    } else {\n      throw syntaxError(\n          `No template specified for component ${stringify(prenormData.componentType)}`);\n    }\n\n    if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n      // sync case\n      return new SyncAsyncResult(normalizedTemplateSync);\n    } else {\n      // async case\n      return new SyncAsyncResult(\n          null, normalizedTemplateAsync.then(\n                    (normalizedTemplate) => this.normalizeExternalStylesheets(normalizedTemplate)));\n    }\n  }\n/**\n * @param {?} prenomData\n * @return {?}\n */\nnormalizeTemplateSync(prenomData: PrenormalizedTemplateMetadata): CompileTemplateMetadata {\n    return this.normalizeLoadedTemplate(prenomData, prenomData.template, prenomData.moduleUrl);\n  }\n/**\n * @param {?} prenomData\n * @return {?}\n */\nnormalizeTemplateAsync(prenomData: PrenormalizedTemplateMetadata):\n      Promise<CompileTemplateMetadata> {\n    const /** @type {?} */ templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n    return this._fetch(templateUrl)\n        .then((value) => this.normalizeLoadedTemplate(prenomData, value, templateUrl));\n  }\n/**\n * @param {?} prenomData\n * @param {?} template\n * @param {?} templateAbsUrl\n * @return {?}\n */\nnormalizeLoadedTemplate(\n      prenomData: PrenormalizedTemplateMetadata, template: string,\n      templateAbsUrl: string): CompileTemplateMetadata {\n    const /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(prenomData.interpolation);\n    const /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(\n        template, stringify(prenomData.componentType), true, interpolationConfig);\n    if (rootNodesAndErrors.errors.length > 0) {\n      const /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    const /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n      styles: prenomData.styles,\n      styleUrls: prenomData.styleUrls,\n      moduleUrl: prenomData.moduleUrl\n    }));\n\n    const /** @type {?} */ visitor = new TemplatePreparseVisitor();\n    html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n    const /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata(\n        {styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl}));\n\n    let /** @type {?} */ encapsulation = prenomData.encapsulation;\n    if (encapsulation == null) {\n      encapsulation = this._config.defaultEncapsulation;\n    }\n\n    const /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n    const /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n\n    if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n        styleUrls.length === 0) {\n      encapsulation = ViewEncapsulation.None;\n    }\n\n    return new CompileTemplateMetadata({\n      encapsulation,\n      template,\n      templateUrl: templateAbsUrl, styles, styleUrls,\n      ngContentSelectors: visitor.ngContentSelectors,\n      animations: prenomData.animations,\n      interpolation: prenomData.interpolation,\n    });\n  }\n/**\n * @param {?} templateMeta\n * @return {?}\n */\nnormalizeExternalStylesheets(templateMeta: CompileTemplateMetadata):\n      Promise<CompileTemplateMetadata> {\n    return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n        .then((externalStylesheets) => new CompileTemplateMetadata({\n                encapsulation: templateMeta.encapsulation,\n                template: templateMeta.template,\n                templateUrl: templateMeta.templateUrl,\n                styles: templateMeta.styles,\n                styleUrls: templateMeta.styleUrls,\n                externalStylesheets: externalStylesheets,\n                ngContentSelectors: templateMeta.ngContentSelectors,\n                animations: templateMeta.animations,\n                interpolation: templateMeta.interpolation\n              }));\n  }\n/**\n * @param {?} styleUrls\n * @param {?=} loadedStylesheets\n * @return {?}\n */\nprivate _loadMissingExternalStylesheets(\n      styleUrls: string[],\n      loadedStylesheets:\n          Map<string, CompileStylesheetMetadata> = new Map<string, CompileStylesheetMetadata>()):\n      Promise<CompileStylesheetMetadata[]> {\n    return Promise\n        .all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n                 .map(styleUrl => this._fetch(styleUrl).then((loadedStyle) => {\n                   const /** @type {?} */ stylesheet = this.normalizeStylesheet(\n                       new CompileStylesheetMetadata({styles: [loadedStyle], moduleUrl: styleUrl}));\n                   loadedStylesheets.set(styleUrl, stylesheet);\n                   return this._loadMissingExternalStylesheets(\n                       stylesheet.styleUrls, loadedStylesheets);\n                 })))\n        .then((_) => Array.from(loadedStylesheets.values()));\n  }\n/**\n * @param {?} stylesheet\n * @return {?}\n */\nnormalizeStylesheet(stylesheet: CompileStylesheetMetadata): CompileStylesheetMetadata {\n    const /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                             .map(url => this._urlResolver.resolve(stylesheet.moduleUrl, url));\n\n    const /** @type {?} */ allStyles = stylesheet.styles.map(style => {\n      const /** @type {?} */ styleWithImports = extractStyleUrls(this._urlResolver, stylesheet.moduleUrl, style);\n      allStyleUrls.push(...styleWithImports.styleUrls);\n      return styleWithImports.style;\n    });\n\n    return new CompileStylesheetMetadata(\n        {styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl});\n  }\n}\n\nfunction DirectiveNormalizer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectiveNormalizer.prototype._resourceLoaderCache;\n/** @type {?} */\nDirectiveNormalizer.prototype._resourceLoader;\n/** @type {?} */\nDirectiveNormalizer.prototype._urlResolver;\n/** @type {?} */\nDirectiveNormalizer.prototype._htmlParser;\n/** @type {?} */\nDirectiveNormalizer.prototype._config;\n}\n\nclass TemplatePreparseVisitor implements html.Visitor {\n  ngContentSelectors: string[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngNonBindableStackCount: number = 0;\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: html.Element, context: any): any {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    switch (preparsedElement.type) {\n      case PreparsedElementType.NG_CONTENT:\n        if (this.ngNonBindableStackCount === 0) {\n          this.ngContentSelectors.push(preparsedElement.selectAttr);\n        }\n        break;\n      case PreparsedElementType.STYLE:\n        let /** @type {?} */ textContent = '';\n        ast.children.forEach(child => {\n          if (child instanceof html.Text) {\n            textContent += child.value;\n          }\n        });\n        this.styles.push(textContent);\n        break;\n      case PreparsedElementType.STYLESHEET:\n        this.styleUrls.push(preparsedElement.hrefAttr);\n        break;\n      default:\n        break;\n    }\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount++;\n    }\n    html.visitAll(this, ast.children);\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount--;\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(ast: html.Expansion, context: any): any { html.visitAll(this, ast.cases); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(ast: html.ExpansionCase, context: any): any {\n    html.visitAll(this, ast.expression);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitComment(ast: html.Comment, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(ast: html.Attribute, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: html.Text, context: any): any { return null; }\n}\n\nfunction TemplatePreparseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplatePreparseVisitor.prototype.ngContentSelectors;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.styles;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.styleUrls;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.ngNonBindableStackCount;\n}\n\n"]}