{"version":3,"sources":["../../../../modules/@angular/compiler/src/style_compiler.ts"],"names":[],"mappings":"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","file":"style_compiler.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileStylesheetMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nimport {CompilerInjectable} from './injectable';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {UrlResolver} from './url_resolver';\n\nconst /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nconst /** @type {?} */ HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst /** @type {?} */ CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nexport class StylesCompileDependency {\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} isShimmed\n * @param {?} valuePlaceholder\n */\nconstructor(\npublic name: string,\npublic moduleUrl: string,\npublic isShimmed: boolean,\npublic valuePlaceholder: CompileIdentifierMetadata) {}\n}\n\nfunction StylesCompileDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCompileDependency.prototype.name;\n/** @type {?} */\nStylesCompileDependency.prototype.moduleUrl;\n/** @type {?} */\nStylesCompileDependency.prototype.isShimmed;\n/** @type {?} */\nStylesCompileDependency.prototype.valuePlaceholder;\n}\n\nexport class StylesCompileResult {\n/**\n * @param {?} componentStylesheet\n * @param {?} externalStylesheets\n */\nconstructor(\npublic componentStylesheet: CompiledStylesheet,\npublic externalStylesheets: CompiledStylesheet[]) {}\n}\n\nfunction StylesCompileResult_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCompileResult.prototype.componentStylesheet;\n/** @type {?} */\nStylesCompileResult.prototype.externalStylesheets;\n}\n\nexport class CompiledStylesheet {\n/**\n * @param {?} statements\n * @param {?} stylesVar\n * @param {?} dependencies\n * @param {?} isShimmed\n * @param {?} meta\n */\nconstructor(\npublic statements: o.Statement[],\npublic stylesVar: string,\npublic dependencies: StylesCompileDependency[],\npublic isShimmed: boolean,\npublic meta: CompileStylesheetMetadata) {}\n}\n\nfunction CompiledStylesheet_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledStylesheet.prototype.statements;\n/** @type {?} */\nCompiledStylesheet.prototype.stylesVar;\n/** @type {?} */\nCompiledStylesheet.prototype.dependencies;\n/** @type {?} */\nCompiledStylesheet.prototype.isShimmed;\n/** @type {?} */\nCompiledStylesheet.prototype.meta;\n}\n\n@CompilerInjectable()\nexport class StyleCompiler {\nprivate _shadowCss: ShadowCss = new ShadowCss();\n/**\n * @param {?} _urlResolver\n */\nconstructor(private _urlResolver: UrlResolver) {}\n/**\n * @param {?} comp\n * @return {?}\n */\ncompileComponent(comp: CompileDirectiveMetadata): StylesCompileResult {\n    const /** @type {?} */ externalStylesheets: CompiledStylesheet[] = [];\n    const /** @type {?} */ componentStylesheet: CompiledStylesheet = this._compileStyles(\n        comp, new CompileStylesheetMetadata({\n          styles: comp.template.styles,\n          styleUrls: comp.template.styleUrls,\n          moduleUrl: identifierModuleUrl(comp.type)\n        }),\n        true);\n    comp.template.externalStylesheets.forEach((stylesheetMeta) => {\n      const /** @type {?} */ compiledStylesheet = this._compileStyles(comp, stylesheetMeta, false);\n      externalStylesheets.push(compiledStylesheet);\n    });\n    return new StylesCompileResult(componentStylesheet, externalStylesheets);\n  }\n/**\n * @param {?} comp\n * @param {?} stylesheet\n * @param {?} isComponentStylesheet\n * @return {?}\n */\nprivate _compileStyles(\n      comp: CompileDirectiveMetadata, stylesheet: CompileStylesheetMetadata,\n      isComponentStylesheet: boolean): CompiledStylesheet {\n    const /** @type {?} */ shim = comp.template.encapsulation === ViewEncapsulation.Emulated;\n    const /** @type {?} */ styleExpressions =\n        stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    const /** @type {?} */ dependencies: StylesCompileDependency[] = [];\n    for (let /** @type {?} */ i = 0; i < stylesheet.styleUrls.length; i++) {\n      const /** @type {?} */ identifier: CompileIdentifierMetadata = {reference: null};\n      dependencies.push(new StylesCompileDependency(\n          getStylesVarName(null), stylesheet.styleUrls[i], shim, identifier));\n      styleExpressions.push(new o.ExternalExpr(identifier));\n    }\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    const /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n    const /** @type {?} */ stmt = o.variable(stylesVar)\n                     .set(o.literalArr(\n                         styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                     .toDeclStmt(null, [o.StmtModifier.Final]);\n    return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n  }\n/**\n * @param {?} style\n * @param {?} shim\n * @return {?}\n */\nprivate _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\n}\n\nfunction StyleCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleCompiler.prototype._shadowCss;\n/** @type {?} */\nStyleCompiler.prototype._urlResolver;\n}\n\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component: CompileDirectiveMetadata): string {\n  let /** @type {?} */ result = `styles`;\n  if (component) {\n    result += `_${identifierName(component.type)}`;\n  }\n  return result;\n}\n"]}